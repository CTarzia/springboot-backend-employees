import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-02-06T20:05:03.727-03:00[America/Argentina/Buenos_Aires]
 * <br>
 * The generated test suite contains 1696 tests
 * <br>
 * Covered targets: 1953
 * <br>
 * Used time: 0h 24m 25s
 * <br>
 * Needed budget for current results: 100%
 * <br>
 * This file contains test cases that represent failed calls, but not indicative of faults.
 */
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new org.evomaster.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    /**
    * rso - response structure oracle - checking that the response objects match the responses defined in the schema
    */
    private static boolean rso = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/195")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/5030746658944255871")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_1849_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1852_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_1851_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1854_XYZ_")
                .delete(baseUrlOfSut + "/employees/252?EMextraParam123=_EM_1853_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/89")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4993_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4995_XYZ_")
                .get(baseUrlOfSut + "/employees/44?EMextraParam123=_EM_4994_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4997_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_4996_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4999_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_4998_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/27?EMextraParam123=_EM_7801_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7803_XYZ_")
                .delete(baseUrlOfSut + "/employees/750?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7808_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7804_XYZ_\", " + 
                    " \"firstName\": \"_EM_7805_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_7290_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/-6880059734461483212?EMextraParam123=_EM_7291_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7293_XYZ_")
                .get(baseUrlOfSut + "/employees/858")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_7294_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_7298_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_5424_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5427_XYZ_\", " + 
                    " \"id\": 965 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/965?EMextraParam123=_EM_5429_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_11507_XYZ_\", " + 
                    " \"lastName\": \"_EM_11508_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/499")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/-8808227743148086372")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 566 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/566"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 699 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/699"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 750 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/750"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_11() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/804"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 842 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/842"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_13() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 457308562 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/457308562"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_14() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/569"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/601"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 717 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/717?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 701 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/701"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -7414 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-7414"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1015779976 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1015779976"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/2097930"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 9 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/9?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 778 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 265 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/265?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/766"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-989392687"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-989392689"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-989392687"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-989392687"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/389711929"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -6012014749332900186 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6012014749332900186"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 837 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/837"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/492"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/620?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/620?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 877 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/877?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 396 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/396"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/305"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/854?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 208 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/208"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/985"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1435934471 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1435934471?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7721_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7723_XYZ_")
                .delete(baseUrlOfSut + "/employees/66?EMextraParam123=_EM_7722_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_43() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 608 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/608?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_44() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_118_XYZ_\", " + 
                    " \"id\": 867 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_118_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/867"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_45() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"u2eB1pEZ8vCoJ\", " + 
                    " \"id\": 684 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("u2eB1pEZ8vCoJ"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_139_XYZ_\", " + 
                    " \"id\": 684 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/684?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_46() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_215_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_215_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/608?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_47() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_187_XYZ_\", " + 
                    " \"id\": -130298 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_187_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130298"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_48() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_642_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_642_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/129"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_49() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_800_XYZ_\", " + 
                    " \"id\": 641 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_800_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/641?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_50() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_595_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_595_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/393?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_51() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -8387850, " + 
                    " \"lastName\": \"_EM_922_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_922_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8387850"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_52() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1176_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1176_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1745220639"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_53() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 196 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1195_XYZ_\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_54() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1346_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1346_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-782497616"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_55() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_1392_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1392_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_56() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1763_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/8859410824243435995"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_57() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 643, " + 
                    " \"lastName\": \"_EM_1384_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1384_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/643"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_58() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1903_XYZ_\", " + 
                    " \"id\": 42 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1903_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/42?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_59() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1989_XYZ_\", " + 
                    " \"id\": 856 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1989_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/856?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_60() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2213_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2213_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/616"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_61() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -268435071, " + 
                    " \"lastName\": \"_EM_2314_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2314_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-268435071?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_62() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1155, " + 
                    " \"lastName\": \"_EM_1384_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1384_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1155?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_63() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 2128035314, " + 
                    " \"lastName\": \"_EM_2403_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2403_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2128035314?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_64() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 131, " + 
                    " \"lastName\": \"_EM_1384_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1384_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/131?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_65() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2463_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2463_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/8"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_66() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2965_XYZ_\", " + 
                    " \"id\": 687 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2965_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/687?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_67() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3041_XYZ_\", " + 
                    " \"id\": 149 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3041_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/149"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_68() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 385, " + 
                    " \"lastName\": \"_EM_2314_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2314_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/385?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_69() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 4611686018427387904, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427387904?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_70() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_3279_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3279_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/153"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_71() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 385, " + 
                    " \"lastName\": \"_EM_2314_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2314_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/385"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_72() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2891_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2891_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/258"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_73() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_3353_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3353_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/715"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_74() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3412_XYZ_\", " + 
                    " \"id\": 232 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3412_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/232"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_75() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 241 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"ydeDk\", " + 
                    " \"id\": 241 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/241?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_76() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 67109511, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/67109511"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_77() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 67105927, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/67105927?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_78() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3693_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3693_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1984498110?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_79() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_3778_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3778_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/992?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_80() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3856_XYZ_\", " + 
                    " \"id\": -145409987 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3856_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145409987"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_81() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 210, " + 
                    " \"lastName\": \"_EM_3891_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3891_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/210"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_82() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 275, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/275?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_83() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1047933, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047933?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_84() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"NmtrJpFtsI_1zO\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("NmtrJpFtsI_1zO"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145409939?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_85() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145409987?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_86() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 385, " + 
                    " \"lastName\": \"_EM_2314_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2314_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/385"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_87() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145409987?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_88() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1409, " + 
                    " \"lastName\": \"_EM_2314_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2314_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1409"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_89() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1417, " + 
                    " \"lastName\": \"_EM_2314_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2314_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1417?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_90() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_4475_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4475_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/719?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_91() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 75, " + 
                    " \"lastName\": \"_EM_4533_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4533_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/75"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_92() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4707_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_93() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -145409987 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145409987?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_94() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4884_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4884_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 277 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/277?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_95() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_4910_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4910_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/72?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_96() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -246, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-246?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_97() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"HPiZQlsi8DEuOC\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("HPiZQlsi8DEuOC"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/464?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_98() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5299_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5299_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/433?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_99() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5301_XYZ_\", " + 
                    " \"id\": 4677322589577744561 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5301_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4677322589577744561?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_100() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_101() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5509_XYZ_\", " + 
                    " \"id\": -15606 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_102() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_5559_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5559_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/8869525897174942418"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_103() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5897_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5897_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/426068189"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_104() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5918_XYZ_\", " + 
                    " \"id\": 612 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5918_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/612"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_105() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 417, " + 
                    " \"lastName\": \"_EM_2314_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2314_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/417?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_106() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1043702"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_107() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6100_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6100_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/304"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_108() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"ZUXL7c3i\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("ZUXL7c3i"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/622"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_109() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_110() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_111() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6652_XYZ_\", " + 
                    " \"id\": -1047798 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6652_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_112() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_113() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_114() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6888_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6888_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/399"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_115() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"ZOudBs2gzrRQKB\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/736"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_116() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 978, " + 
                    " \"lastName\": \"_EM_7311_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7311_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/978?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_117() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7332_XYZ_\", " + 
                    " \"id\": 959 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7332_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/959?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_118() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 186, " + 
                    " \"lastName\": \"s\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("s"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/186"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_119() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7567_XYZ_\", " + 
                    " \"id\": -386738078 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7567_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-386738078?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_120() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"vbFTV0y0O\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("vbFTV0y0O"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/427"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_121() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7617_XYZ_\", " + 
                    " \"id\": 442 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7617_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7619_XYZ_\", " + 
                    " \"id\": 442 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/442"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_122() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7630_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7630_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/792?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_123() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/33555210?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_124() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7923_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7923_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/590?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_125() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8514_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8514_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/954"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_126() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 368, " + 
                    " \"lastName\": \"_EM_8588_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8588_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/368?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_127() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6024_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6024_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6027_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_128() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8618_XYZ_\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8618_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6027_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_129() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 636, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/636?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_130() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 636, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/636?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_131() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 636, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/636?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_132() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -2096516, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2096516?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_133() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 700, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/700"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_134() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -7492, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-7492?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_135() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -7492, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-7492"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_136() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"ZuBnNefg4B4s7xN\", " + 
                    " \"id\": 576 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("ZuBnNefg4B4s7xN"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"yCo0LRS\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/576?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_137() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6024_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6024_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 536 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_138() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6024_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6024_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 536 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/33304"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_139() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_140() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 8389244, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 636, " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/8389244"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_141() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_25_XYZ_\", " + 
                    " \"id\": -6966556220046640843 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_25_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6966556220046640843"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_142() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_73_XYZ_\", " + 
                    " \"id\": 730 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_73_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/730"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_143() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_375_XYZ_\", " + 
                    " \"id\": 376 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_375_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/376?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_144() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_184_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_184_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-989392687?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_145() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_653_XYZ_\", " + 
                    " \"id\": 505 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_653_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/505"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_146() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_753_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_753_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/557?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_147() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_803_XYZ_\", " + 
                    " \"id\": 131 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_803_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/131"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_148() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 824, " + 
                    " \"lastName\": \"RmsJD0B77oU3zl3\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("RmsJD0B77oU3zl3"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/824"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_149() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 561, " + 
                    " \"lastName\": \"_EM_1029_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1029_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/561"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_150() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 33555256, " + 
                    " \"lastName\": \"_EM_1046_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1046_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33555256?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_151() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"tuFXMfT7OGn2CBIe\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("tuFXMfT7OGn2CBIe"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/42?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_152() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1494_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1494_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/917?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_153() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 372, " + 
                    " \"lastName\": \"_EM_1648_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1648_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/372"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_154() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1064_XYZ_\", " + 
                    " \"id\": -7205759403792788480 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1064_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-7205759403792788480"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_155() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2120_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2120_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/885"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_156() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"QNZuPoFb\", " + 
                    " \"id\": 854 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("QNZuPoFb"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/854?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_157() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2281_XYZ_\", " + 
                    " \"id\": -6494851532369772974 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2281_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6494851532369772974"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_158() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2455_XYZ_\", " + 
                    " \"id\": 463 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2455_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/463"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_159() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1064_XYZ_\", " + 
                    " \"id\": 200 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1064_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/200?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_160() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2581_XYZ_\", " + 
                    " \"id\": 79 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2581_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/79?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_161() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2645_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2645_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/955"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_162() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2651_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2651_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/57"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_163() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2827_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2827_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/449"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_164() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 170, " + 
                    " \"lastName\": \"_EM_2979_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2979_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/170"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_165() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_3096_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3096_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/264?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_166() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3140_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3140_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/742"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_167() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3187_XYZ_\", " + 
                    " \"id\": -485151837 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3187_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-485151837?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_168() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 776, " + 
                    " \"lastName\": \"FBrh\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("FBrh"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/776?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_169() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"ZOZxGLrQ_Yl\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("ZOZxGLrQ_Yl"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/788"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_170() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 546, " + 
                    " \"lastName\": \"_EM_3365_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3365_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/546"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_171() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3407_XYZ_\", " + 
                    " \"id\": 816139435108168297 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3407_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/816139435108168297?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_172() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3532_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3532_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/991?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_173() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 375, " + 
                    " \"lastName\": \"_EM_3595_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3595_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/375?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_174() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"PxS082SgzRO7ySed\", " + 
                    " \"id\": 309 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("PxS082SgzRO7ySed"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/309"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_175() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_176() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208775763"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_177() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208448083"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_178() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_179() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4356_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4356_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/891"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_180() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4567_XYZ_\", " + 
                    " \"id\": 245 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4567_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/245?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_181() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208775763"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_182() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\", " + 
                    " \"id\": -8396243319207989331 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319207989331"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_183() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4769_XYZ_\", " + 
                    " \"id\": -8396243319208775761 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4769_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208775761?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_184() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_185() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208521811?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_186() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_187() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5152_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5152_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/501081782375425121"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_188() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_189() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208509521 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208509521?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_190() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Z9JyF\", " + 
                    " \"id\": -8396243319208513619 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("Z9JyF"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_191() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_5347_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5347_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2024011786?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_192() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319242068051?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_193() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 17, " + 
                    " \"lastName\": \"_EM_5423_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5423_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/17"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_194() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_195() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513615 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513615"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_196() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5616_XYZ_\", " + 
                    " \"id\": 307 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5616_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/307"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_197() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 343, " + 
                    " \"lastName\": \"_EM_5798_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5798_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/343"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_198() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_5854_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5854_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/450"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_199() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 688, " + 
                    " \"lastName\": \"_EM_5867_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5867_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/688"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_200() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6743_XYZ_\", " + 
                    " \"id\": 518 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6743_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/518?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_201() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6927_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6927_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/421"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_202() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 270, " + 
                    " \"lastName\": \"_EM_7039_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7039_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/270?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_203() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_204() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 715, " + 
                    " \"lastName\": \"EeaOzxH\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("EeaOzxH"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/715?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_205() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"wLZI1f59Cw\", " + 
                    " \"id\": -8396243319208513535 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("wLZI1f59Cw"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513535?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_206() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_207() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"PLC7Iqipbj1J\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("PLC7Iqipbj1J"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_208() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 153, " + 
                    " \"lastName\": \"_EM_7461_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7461_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/153"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_209() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7609_XYZ_\", " + 
                    " \"id\": 1427545863 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7609_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1427545863"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_210() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 771, " + 
                    " \"lastName\": \"_EM_7713_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7713_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/771"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_211() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_212() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_213() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_214() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_215() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 666, " + 
                    " \"lastName\": \"_EM_8273_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8273_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/666"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_216() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8286_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8286_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/471"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_217() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513681 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513681?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_218() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208579153 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208579153"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_219() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_220() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8752_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8752_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/289?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_221() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_222() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_223() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208644689 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208644689"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_224() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8927_XYZ_\", " + 
                    " \"id\": 995 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8927_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/995"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_225() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208530001 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208530001"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_226() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -3039731216131564777, " + 
                    " \"lastName\": \"_EM_9262_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9262_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3039731216131564777"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_227() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"Fgk\", " + 
                    " \"id\": 255 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Fgk"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/255?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_228() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208529920 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208529920"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_229() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208529916 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208529916?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_230() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_231() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gG\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gG"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_232() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_16_XYZ_\", " + 
                    " \"id\": 610, " + 
                    " \"lastName\": \"POXykjhik5u\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("POXykjhik5u"))
                .body("'emailId'", containsString("_EM_16_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/610?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_233() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"1f7UTJtVp\", " + 
                    " \"lastName\": \"_EM_351_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("1f7UTJtVp"))
                .body("'lastName'", containsString("_EM_351_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/438?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_234() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_414_XYZ_\", " + 
                    " \"lastName\": \"_EM_415_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_414_XYZ_"))
                .body("'lastName'", containsString("_EM_415_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1661082555"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_235() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Bkks\", " + 
                    " \"id\": 2097698, " + 
                    " \"lastName\": \"_EM_506_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_506_XYZ_"))
                .body("'emailId'", containsString("Bkks"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2097698"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_236() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Bkks\", " + 
                    " \"id\": 4611686018427387904, " + 
                    " \"lastName\": \"_EM_43_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_43_XYZ_"))
                .body("'emailId'", containsString("Bkks"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427387904"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_237() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_591_XYZ_\", " + 
                    " \"firstName\": \"_EM_592_XYZ_\", " + 
                    " \"id\": 229 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_592_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_591_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/229?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_238() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_594_XYZ_\", " + 
                    " \"firstName\": \"UC6vg9_t6nmTOWR3\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UC6vg9_t6nmTOWR3"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_594_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/393?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_239() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_452_XYZ_\", " + 
                    " \"firstName\": \"trRRINI6AfejP1\", " + 
                    " \"id\": -16265 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("trRRINI6AfejP1"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_452_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 119 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16265"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_240() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_693_XYZ_\", " + 
                    " \"id\": -7205759403793059840, " + 
                    " \"lastName\": \"aiyiy9w4s\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("aiyiy9w4s"))
                .body("'emailId'", containsString("_EM_693_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-7205759403793059840"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_241() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_595_XYZ_\", " + 
                    " \"lastName\": \"g6BInyf5\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_595_XYZ_"))
                .body("'lastName'", containsString("g6BInyf5"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/393"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_242() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"p3aAdrWq6Ad\", " + 
                    " \"id\": 820 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("p3aAdrWq6Ad"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_782_XYZ_\", " + 
                    " \"id\": 820, " + 
                    " \"lastName\": \"_EM_784_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/820"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_243() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_808_XYZ_\", " + 
                    " \"lastName\": \"_EM_810_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_810_XYZ_"))
                .body("'emailId'", containsString("_EM_808_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/558?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_244() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_513_XYZ_\", " + 
                    " \"id\": -16207, " + 
                    " \"lastName\": \"aiyiy9w4s\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("aiyiy9w4s"))
                .body("'emailId'", containsString("_EM_513_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16207?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_245() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 962 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_879_XYZ_\", " + 
                    " \"id\": 962, " + 
                    " \"lastName\": \"_EM_880_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/962"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_246() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_914_XYZ_\", " + 
                    " \"id\": 775, " + 
                    " \"lastName\": \"_EM_189_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_189_XYZ_"))
                .body("'emailId'", containsString("_EM_914_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/775?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_247() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_926_XYZ_\", " + 
                    " \"id\": 645 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_926_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 645, " + 
                    " \"lastName\": \"_EM_930_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/645?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_248() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1057_XYZ_\", " + 
                    " \"lastName\": \"_EM_1058_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1057_XYZ_"))
                .body("'lastName'", containsString("_EM_1058_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/640"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_249() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_452_XYZ_Q\", " + 
                    " \"firstName\": \"_EM_453_XYZ_\", " + 
                    " \"id\": 4611686018435776512 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_453_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_452_XYZ_Q"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_455_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018435776512"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_250() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"UJEuwn7SR\", " + 
                    " \"firstName\": \"_EM_1222_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1222_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("UJEuwn7SR"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/901?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_251() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"smeR90gvJ\", " + 
                    " \"firstName\": \"_EM_453_XYZ_\", " + 
                    " \"id\": 33554553 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_453_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("smeR90gvJ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"4x\", " + 
                    " \"firstName\": \"_EM_456_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/33554553?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_252() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1253_XYZ_\", " + 
                    " \"lastName\": \"_EM_1254_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1253_XYZ_"))
                .body("'lastName'", containsString("_EM_1254_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/246?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_253() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1288_XYZ_\", " + 
                    " \"lastName\": \"_EM_1289_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1288_XYZ_"))
                .body("'lastName'", containsString("_EM_1289_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/863?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_254() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1291_XYZ_\", " + 
                    " \"firstName\": \"_EM_749_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_749_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1291_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/134218224"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_255() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1110_XYZ_\", " + 
                    " \"id\": -16211, " + 
                    " \"lastName\": \"aioii9w4p\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("aioii9w4p"))
                .body("'emailId'", containsString("_EM_1110_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16211?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_256() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_920_XYZ_\", " + 
                    " \"id\": 16761590, " + 
                    " \"lastName\": \"BkXP6UfyBMGQk1m\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("BkXP6UfyBMGQk1m"))
                .body("'emailId'", containsString("_EM_920_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/16761590?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_257() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_259_XYZ_\", " + 
                    " \"id\": 1716305697, " + 
                    " \"lastName\": \"_EM_1431_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1431_XYZ_"))
                .body("'emailId'", containsString("_EM_259_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1716305697"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_258() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_259_XYZ_\", " + 
                    " \"id\": 1716305697, " + 
                    " \"lastName\": \"_EM_261_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_261_XYZ_"))
                .body("'emailId'", containsString("_EM_259_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1716305697"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_259() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1755_XYZ_\", " + 
                    " \"id\": -4132897887752466885, " + 
                    " \"lastName\": \"_EM_1757_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1757_XYZ_"))
                .body("'emailId'", containsString("_EM_1755_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4132897887752466885"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_260() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1399_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_1401_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1401_XYZ_"))
                .body("'emailId'", containsString("_EM_1399_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_261() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1740_XYZ_\", " + 
                    " \"firstName\": \"_EM_1789_XYZ_\", " + 
                    " \"id\": -33545470 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1789_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1740_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-33545470?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_262() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1870_XYZ_\", " + 
                    " \"lastName\": \"_EM_1872_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1872_XYZ_"))
                .body("'emailId'", containsString("_EM_1870_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"ujevbgHQdVT\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/906799134"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_263() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1928_XYZ_\", " + 
                    " \"lastName\": \"_EM_1929_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1928_XYZ_"))
                .body("'lastName'", containsString("_EM_1929_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/3?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_264() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1961_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1961_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_1965_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2086099092984722601?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_265() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2039_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2039_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2040_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/769?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_266() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2066_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2066_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2069_XYZ_\", " + 
                    " \"lastName\": \"_EM_2071_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/216"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_267() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2164_XYZ_\", " + 
                    " \"id\": 321, " + 
                    " \"lastName\": \"_EM_2165_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2164_XYZ_"))
                .body("'lastName'", containsString("_EM_2165_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2167_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/321?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_268() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2271_XYZ_\", " + 
                    " \"id\": -2096544, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2271_XYZ_"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2096544?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_269() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2315_XYZ_\", " + 
                    " \"id\": 1382337609505963761 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2315_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2318_XYZ_\", " + 
                    " \"firstName\": \"_EM_2319_XYZ_\", " + 
                    " \"id\": 1382337609505963761 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1382337609505963761"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_270() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2329_XYZ_\", " + 
                    " \"lastName\": \"_EM_2330_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2329_XYZ_"))
                .body("'lastName'", containsString("_EM_2330_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/258?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_271() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"id\": 515, " + 
                    " \"lastName\": \"_EM_2331_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2331_XYZ_"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/515"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_272() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"iEL\", " + 
                    " \"id\": 1152921504606013569, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("iEL"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1152921504606013569"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_273() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2392_XYZ_\", " + 
                    " \"id\": -1183252789, " + 
                    " \"lastName\": \"_EM_2394_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2394_XYZ_"))
                .body("'emailId'", containsString("_EM_2392_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1183252789?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_274() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2417_XYZ_\", " + 
                    " \"lastName\": \"_EM_2418_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2417_XYZ_"))
                .body("'lastName'", containsString("_EM_2418_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2421_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/194"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_275() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2445_XYZ_\", " + 
                    " \"firstName\": \"_EM_2446_XYZ_\", " + 
                    " \"id\": 755 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/755?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_276() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2457_XYZ_\", " + 
                    " \"firstName\": \"_EM_2458_XYZ_\", " + 
                    " \"id\": 150 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2458_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2457_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 150 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/150?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_277() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2470_XYZ_\", " + 
                    " \"id\": 404, " + 
                    " \"lastName\": \"Xv\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2470_XYZ_"))
                .body("'lastName'", containsString("Xv"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/404"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_278() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2557_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2557_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"5z\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4017016211326658055"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_279() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2635_XYZ_\", " + 
                    " \"id\": 687, " + 
                    " \"lastName\": \"_EM_2636_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2635_XYZ_"))
                .body("'lastName'", containsString("_EM_2636_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/687"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_280() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 54, " + 
                    " \"lastName\": \"_EM_2748_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2748_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2749_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/54?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_281() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2754_XYZ_\", " + 
                    " \"lastName\": \"_EM_2756_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2756_XYZ_"))
                .body("'emailId'", containsString("_EM_2754_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/387"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_282() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_509_XYZ_\", " + 
                    " \"id\": -16207, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_509_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16207?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_283() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2867_XYZ_\", " + 
                    " \"lastName\": \"_EM_2868_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2867_XYZ_"))
                .body("'lastName'", containsString("_EM_2868_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/713?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_284() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2324_XYZ_\", " + 
                    " \"lastName\": \"_EM_2326_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-65415?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_285() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"ZJtxn3cCQgJ\", " + 
                    " \"lastName\": \"_EM_2875_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2875_XYZ_"))
                .body("'emailId'", containsString("ZJtxn3cCQgJ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/243"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_286() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"2Et9yh\", " + 
                    " \"lastName\": \"_EM_1766_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("2Et9yh"))
                .body("'lastName'", containsString("_EM_1766_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_\\\\Fy\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/153?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_287() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2912_XYZ_\", " + 
                    " \"lastName\": \"_EM_2913_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2912_XYZ_"))
                .body("'lastName'", containsString("_EM_2913_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/5507031968183637121"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_288() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_289() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2970_XYZ_\", " + 
                    " \"firstName\": \"_EM_2971_XYZ_\", " + 
                    " \"id\": 6428263315700044894 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2971_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2970_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2973_XYZ_\", " + 
                    " \"firstName\": \"1_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/6428263315700044894"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_290() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2994_XYZ_\", " + 
                    " \"lastName\": \"_EM_2996_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2996_XYZ_"))
                .body("'emailId'", containsString("_EM_2994_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2997_XYZ_\", " + 
                    " \"id\": 329 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/329?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_291() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_292() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_293() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3241_XYZ_\", " + 
                    " \"firstName\": \"_EM_3242_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3242_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3241_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/141"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_294() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2891_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2891_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2894_XYZ_\", " + 
                    " \"firstName\": \"_EM_2895_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/258"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_295() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8VprNw9xpozijqd\", " + 
                    " \"id\": 4017674553688016864 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("8VprNw9xpozijqd"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\", " + 
                    " \"id\": 4017674553688016864, " + 
                    " \"lastName\": \"_EM_3310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4017674553688016864"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_296() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/714?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_297() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3437_XYZ_\", " + 
                    " \"lastName\": \"_EM_3438_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3438_XYZ_"))
                .body("'emailId'", containsString("_EM_3437_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/7684065837067317098?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_298() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_3441_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3441_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3442_XYZ_\", " + 
                    " \"id\": 181 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-524107"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_299() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -16442, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2910_XYZ_\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16442?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_300() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -16442, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2910_XYZ_\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16442"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_301() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"id\": 134218375, " + 
                    " \"lastName\": \"_EM_3508_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3508_XYZ_"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/134218375?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_302() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"T\", " + 
                    " \"lastName\": \"_EM_3572_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3572_XYZ_"))
                .body("'emailId'", containsString("T"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_303() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3752_XYZ_\", " + 
                    " \"lastName\": \"_EM_3754_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3754_XYZ_"))
                .body("'emailId'", containsString("_EM_3752_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 133 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/133?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_304() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2324_XYZ_\", " + 
                    " \"lastName\": \"_EM_2326_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/121"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_305() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2324_XYZ_\", " + 
                    " \"lastName\": \"_EM_2326_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/134217849"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_306() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"3ywbkl3yvmV\", " + 
                    " \"lastName\": \"_EM_3820_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3ywbkl3yvmV"))
                .body("'lastName'", containsString("_EM_3820_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 213, " + 
                    " \"lastName\": \"_EM_3823_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/213?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_307() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_308() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_509_XYZ_\", " + 
                    " \"id\": -16207, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_509_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16207?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_309() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4098_XYZ_\", " + 
                    " \"lastName\": \"_EM_4100_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4100_XYZ_"))
                .body("'emailId'", containsString("_EM_4098_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1775234694"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_310() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4175_XYZ_\", " + 
                    " \"firstName\": \"_EM_4176_XYZ_\", " + 
                    " \"id\": 23 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4176_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4175_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/23?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_311() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 474 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4238_XYZ_\", " + 
                    " \"id\": 474, " + 
                    " \"lastName\": \"z\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/474"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_312() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4248_XYZ_\", " + 
                    " \"lastName\": \"_EM_4250_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4250_XYZ_"))
                .body("'emailId'", containsString("_EM_4248_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/929"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_313() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4352_XYZ_\", " + 
                    " \"firstName\": \"iOmtRI5O\", " + 
                    " \"id\": 206 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("iOmtRI5O"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4352_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/206?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_314() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_315() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_316() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4451_XYZ_\", " + 
                    " \"id\": 220, " + 
                    " \"lastName\": \"_EM_4452_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4451_XYZ_"))
                .body("'lastName'", containsString("_EM_4452_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/220"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_317() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4561_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4561_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_4564_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/864?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_318() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"vN7\", " + 
                    " \"firstName\": \"_EM_4690_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4690_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("vN7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/765384389?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_319() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4708_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4708_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4707_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_320() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1399_XYZ_\", " + 
                    " \"id\": 2097537, " + 
                    " \"lastName\": \"J_lgR1mu76\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("J_lgR1mu76"))
                .body("'emailId'", containsString("_EM_1399_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2097537"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_321() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 134217672, " + 
                    " \"lastName\": \"_EU_U126UUYU_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EU_U126UUYU_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/134217672?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_322() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 133171144, " + 
                    " \"lastName\": \"_EU_U126UUYU_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EU_U126UUYU_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/133171144"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_323() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146458051, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146458051"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_324() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -138069443, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-138069443?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_325() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_326() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4985_XYZ_\", " + 
                    " \"id\": 250, " + 
                    " \"lastName\": \"_EM_4986_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4985_XYZ_"))
                .body("'lastName'", containsString("_EM_4986_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4988_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/250?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_327() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": -32572, " + 
                    " \"lastName\": \"8vcv1F\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("8vcv1F"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-32572?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_328() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": -523556, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-523556"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_329() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 16777948, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777948"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_330() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5090_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5090_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5094_XYZ_\", " + 
                    " \"id\": 926 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/926"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_331() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 689, " + 
                    " \"lastName\": \"_EM_5139_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5139_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5141_XYZ_\", " + 
                    " \"id\": 689 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/689?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_332() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -145409892, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145409892?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_333() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -145377219 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145377219"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_334() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -145377220 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145377220?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_335() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5179_XYZ_\", " + 
                    " \"id\": 134217740, " + 
                    " \"lastName\": \"_EM_5180_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5180_XYZ_"))
                .body("'emailId'", containsString("_EM_5179_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/134217740"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_336() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5287_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5287_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5288_XYZ_\", " + 
                    " \"firstName\": \"_EM_5289_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/17?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_337() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 733, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/733"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_338() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"3ONA0\", " + 
                    " \"id\": -145407971, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3ONA0"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145407971?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_339() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"0QkI\", " + 
                    " \"id\": 937, " + 
                    " \"lastName\": \"yGGwV_owEnrhA5\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("0QkI"))
                .body("'lastName'", containsString("yGGwV_owEnrhA5"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/937"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_340() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_341() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -137021379 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-137021379"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_342() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_5543_XYZ_\", " + 
                    " \"id\": -145409731 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5543_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145409731"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_343() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5567_XYZ_\", " + 
                    " \"lastName\": \"_EM_5568_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5567_XYZ_"))
                .body("'lastName'", containsString("_EM_5568_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/146?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_344() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5605_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5605_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5607_XYZ_\", " + 
                    " \"id\": -73740273 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-73740273"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_345() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5615_XYZ_\", " + 
                    " \"id\": 1048773, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_346() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5623_XYZ_\", " + 
                    " \"id\": 344 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5623_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_5624_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/344?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_347() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5680_XYZ_\", " + 
                    " \"id\": 779 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5680_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/779"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_348() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5689_XYZ_\", " + 
                    " \"lastName\": \"_EM_5690_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5689_XYZ_"))
                .body("'lastName'", containsString("_EM_5690_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/102?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_349() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": 1024, " + 
                    " \"lastName\": \"8vcv1Fm\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("8vcv1Fm"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1024"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_350() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146458563, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146458563?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_351() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146458565, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146458565?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_352() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OCCuCDIe0V0\", " + 
                    " \"firstName\": \"_EM_5770_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5770_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("OCCuCDIe0V0"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/732?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_353() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5779_XYZ_\", " + 
                    " \"lastName\": \"_EM_5780_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5779_XYZ_"))
                .body("'lastName'", containsString("_EM_5780_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/397?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_354() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1400_XYZ_\", " + 
                    " \"id\": -33554047, " + 
                    " \"lastName\": \"_EM_2314_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1400_XYZ_"))
                .body("'lastName'", containsString("_EM_2314_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-33554047"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_355() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_5819_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5819_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5821_XYZ_\", " + 
                    " \"id\": 883 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/883"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_356() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_357() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 5008002785626016768, " + 
                    " \"lastName\": \"UGiQchsYyQDV7n\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("UGiQchsYyQDV7n"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/5008002785626016768"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_358() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": 15729372, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/15729372?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_359() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": 15729372, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/15729372?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_360() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_361() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5914_XYZ_\", " + 
                    " \"firstName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString(""))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5914_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-904279938"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_362() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 780, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/780?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_363() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5988_XYZ_\", " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("_EM_5988_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034185728"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_364() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1400_XYZ_\", " + 
                    " \"id\": 524417, " + 
                    " \"lastName\": \"_EM_5996_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1400_XYZ_"))
                .body("'lastName'", containsString("_EM_5996_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/524417?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_365() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"LRuLzdg92bfCI\", " + 
                    " \"firstName\": \"_EM_6041_XYZ_\", " + 
                    " \"id\": 557 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6041_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("LRuLzdg92bfCI"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"LfL9\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/557?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_366() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -8372028, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8372028?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_367() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6055_XYZ_\", " + 
                    " \"lastName\": \"_EM_6056_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6055_XYZ_"))
                .body("'lastName'", containsString("_EM_6056_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6058_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/624"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_368() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 4611686018427387904, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427387904"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_369() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 4611686018427387904, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427387904?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_370() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047782"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_371() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_372() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"T4jiM\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("T4jiM"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_373() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 33554372, " + 
                    " \"lastName\": \"_EM_6093_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6093_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/33554372"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_374() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_375() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6154_XYZ_\", " + 
                    " \"firstName\": \"_EM_6155_XYZ_\", " + 
                    " \"id\": 146 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6155_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6154_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/146?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_376() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665792, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665792"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_377() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6438_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6438_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_378() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": 3458764513827356672, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/3458764513827356672"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_379() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1049890, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1049890?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_380() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6554_XYZ_\", " + 
                    " \"id\": -16777215, " + 
                    " \"lastName\": \"_EM_6555_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6554_XYZ_"))
                .body("'lastName'", containsString("_EM_6555_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6557_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16777215?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_381() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": -7460, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-7460"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_382() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6726_XYZ_\", " + 
                    " \"lastName\": \"_EM_6728_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6728_XYZ_"))
                .body("'emailId'", containsString("_EM_6726_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/669?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_383() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -4194362, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4194362"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_384() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6812_XYZ_\", " + 
                    " \"id\": 685 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6812_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C8M\", " + 
                    " \"firstName\": \"_EM_6814_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/685"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_385() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"2OaH5IkH`Nr\", " + 
                    " \"id\": 1049308, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("2OaH5IkH`Nr"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1049308"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_386() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6880_XYZ_\", " + 
                    " \"id\": 135, " + 
                    " \"lastName\": \"c_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("c_"))
                .body("'emailId'", containsString("_EM_6880_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/135?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_387() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_388() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_389() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7030_XYZ_\", " + 
                    " \"lastName\": \"_EM_7032_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7032_XYZ_"))
                .body("'emailId'", containsString("_EM_7030_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/735"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_390() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665792, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665792?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_391() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501666048, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501666048?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_392() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_7057_XYZ_\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7057_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_393() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665776, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665776"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_394() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665776, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665776?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_395() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 1756, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1756?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_396() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_397() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1047332, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047332"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_398() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"3o3VOafy\", " + 
                    " \"id\": 684, " + 
                    " \"lastName\": \"dUlwGfjYFMsPazS\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3o3VOafy"))
                .body("'lastName'", containsString("dUlwGfjYFMsPazS"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 684, " + 
                    " \"lastName\": \"_EM_7247_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/684"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_399() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"8OBYDjWhdVb2bcN\", " + 
                    " \"id\": -4611686018428173312, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("8OBYDjWhdVb2bcN"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018428173312?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_400() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7393_XYZ_\", " + 
                    " \"id\": 134, " + 
                    " \"lastName\": \"_EM_7394_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7393_XYZ_"))
                .body("'lastName'", containsString("_EM_7394_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/134"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_401() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7399_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7399_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7400_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/604?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_402() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1045750"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_403() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7423_XYZ_\", " + 
                    " \"id\": 145, " + 
                    " \"lastName\": \"_EM_7424_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7423_XYZ_"))
                .body("'lastName'", containsString("_EM_7424_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/145"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_404() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 4611686018463039488, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018463039488"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_405() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7434_XYZ_\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7434_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_406() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 732, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/732"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_407() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 732, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/732?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_408() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7445_XYZ_\", " + 
                    " \"lastName\": \"_EM_7447_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7447_XYZ_"))
                .body("'emailId'", containsString("_EM_7445_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/25?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_409() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZf\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": -1047798 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZf"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": -4611686018427387904 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_410() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7457_XYZ_\", " + 
                    " \"id\": 160, " + 
                    " \"lastName\": \"_EM_7466_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7457_XYZ_"))
                .body("'lastName'", containsString("_EM_7466_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/160?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_411() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7457_XYZ_\", " + 
                    " \"id\": 160, " + 
                    " \"lastName\": \"_EM_7467_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7457_XYZ_"))
                .body("'lastName'", containsString("_EM_7467_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/160"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_412() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_413() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 1802, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1802?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_414() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665792, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665792?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_415() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665792, " + 
                    " \"lastName\": \"_EM_7598_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_7598_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665792"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_416() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_417() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": -1047798 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_418() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"8XyZu\", " + 
                    " \"id\": 4195028, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("8XyZu"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4195028"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_419() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"8XyZu\", " + 
                    " \"id\": 5243604, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("8XyZu"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/5243604?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_420() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7753_XYZ_\", " + 
                    " \"id\": 842, " + 
                    " \"lastName\": \"_EM_7754_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7753_XYZ_"))
                .body("'lastName'", containsString("_EM_7754_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"Lo8cO\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/842?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_421() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7549_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", containsString("_EM_7549_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"mvKLhJaBrm\", " + 
                    " \"lastName\": \"_EM_7785_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_422() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 4195036, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4195036?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_423() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"UaDm?Crn5R3LBc4A\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UaDm?Crn5R3LBc4A"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 536 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_424() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7879_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7879_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7882_XYZ_\", " + 
                    " \"firstName\": \"_EM_7883_XYZ_\", " + 
                    " \"id\": 541 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/541"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_425() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501666820, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501666820?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_426() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7914_XYZ_\", " + 
                    " \"id\": -4611686018501666820, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7914_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501666820?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_427() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7955_XYZ_\", " + 
                    " \"id\": -3166, " + 
                    " \"lastName\": \"_EM_7956_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7955_XYZ_"))
                .body("'lastName'", containsString("_EM_7956_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3166?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_428() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 8746590575077210887, " + 
                    " \"lastName\": \"_EM_8011_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8011_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8012_XYZ_\", " + 
                    " \"id\": 8746590575077210887 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/8746590575077210887?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_429() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"jcFBMH7dzOfwPpw\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("jcFBMH7dzOfwPpw"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_430() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1039652, " + 
                    " \"lastName\": \"l2d\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("l2d"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1039652?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_431() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1039652, " + 
                    " \"lastName\": \"l2d\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("l2d"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1039652?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_432() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": -33553700, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-33553700"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_433() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": -33553828, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-33553828?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_434() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": -1316, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1316"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_435() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8212_XYZ_\", " + 
                    " \"lastName\": \"_EM_8213_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/568"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_436() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OsmAewADNlDd\", " + 
                    " \"firstName\": \"WwS\", " + 
                    " \"id\": 907 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("WwS"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("OsmAewADNlDd"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/907?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_437() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8221_XYZ_\", " + 
                    " \"id\": 19 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8221_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8224_XYZ_\", " + 
                    " \"id\": -109, " + 
                    " \"lastName\": \"_EM_8237_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/19"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_438() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8221_XYZ_\", " + 
                    " \"id\": -8388589 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8221_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8224_XYZ_\", " + 
                    " \"id\": -109, " + 
                    " \"lastName\": \"_EM_8237_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8388589?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_439() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": -15653, " + 
                    " \"lastName\": \"PWn\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("PWn"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-15653?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_440() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"eshfPdYuA7EhO\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("eshfPdYuA7EhO"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8319_XYZ_\", " + 
                    " \"firstName\": \"_EM_8320_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/42373381320640590"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_441() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_8326_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_8326_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_442() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665790, " + 
                    " \"lastName\": \"xu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("xu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665790"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_443() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665790, " + 
                    " \"lastName\": \"xu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("xu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665790?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_444() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": -246, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-246?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_445() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 4194058, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4194058"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_446() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_8375_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8375_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8376_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/470"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_447() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"HD6m6TvRYfHIqwD8\", " + 
                    " \"id\": 523996, " + 
                    " \"lastName\": \"_EM_8445_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("HD6m6TvRYfHIqwD8"))
                .body("'lastName'", containsString("_EM_8445_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/523996?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_448() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 16777156, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777156?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_449() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": -1047798 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_450() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018510054400 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018510054400?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_451() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018526831624 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018526831624?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_452() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8522_XYZ_\", " + 
                    " \"id\": 884, " + 
                    " \"lastName\": \"_EM_8524_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8524_XYZ_"))
                .body("'emailId'", containsString("_EM_8522_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/884?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_453() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"FMmxHEIotZPx\", " + 
                    " \"id\": 790, " + 
                    " \"lastName\": \"_EM_8507_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8507_XYZ_"))
                .body("'emailId'", containsString("FMmxHEIotZPx"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8508_XYZ_\", " + 
                    " \"id\": 790 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/790?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_454() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_455() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8608_XYZ_\", " + 
                    " \"id\": 298, " + 
                    " \"lastName\": \"_EM_8609_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8608_XYZ_"))
                .body("'lastName'", containsString("_EM_8609_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/298?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_456() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8626_XYZ_\", " + 
                    " \"id\": 632, " + 
                    " \"lastName\": \"EKw76yiYy\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("EKw76yiYy"))
                .body("'emailId'", containsString("_EM_8626_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/632"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_457() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8711_XYZ_\", " + 
                    " \"firstName\": \"_EM_8712_XYZ_\", " + 
                    " \"id\": -248188696 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8712_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8711_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -248188696 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-248188696"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_458() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501796864, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501796864"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_459() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 671 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8803_XYZ_\", " + 
                    " \"firstName\": \"_EM_8804_XYZ_\", " + 
                    " \"id\": 671 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/671?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_460() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8813_XYZ_\", " + 
                    " \"id\": 458 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8813_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8815_XYZ_\", " + 
                    " \"firstName\": \"_EM_8816_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/458"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_461() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8853_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": -31990 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427256320"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_462() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8854_XYZ_\", " + 
                    " \"firstName\": \"_EM_8855_XYZ_\", " + 
                    " \"id\": 3727425252288403954 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8855_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8854_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/3727425252288403954?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_463() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 415, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString(""))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8873_XYZ_\", " + 
                    " \"lastName\": \"_EM_8875_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/415?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_464() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8946_XYZ_\", " + 
                    " \"id\": -4611686018501665824, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8946_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665824?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_465() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"kEz\", " + 
                    " \"id\": -4611686018501661728, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("kEz"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501661728"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_466() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8947_XYZ_\", " + 
                    " \"id\": -4611686018501661728, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8947_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501661728"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_467() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8952_XYZ_\", " + 
                    " \"id\": 293 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8952_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8954_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/293"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_468() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 2097884, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2097884?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_469() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8961_XYZ_\", " + 
                    " \"id\": 113 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8961_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"MD\", " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/113?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_470() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665792, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665792"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_471() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 3146506 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9057_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/3146506"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_472() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 740, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/740?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_473() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 740, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/740"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_474() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9127_XYZ_\", " + 
                    " \"lastName\": \"_EM_9128_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9127_XYZ_"))
                .body("'lastName'", containsString("_EM_9128_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2113814648"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_475() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9129_XYZ_\", " + 
                    " \"lastName\": \"uYte_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("uYte_"))
                .body("'emailId'", containsString("_EM_9129_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/557"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_476() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"AYMi\", " + 
                    " \"id\": 381, " + 
                    " \"lastName\": \"_EM_9177_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("AYMi"))
                .body("'lastName'", containsString("_EM_9177_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/381"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_477() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9186_XYZ_\", " + 
                    " \"firstName\": \"_EM_9187_XYZ_\", " + 
                    " \"id\": -951458248600485185 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9187_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_9186_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9189_XYZ_\", " + 
                    " \"firstName\": \"rL\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-951458248600485185?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_478() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501666304, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501666304?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_479() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_480() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"FBcyQLKaaV\", " + 
                    " \"id\": 47 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("FBcyQLKaaV"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 47, " + 
                    " \"lastName\": \"_EM_9269_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/47"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_481() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"Te^NP\", " + 
                    " \"id\": -4611686018501665800, " + 
                    " \"lastName\": \"_EM_9293_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Te^NP"))
                .body("'lastName'", containsString("_EM_9293_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665800?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_482() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"Te^NX\", " + 
                    " \"id\": -4611686018497469448, " + 
                    " \"lastName\": \"_EM_9293_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Te^NX"))
                .body("'lastName'", containsString("_EM_9293_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018497469448"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_483() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"Te^NX\", " + 
                    " \"id\": -4611686018497469448, " + 
                    " \"lastName\": \"_EM_9293_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Te^NX"))
                .body("'lastName'", containsString("_EM_9293_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018497469448?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_484() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"L\", " + 
                    " \"id\": -1047332, " + 
                    " \"lastName\": \"XtoqQQMrAWsVer\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("L"))
                .body("'lastName'", containsString("XtoqQQMrAWsVer"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047332"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_485() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_486() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9350_XYZ_\", " + 
                    " \"lastName\": \"xTjAbW42yc6N\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9350_XYZ_"))
                .body("'lastName'", containsString("xTjAbW42yc6N"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/947?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_487() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"K\", " + 
                    " \"lastName\": \"3QFgA3W\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("3QFgA3W"))
                .body("'emailId'", containsString("K"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"mdnfpGc\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/108?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_488() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9406_XYZ_\", " + 
                    " \"id\": -2100485347, " + 
                    " \"lastName\": \"_EM_9407_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9407_XYZ_"))
                .body("'emailId'", containsString("_EM_9406_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2100485347?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_489() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 7340668, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"mvKLhJaBrm\", " + 
                    " \"id\": 636, " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/7340668"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_490() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1047844, " + 
                    " \"lastName\": \"_EM_9443_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_9443_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047844?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_491() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_25_XYZ_\", " + 
                    " \"id\": -6966556220046638795, " + 
                    " \"lastName\": \"_EM_62_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_25_XYZ_"))
                .body("'lastName'", containsString("_EM_62_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6966556220046638795?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_492() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_68_XYZ_\", " + 
                    " \"firstName\": \"_EM_69_XYZ_\", " + 
                    " \"id\": 643 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_69_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_68_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/643?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_493() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_175_XYZ_\", " + 
                    " \"firstName\": \"_EM_176_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_176_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_175_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/91464268"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_494() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_183_XYZ_\", " + 
                    " \"lastName\": \"_EM_185_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_185_XYZ_"))
                .body("'emailId'", containsString("_EM_183_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-989392687?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_495() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_183_XYZ_\", " + 
                    " \"firstName\": \"dWNpuzRIBiF\", " + 
                    " \"id\": -989916975 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("dWNpuzRIBiF"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_183_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-989916975?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_496() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"FWg8WCptM\", " + 
                    " \"id\": -6966556219979534027, " + 
                    " \"lastName\": \"pgWF4MQpm\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("FWg8WCptM"))
                .body("'lastName'", containsString("pgWF4MQpm"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6966556219979534027"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_497() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Wmki9xU6Buo7WBZW\", " + 
                    " \"id\": 497, " + 
                    " \"lastName\": \"_EM_479_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_479_XYZ_"))
                .body("'emailId'", containsString("Wmki9xU6Buo7WBZW"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/497?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_498() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_421_XYZ_\", " + 
                    " \"lastName\": \"_EM_185_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_421_XYZ_"))
                .body("'lastName'", containsString("_EM_185_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-184086319?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_499() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_493_XYZ_\", " + 
                    " \"id\": 459, " + 
                    " \"lastName\": \"_EM_494_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_493_XYZ_"))
                .body("'lastName'", containsString("_EM_494_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/459"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"9Bqy4r2C\", " + 
                    " \"lastName\": \"_EM_757_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("9Bqy4r2C"))
                .body("'lastName'", containsString("_EM_757_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/850?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_501() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_24_XYZ_\", " + 
                    " \"id\": -6966556219979535563, " + 
                    " \"lastName\": \"_EM_758_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_758_XYZ_"))
                .body("'emailId'", containsString("_EM_24_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6966556219979535563"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_502() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_703_XYZ_\", " + 
                    " \"lastName\": \"TUla0DMCQ7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_703_XYZ_"))
                .body("'lastName'", containsString("TUla0DMCQ7"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-452519727"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_503() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_421_XYZ_\", " + 
                    " \"lastName\": \"_EM_796_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_421_XYZ_"))
                .body("'lastName'", containsString("_EM_796_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-452521263?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_504() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_499_XYZ_\", " + 
                    " \"lastName\": \"PEij_jIdJtiblS4L\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("PEij_jIdJtiblS4L"))
                .body("'emailId'", containsString("_EM_499_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-65529"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_505() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"LV_4lIShu82wXnx\", " + 
                    " \"lastName\": \"_EM_908_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_908_XYZ_"))
                .body("'emailId'", containsString("LV_4lIShu82wXnx"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/3?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_506() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1322_XYZ_\", " + 
                    " \"id\": -450424623, " + 
                    " \"lastName\": \"TUla0DMCQ7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1322_XYZ_"))
                .body("'lastName'", containsString("TUla0DMCQ7"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-450424623?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_507() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1064_XYZ_\", " + 
                    " \"id\": 4194488, " + 
                    " \"lastName\": \"_EM_1065_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1064_XYZ_"))
                .body("'lastName'", containsString("_EM_1065_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4194488"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_508() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1376_XYZ_\", " + 
                    " \"lastName\": \"_EM_1377_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1376_XYZ_"))
                .body("'lastName'", containsString("_EM_1377_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-380391841346141501?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_509() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 167, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/167"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_510() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 33554599, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33554599?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_511() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_512() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1569_XYZ_\", " + 
                    " \"firstName\": \"iVeqRp\", " + 
                    " \"id\": 2143318234 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("iVeqRp"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1569_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2143318234?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_513() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_514() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 135, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/135"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_515() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1735_XYZ_\", " + 
                    " \"firstName\": \"_EM_1736_XYZ_\", " + 
                    " \"id\": 780 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1736_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1735_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/780?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_516() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1749_XYZ_\", " + 
                    " \"id\": 401, " + 
                    " \"lastName\": \"RqMKG0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1749_XYZ_"))
                .body("'lastName'", containsString("RqMKG0"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/401"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_517() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1774_XYZ_\", " + 
                    " \"firstName\": \"_EM_1775_XYZ_\", " + 
                    " \"id\": 26 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1775_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1774_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/26?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_518() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 2097319, " + 
                    " \"lastName\": \"_EM_1778_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_1778_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2097319"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_519() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 167, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/167"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_520() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 167, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/167"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_521() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1555_XYZ_\", " + 
                    " \"firstName\": \"_EM_1556_XYZ_\", " + 
                    " \"id\": 390760505 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1556_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1555_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/390760505?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_522() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1906_XYZ_\", " + 
                    " \"firstName\": \"_EM_1907_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1907_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1906_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/10"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_523() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_524() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 16777383, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777383?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_525() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 16, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_526() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1555_XYZ_\", " + 
                    " \"firstName\": \"_EM_1556_XYZ_\", " + 
                    " \"id\": 389711929 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1556_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1555_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/389711929"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_527() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2357_XYZ_\", " + 
                    " \"id\": 934, " + 
                    " \"lastName\": \"_EM_2359_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2359_XYZ_"))
                .body("'emailId'", containsString("_EM_2357_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/934"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_528() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1063_XYZ_\", " + 
                    " \"firstName\": \"_EM_1064_XYZ_p\", " + 
                    " \"id\": -6485183463413510144 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1064_XYZ_p"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1063_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6485183463413510144?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_529() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2397_XYZ_\", " + 
                    " \"lastName\": \"D1Bp7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("D1Bp7"))
                .body("'emailId'", containsString("_EM_2397_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/266"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_530() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2623_XYZ_\", " + 
                    " \"id\": 290, " + 
                    " \"lastName\": \"SSnkRl\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2623_XYZ_"))
                .body("'lastName'", containsString("SSnkRl"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/290"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_531() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2637_XYZ_\", " + 
                    " \"lastName\": \"_EM_2639_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2639_XYZ_"))
                .body("'emailId'", containsString("_EM_2637_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/303?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_532() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_533() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3028_XYZ_\", " + 
                    " \"firstName\": \"Kga7NNVNUE1\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Kga7NNVNUE1"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3028_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/116?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_534() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 620, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/620"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_535() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"3_VWoGqFmSV9Mu\", " + 
                    " \"id\": 16778407, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3_VWoGqFmSV9Mu"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16778407"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_536() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_537() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 262892 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/262892?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_538() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -8387860 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8387860?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_539() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 16777383, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777383"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_540() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_541() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_542() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -251591956 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-251591956"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_543() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_544() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3262_XYZ_\", " + 
                    " \"id\": 861, " + 
                    " \"lastName\": \"_EM_3264_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3264_XYZ_"))
                .body("'emailId'", containsString("_EM_3262_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/861"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_545() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_957_XYZ_\", " + 
                    " \"id\": 16777383, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_957_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777383"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_546() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3318_XYZ_\", " + 
                    " \"lastName\": \"_EM_3319_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3318_XYZ_"))
                .body("'lastName'", containsString("_EM_3319_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/124"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_547() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_548() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66288 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66288"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_549() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66288 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66288"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_550() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_551() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_552() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"SpNQ\", " + 
                    " \"firstName\": \"_EM_3479_XYZ_\", " + 
                    " \"id\": -1163313731 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3479_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("SpNQ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1163313731?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_553() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"lastName\": \"_EM_3089_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("_EM_3089_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152356"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_554() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3415_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3416_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3416_XYZ_"))
                .body("'emailId'", containsString("_EM_3415_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_555() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66288 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66288?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_556() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEP\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWEP"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_557() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"\", " + 
                    " \"id\": 164221 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString(""))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/164221?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_558() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3415_XYZ_\", " + 
                    " \"id\": 231, " + 
                    " \"lastName\": \"_EM_3761_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3761_XYZ_"))
                .body("'emailId'", containsString("_EM_3415_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/231?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_559() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"dx4KfdBWxo4x\", " + 
                    " \"id\": 512, " + 
                    " \"lastName\": \"_EM_3761_XYZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3761_XYZ"))
                .body("'emailId'", containsString("dx4KfdBWxo4x"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/512?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_560() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3787_XYZ_\", " + 
                    " \"firstName\": \"_EM_3788_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3788_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3787_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/473"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_561() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3791_XYZ_\", " + 
                    " \"lastName\": \"_EM_3792_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3791_XYZ_"))
                .body("'lastName'", containsString("_EM_3792_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_562() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3791_XYZ_\", " + 
                    " \"lastName\": \"_EM_3792_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3791_XYZ_"))
                .body("'lastName'", containsString("_EM_3792_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152422?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_563() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"lastName\": \"_EM_3089_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("_EM_3089_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_564() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"lastName\": \"_EM_3089_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("_EM_3089_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_565() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3813_XYZ_\", " + 
                    " \"lastName\": \"_EM_3815_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3815_XYZ_"))
                .body("'emailId'", containsString("_EM_3813_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/269?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_566() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 328448 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/328448"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_567() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3889_XYZ_\", " + 
                    " \"firstName\": \"mI\", " + 
                    " \"id\": 252 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("mI"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3889_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/252"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_568() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3897_XYZ_\", " + 
                    " \"id\": 456, " + 
                    " \"lastName\": \"_EM_3898_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3897_XYZ_"))
                .body("'lastName'", containsString("_EM_3898_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/456"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_569() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3889_XYZ_\", " + 
                    " \"firstName\": \"mI\", " + 
                    " \"id\": 33020 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("mI"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3889_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33020?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_570() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3919_XYZ_\", " + 
                    " \"firstName\": \"pI\", " + 
                    " \"id\": 16777468 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("pI"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3919_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777468"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_571() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3919_XYZ_\", " + 
                    " \"firstName\": \"pI\", " + 
                    " \"id\": -16776964 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("pI"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3919_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16776964?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_572() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 197365 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/197365?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_573() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -1899787 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1899787?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_574() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3993_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3993_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319202222163?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_575() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3377_XYZ_\", " + 
                    " \"firstName\": \"_EM_3378_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3378_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3377_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4202244"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_576() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4119_XYZ_\", " + 
                    " \"firstName\": \"_EM_3378_XYZ_\", " + 
                    " \"id\": -71302916 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3378_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4119_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-71302916?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_577() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_578() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_579() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513875"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_580() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"T4UZuDRi2JTw65m\", " + 
                    " \"lastName\": \"_EM_4150_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("T4UZuDRi2JTw65m"))
                .body("'lastName'", containsString("_EM_4150_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_581() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_582() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4611686018496593920 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018496593920"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_583() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\", " + 
                    " \"id\": -8396243319074295891, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319074295891"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_584() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 328432 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/328432"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_585() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -138411284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-138411284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_586() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -138411284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-138411284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_587() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"axlhZ8HzZ/N\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("axlhZ8HzZ/N"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513683"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_588() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"axlhZ8HzZ/N\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("axlhZ8HzZ/N"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513683"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_589() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66288 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66288"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_590() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 328432 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/328432"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_591() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -2882303761533744640 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2882303761533744640?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_592() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4214_XYZ_\", " + 
                    " \"lastName\": \"_EM_4215_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4214_XYZ_"))
                .body("'lastName'", containsString("_EM_4215_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/664"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_593() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 49900 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/49900"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_594() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE0\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 53996 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE0"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/53996?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_595() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208448083?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_596() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4228_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319225290835 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4228_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319225290835?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_597() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4228_XYZ_\", " + 
                    " \"firstName\": \"_EM_4239_XYZ_\", " + 
                    " \"id\": -8396243319209037907 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4239_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4228_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319209037907?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_598() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_599() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_600() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEF\", " + 
                    " \"firstName\": \"END\", " + 
                    " \"id\": 4 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("END"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWEF"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_601() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66288 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66288?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_602() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 16843504 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16843504"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_603() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3377_XYZ_\", " + 
                    " \"firstName\": \"_EM_3378_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3378_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3377_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/134217980"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_604() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 336624 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/336624"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_605() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 336624 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/336624?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_606() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_607() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"jcVuM_cXwo5GRH\", " + 
                    " \"id\": -4611686018427396096 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("jcVuM_cXwo5GRH"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427396096?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_608() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -2305843009213665024 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2305843009213665024"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_609() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"FEhgEQvlk7i\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("FEhgEQvlk7i"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208448082"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_610() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4315_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -1152921504506023664 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4315_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1152921504506023664?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_611() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4384_XYZ_\", " + 
                    " \"firstName\": \"_EM_4385_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4385_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4384_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/3492618528296486715"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_612() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4432_XYZ_\", " + 
                    " \"firstName\": \"_EM_4433_XYZ_\", " + 
                    " \"id\": 73 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4433_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4432_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/73?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_613() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4512_XYZ_\", " + 
                    " \"id\": 309, " + 
                    " \"lastName\": \"_EM_4513_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4512_XYZ_"))
                .body("'lastName'", containsString("_EM_4513_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/309?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_614() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_615() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_616() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"3kpievXurRtwGz\", " + 
                    " \"id\": -523540 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3kpievXurRtwGz"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-523540"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_617() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C15\", " + 
                    " \"id\": -8396243319204319315, " + 
                    " \"lastName\": \"7GUEUnmkOaJ5_ilr\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("7GUEUnmkOaJ5_ilr"))
                .body("'emailId'", containsString("C15"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319204319315?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_618() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 5188146770730795008 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5188146770730795008"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_619() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4718_XYZ_\", " + 
                    " \"id\": -4198121659604257279, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4718_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4198121659604257279?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_620() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 1297036692680602112 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1297036692680602112?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_621() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66280 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66280"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_622() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/666"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_623() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4814_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4814_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_624() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4828_XYZ_\", " + 
                    " \"id\": 829, " + 
                    " \"lastName\": \"_EM_4829_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4828_XYZ_"))
                .body("'lastName'", containsString("_EM_4829_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/829"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_625() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4869_XYZ_\", " + 
                    " \"firstName\": \"PALeVmPfWMPoXYOX\", " + 
                    " \"id\": 994 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("PALeVmPfWMPoXYOX"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4869_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/994"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_626() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4901_XYZ_\", " + 
                    " \"id\": 774, " + 
                    " \"lastName\": \"_EM_4903_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4903_XYZ_"))
                .body("'emailId'", containsString("_EM_4901_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/774"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_627() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEA\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWEA"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_628() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEA\", " + 
                    " \"firstName\": \"_EM_4936_XYZ_\", " + 
                    " \"id\": -5188146770736691200 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4936_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWEA"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5188146770736691200?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_629() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4972_XYZ_\", " + 
                    " \"lastName\": \"_EM_4973_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4972_XYZ_"))
                .body("'lastName'", containsString("_EM_4973_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/430"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_630() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8WLbP9\", " + 
                    " \"id\": 7430608184498463062, " + 
                    " \"lastName\": \"rxv\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("rxv"))
                .body("'emailId'", containsString("8WLbP9"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/7430608184498463062"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_631() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_632() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5060_XYZ_\", " + 
                    " \"lastName\": \"_EM_5061_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5061_XYZ_"))
                .body("'emailId'", containsString("_EM_5060_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/610?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_633() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5147_XYZ_\", " + 
                    " \"lastName\": \"_EM_5149_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5149_XYZ_"))
                .body("'emailId'", containsString("_EM_5147_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/762"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_634() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_635() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_636() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_637() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_638() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8809807678031677440 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8809807678031677440"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_639() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4195052 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4195052?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_640() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_641() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5377_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"_EM_5378_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5378_XYZ_"))
                .body("'emailId'", containsString("_EM_5377_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_642() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"m_pLX\", " + 
                    " \"lastName\": \"_EM_5363_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("m_pLX"))
                .body("'lastName'", containsString("_EM_5363_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8906350281227870837?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_643() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5433_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8603025498620144768 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5433_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8603025498620144768?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_644() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Pj\", " + 
                    " \"firstName\": \"b65aliyQn\", " + 
                    " \"id\": 134218476 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("b65aliyQn"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("Pj"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/134218476?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_645() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -3348 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3348"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_646() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4611686018421096448 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018421096448"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_647() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"zq4xspdTw\", " + 
                    " \"id\": -8387943, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("zq4xspdTw"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8387943"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_648() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 99052 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/99052?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_649() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5593_XYZ_\", " + 
                    " \"firstName\": \"_EM_5594_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5594_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5593_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/493"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_650() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5655_XYZ_\", " + 
                    " \"id\": -8396243319275623497, " + 
                    " \"lastName\": \"UWDcQM7qwqdO\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("UWDcQM7qwqdO"))
                .body("'emailId'", containsString("_EM_5655_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319275623497"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_651() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"9WraTMAKCqxxS\", " + 
                    " \"id\": -8396243319208480849, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("9WraTMAKCqxxS"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208480849?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_652() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"l7Z1\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4611686018428223488 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("l7Z1"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018428223488?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_653() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3074_XYZ_\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_3074_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_654() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5868_XYZ_\", " + 
                    " \"lastName\": \"_EM_5870_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5870_XYZ_"))
                .body("'emailId'", containsString("_EM_5868_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1235963402?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_655() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"id\": -8396243319208513619, " + 
                    " \"lastName\": \"4Oz\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("4Oz"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_656() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5883_XYZ_\", " + 
                    " \"id\": 413564358823135232, " + 
                    " \"lastName\": \"4Oz\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("4Oz"))
                .body("'emailId'", containsString("_EM_5883_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/413564358823135232?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_657() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_658() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4761"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_659() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4761?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_660() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"NdPymcvtOBsF4V\", " + 
                    " \"id\": 921, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("NdPymcvtOBsF4V"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/921?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_661() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5933_XYZ_\", " + 
                    " \"firstName\": \"_EM_5934_XYZ_\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5934_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5933_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_662() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5935_XYZ_\", " + 
                    " \"firstName\": \"_EM_5934_XYZ_\", " + 
                    " \"id\": -261396 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5934_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5935_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-261396?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_663() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"PRFAW\", " + 
                    " \"firstName\": \"_EM_5934_XYZ_\", " + 
                    " \"id\": -261392 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5934_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("PRFAW"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-261392?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_664() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_665() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_666() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5961_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_5961_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_667() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_668() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE7\", " + 
                    " \"firstName\": \"ftVCANnocPk7f9\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("ftVCANnocPk7f9"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_669() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6022_XYZ_\", " + 
                    " \"id\": -8396243319208513615, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_6022_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513615?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_670() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6094_XYZ_\", " + 
                    " \"firstName\": \"_EM_6095_XYZ_\", " + 
                    " \"id\": 619 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6095_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6094_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_671() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_P\", " + 
                    " \"firstName\": \"0jSQU\", " + 
                    " \"id\": -130324 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("0jSQU"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_P"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130324?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_672() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"yuhg6BZD\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("yuhg6BZD"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_673() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"yi2Zb8DqjB2TWGi\", " + 
                    " \"id\": -2097626, " + 
                    " \"lastName\": \"xiyJKef\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("yi2Zb8DqjB2TWGi"))
                .body("'lastName'", containsString("xiyJKef"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2097626"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_674() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6360_XYZ_\", " + 
                    " \"id\": -8396243319208513619, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_6360_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_675() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8809807678031677440, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8809807678031677440"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_676() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6395_XYZ_\", " + 
                    " \"id\": 26, " + 
                    " \"lastName\": \"_EM_6396_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6395_XYZ_"))
                .body("'lastName'", containsString("_EM_6396_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/26"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_677() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/748"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_678() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -3348 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3348"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_679() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/153"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_680() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6547_XYZ_\", " + 
                    " \"firstName\": \"_EM_6548_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6548_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6547_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_681() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6637_XYZ_\", " + 
                    " \"lastName\": \"8oRL35gza\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6637_XYZ_"))
                .body("'lastName'", containsString("8oRL35gza"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/490"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_682() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_683() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_684() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6754_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6754_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_685() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6754_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6754_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_686() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"eP\", " + 
                    " \"id\": 66284 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("eP"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_687() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2512625188623162368?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_688() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6811_XYZ_\", " + 
                    " \"id\": 2512625188589607936, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_6811_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2512625188589607936"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_689() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4192615?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_690() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_691() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4194969?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_692() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 8454892 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/8454892?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_693() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6903_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 256 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6903_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/256"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_694() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6917_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGuX\", " + 
                    " \"id\": -8396243319216902289 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGuX"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6917_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319216902289?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_695() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_696() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEA\", " + 
                    " \"firstName\": \"rhbLclFN\", " + 
                    " \"id\": -4096 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("rhbLclFN"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWEA"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4096?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_697() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -65536 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-65536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_698() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7072_XYZ_\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_7072_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_699() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_700() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"R_HMLKKcdO8nry8c\", " + 
                    " \"lastName\": \"_EM_7120_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7120_XYZ_"))
                .body("'emailId'", containsString("R_HMLKKcdO8nry8c"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/929?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_701() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_702() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_703() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_704() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_705() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_706() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513553 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513553?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_707() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"_EM_7305_XYZ_\", " + 
                    " \"id\": -8396243319208579089 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7305_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208579089"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_708() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7357_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7357_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_709() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_710() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 32 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/32?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_711() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/153"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_712() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_713() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_714() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"_EM_7532_XYZ_\", " + 
                    " \"id\": -8396243319208521809 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7532_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208521809?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_715() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_716() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208497233 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208497233"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_717() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"_EM_7600_XYZ_\", " + 
                    " \"id\": -8396243319208497233 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7600_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208497233"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_718() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_719() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_720() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7623_XYZ_\", " + 
                    " \"lastName\": \"_EM_7624_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7623_XYZ_"))
                .body("'lastName'", containsString("_EM_7624_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/871?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_721() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319141404753 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319141404753?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_722() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEP\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -16 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWEP"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_723() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_724() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-359?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_725() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7906_XYZ_\", " + 
                    " \"id\": 288, " + 
                    " \"lastName\": \"_EM_7907_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7906_XYZ_"))
                .body("'lastName'", containsString("_EM_7907_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/288"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_726() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"id\": 921, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/921?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_727() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_728() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7938_XYZ_\", " + 
                    " \"lastName\": \"_EM_7937_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7937_XYZ_"))
                .body("'emailId'", containsString("_EM_7938_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_729() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319206416467"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_730() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7951_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_7951_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_731() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"cfUAxwZrp\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("cfUAxwZrp"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_732() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"O7sck\", " + 
                    " \"firstName\": \"_EM_8008_XYZ_\", " + 
                    " \"id\": -4 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8008_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("O7sck"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_733() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8066_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8066_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_734() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319141404753 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319141404753?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_735() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319142453329 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319142453329?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_736() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777885?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_737() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8236_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4611686018429528065 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8236_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018429528065"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_738() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319191736403?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_739() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319191736403"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_740() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_741() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_742() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"id\": -8396243319208513619, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_743() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8316_XYZ_\", " + 
                    " \"id\": -3991339480192953343, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_8316_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3991339480192953343?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_744() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8316_XYZ_\", " + 
                    " \"id\": -3991339480192953343, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_8316_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3991339480192953343"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_745() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8345_XYZ_\", " + 
                    " \"id\": -1957368627, " + 
                    " \"lastName\": \"_EM_8347_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8347_XYZ_"))
                .body("'emailId'", containsString("_EM_8345_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1957368627"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_746() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319204319313 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319204319313"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_747() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319204319313 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319204319313"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_748() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8368_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_8368_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16384?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_749() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"jMLrioyBugk\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("jMLrioyBugk"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_750() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_8492_XYZ_\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8492_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_751() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_752() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8554_XYZ_\", " + 
                    " \"firstName\": \"_EM_8555_XYZ_\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8555_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8554_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_753() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8610_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8610_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_754() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513625 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513625"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_755() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_756() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_757() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEW\", " + 
                    " \"firstName\": \"_16CdEKgvb\", " + 
                    " \"id\": 0 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_16CdEKgvb"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWEW"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_758() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEW\", " + 
                    " \"firstName\": \"_16CdEKgvb\", " + 
                    " \"id\": 16777216 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_16CdEKgvb"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWEW"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777216"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_759() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RrJ_FWM\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4611686018431582208 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RrJ_FWM"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018431582208?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_760() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RrJ_FWM\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4611686018431582208 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RrJ_FWM"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018431582208"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_761() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8822_XYZ_\", " + 
                    " \"firstName\": \"_EM_8823_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8823_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8822_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-65150"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_762() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_763() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"WVrqMJExb5nIq\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 2512625188625226752 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("WVrqMJExb5nIq"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2512625188625226752"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_764() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"WVrqMJExb5nIq\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 2512625188625226752 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("WVrqMJExb5nIq"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2512625188625226752"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_765() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"WVrqMJExb5nIq\", " + 
                    " \"firstName\": \"_EM_8950_XYZ_\", " + 
                    " \"id\": 2512625188625234944 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8950_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("WVrqMJExb5nIq"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2512625188625234944?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_766() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_767() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"f95\", " + 
                    " \"id\": -4198121659595868159, " + 
                    " \"lastName\": \"_a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_a"))
                .body("'emailId'", containsString("f95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4198121659595868159"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_768() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"f95\", " + 
                    " \"id\": -4198121659595868159, " + 
                    " \"lastName\": \"_a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_a"))
                .body("'emailId'", containsString("f95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4198121659595868159?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_769() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513585 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513585?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_770() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9017_XYZ_\", " + 
                    " \"id\": 925, " + 
                    " \"lastName\": \"_EM_9019_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9019_XYZ_"))
                .body("'emailId'", containsString("_EM_9017_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/925"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_771() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_772() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_773() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 413564358823127040 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/413564358823127040"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_774() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513617, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_775() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"id\": -8396243319208513601, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513601?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_776() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_777() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9147_XYZ_\", " + 
                    " \"lastName\": \"_EM_9148_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9148_XYZ_"))
                .body("'emailId'", containsString("_EM_9147_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/799"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_778() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"hpeMr3\", " + 
                    " \"id\": 1049324 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("hpeMr3"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1049324?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_779() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4194304 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4194304?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_780() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"Gk4CtyA\", " + 
                    " \"id\": 4194304 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Gk4CtyA"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4194304?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_781() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"Gk4CtyA\", " + 
                    " \"id\": 4194304 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Gk4CtyA"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4194304"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_782() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9212_XYZ_\", " + 
                    " \"lastName\": \"_EM_9213_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9212_XYZ_"))
                .body("'lastName'", containsString("_EM_9213_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/747"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_783() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-359?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_784() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_785() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_786() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C953\", " + 
                    " \"lastName\": \"QXA3y\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("QXA3y"))
                .body("'emailId'", containsString("C953"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319191736403"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_787() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C957\", " + 
                    " \"lastName\": \"_EM_9285_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9285_XYZ_"))
                .body("'emailId'", containsString("C957"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319191736403?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_788() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_789() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_790() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_791() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/664"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_792() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C93\", " + 
                    " \"lastName\": \"_EM_9298_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9298_XYZ_"))
                .body("'emailId'", containsString("C93"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_793() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C93\", " + 
                    " \"lastName\": \"_EM_9298_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9298_XYZ_"))
                .body("'emailId'", containsString("C93"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427387904?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_794() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C93\", " + 
                    " \"lastName\": \"_EM_9298_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9298_XYZ_"))
                .body("'emailId'", containsString("C93"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427396096?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_795() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_796() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"6mxiGva63chHJH\", " + 
                    " \"id\": 173, " + 
                    " \"lastName\": \"ILI7r_QS_XcMC8Cl\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("6mxiGva63chHJH"))
                .body("'lastName'", containsString("ILI7r_QS_XcMC8Cl"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/173"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_797() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"E\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("E"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_798() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"E\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("E"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_799() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 524288 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/524288?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_800() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9415_XYZ_\", " + 
                    " \"firstName\": \"_EM_9416_XYZ_\", " + 
                    " \"id\": -1549186839468042286 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9416_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_9415_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1549186839468042286?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_801() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/994")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 825 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_802() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_37_XYZ_\", " + 
                    " \"id\": 837, " + 
                    " \"lastName\": \"_EM_39_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_39_XYZ_"))
                .body("'emailId'", containsString("_EM_37_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_41_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/837?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_803() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Bkosm\", " + 
                    " \"firstName\": \"_EM_17_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_43_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_17_XYZ_"))
                .body("'lastName'", containsString("_EM_43_XYZ_"))
                .body("'emailId'", containsString("Bkosm"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_804() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_251_XYZ_\", " + 
                    " \"firstName\": \"_EM_252_XYZ_\", " + 
                    " \"lastName\": \"_EM_253_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_252_XYZ_"))
                .body("'lastName'", containsString("_EM_253_XYZ_"))
                .body("'emailId'", containsString("_EM_251_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_256_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/612"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_805() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_18_XYZ_\", " + 
                    " \"firstName\": \"HpU_bk_lB\", " + 
                    " \"id\": -163, " + 
                    " \"lastName\": \"_EM_20_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("HpU_bk_lB"))
                .body("'lastName'", containsString("_EM_20_XYZ_"))
                .body("'emailId'", containsString("_EM_18_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_23_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-163?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_806() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Ir4qAcFO\", " + 
                    " \"firstName\": \"_EM_179_XYZ_\", " + 
                    " \"id\": 269, " + 
                    " \"lastName\": \"roCdavbNaaYq\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_179_XYZ_"))
                .body("'lastName'", containsString("roCdavbNaaYq"))
                .body("'emailId'", containsString("Ir4qAcFO"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_181_XYZ_\", " + 
                    " \"firstName\": \"VHPPEfGY\", " + 
                    " \"id\": 397, " + 
                    " \"lastName\": \"_EM_182_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/269"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_807() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_313_XYZ_\", " + 
                    " \"firstName\": \"_EM_314_XYZ_\", " + 
                    " \"id\": 235, " + 
                    " \"lastName\": \"_EM_315_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_314_XYZ_"))
                .body("'lastName'", containsString("_EM_315_XYZ_"))
                .body("'emailId'", containsString("_EM_313_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"e6ZaGPnppf\", " + 
                    " \"firstName\": \"_EM_316_XYZ_\", " + 
                    " \"id\": 235, " + 
                    " \"lastName\": \"_EM_317_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/235?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_808() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"9xL\", " + 
                    " \"id\": 131781, " + 
                    " \"lastName\": \"_EM_340_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_340_XYZ_"))
                .body("'emailId'", containsString("9xL"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_128_XYZ_\", " + 
                    " \"firstName\": \"_EM_341_XYZ_\", " + 
                    " \"lastName\": \"_EM_130_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/131781"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_809() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_382_XYZ_\", " + 
                    " \"firstName\": \"_EM_383_XYZ_\", " + 
                    " \"id\": 108, " + 
                    " \"lastName\": \"_EM_384_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_383_XYZ_"))
                .body("'lastName'", containsString("_EM_384_XYZ_"))
                .body("'emailId'", containsString("_EM_382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/108"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_810() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"em3t7CvABHN8n9MI\", " + 
                    " \"firstName\": \"HpU_bk_lB\", " + 
                    " \"id\": -164, " + 
                    " \"lastName\": \"_EM_474_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("HpU_bk_lB"))
                .body("'lastName'", containsString("_EM_474_XYZ_"))
                .body("'emailId'", containsString("em3t7CvABHN8n9MI"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 92 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-164"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_811() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_573_XYZ_\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": -4611686018427396096, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_573_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427396096"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_812() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_484_XYZ_\", " + 
                    " \"id\": 33555136 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_484_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_486_XYZ_\", " + 
                    " \"id\": 704, " + 
                    " \"lastName\": \"_EM_488_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/33555136"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_813() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_645_XYZ_\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": -5764607523035289600, " + 
                    " \"lastName\": \"_EM_646_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString("_EM_646_XYZ_"))
                .body("'emailId'", containsString("_EM_645_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523035289600"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_814() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_682_XYZ_\", " + 
                    " \"firstName\": \"_EM_683_XYZ_\", " + 
                    " \"id\": 440, " + 
                    " \"lastName\": \"_EM_684_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_683_XYZ_"))
                .body("'lastName'", containsString("_EM_684_XYZ_"))
                .body("'emailId'", containsString("_EM_682_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_686_XYZ_\", " + 
                    " \"id\": 440, " + 
                    " \"lastName\": \"_EM_687_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/440?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_815() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8qjy\", " + 
                    " \"firstName\": \"_EM_481_XYZ_\", " + 
                    " \"id\": 262525, " + 
                    " \"lastName\": \"C2wA6UqCH09fR\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_481_XYZ_"))
                .body("'lastName'", containsString("C2wA6UqCH09fR"))
                .body("'emailId'", containsString("8qjy"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/262525"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_816() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"lA7DECNhgSy\", " + 
                    " \"firstName\": \"_EM_1033_XYZ_\", " + 
                    " \"id\": -325358686, " + 
                    " \"lastName\": \"_EM_1034_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1033_XYZ_"))
                .body("'lastName'", containsString("_EM_1034_XYZ_"))
                .body("'emailId'", containsString("lA7DECNhgSy"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_1037_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-325358686"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_817() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_452_XYZ_\", " + 
                    " \"firstName\": \"_EM_453_XYZ_\", " + 
                    " \"id\": 33554551 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_453_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_452_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_456_XYZ_\", " + 
                    " \"id\": 119, " + 
                    " \"lastName\": \"_EM_457_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/33554551"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_818() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1327_XYZ_\", " + 
                    " \"lastName\": \"_EM_1329_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1329_XYZ_"))
                .body("'emailId'", containsString("_EM_1327_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1330_XYZ_\", " + 
                    " \"firstName\": \"_EM_1331_XYZ_\", " + 
                    " \"lastName\": \"_EM_1332_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1105?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_819() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1386_XYZ_\", " + 
                    " \"firstName\": \"_EM_651_XYZ_\", " + 
                    " \"id\": -3481, " + 
                    " \"lastName\": \"_EM_652_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_651_XYZ_"))
                .body("'lastName'", containsString("_EM_652_XYZ_"))
                .body("'emailId'", containsString("_EM_1386_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3481?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_820() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"_EM_1393_XYZ_\", " + 
                    " \"id\": 237, " + 
                    " \"lastName\": \"_EM_1394_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1393_XYZ_"))
                .body("'lastName'", containsString("_EM_1394_XYZ_"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1308_XYZ_\", " + 
                    " \"firstName\": \"_EM_1309_XYZ_\", " + 
                    " \"id\": 109 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/237?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_821() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1403_XYZ_\", " + 
                    " \"firstName\": \"_EM_1404_XYZ_\", " + 
                    " \"lastName\": \"_EM_1405_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1404_XYZ_"))
                .body("'lastName'", containsString("_EM_1405_XYZ_"))
                .body("'emailId'", containsString("_EM_1403_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/326"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_822() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"D\", " + 
                    " \"firstName\": \"_EM_749_XYZ_\", " + 
                    " \"id\": 496, " + 
                    " \"lastName\": \"_EM_750_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_749_XYZ_"))
                .body("'lastName'", containsString("_EM_750_XYZ_"))
                .body("'emailId'", containsString("D"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/496?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_823() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1448_XYZ_\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": 1032369, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_1448_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1032369"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_824() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1454_XYZ_\", " + 
                    " \"firstName\": \"_EM_1455_XYZ_\", " + 
                    " \"lastName\": \"iiGxJtoZ41wuo1Gr\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1455_XYZ_"))
                .body("'lastName'", containsString("iiGxJtoZ41wuo1Gr"))
                .body("'emailId'", containsString("_EM_1454_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_1458_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/902?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_825() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"qb3L8nY5o\", " + 
                    " \"firstName\": \"32\", " + 
                    " \"id\": -4611686018427387904, " + 
                    " \"lastName\": \"_EM_586_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("32"))
                .body("'lastName'", containsString("_EM_586_XYZ_"))
                .body("'emailId'", containsString("qb3L8nY5o"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_587_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427387904"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_826() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1399_XYZ_\", " + 
                    " \"firstName\": \"_EM_1400_XYZ_\", " + 
                    " \"id\": 113, " + 
                    " \"lastName\": \"_EM_1401_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1400_XYZ_"))
                .body("'lastName'", containsString("_EM_1401_XYZ_"))
                .body("'emailId'", containsString("_EM_1399_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/113"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_827() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"bYuPQFLDYVnM\", " + 
                    " \"firstName\": \"43\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_586_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("43"))
                .body("'lastName'", containsString("_EM_586_XYZ_"))
                .body("'emailId'", containsString("bYuPQFLDYVnM"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_587_XYZ_\", " + 
                    " \"lastName\": \"0yxsH_rpZj5ya7Py\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_828() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"SXOiNfAhwiD\", " + 
                    " \"firstName\": \"_EM_1644_XYZ_\", " + 
                    " \"id\": 302, " + 
                    " \"lastName\": \"_EM_1645_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1644_XYZ_"))
                .body("'lastName'", containsString("_EM_1645_XYZ_"))
                .body("'emailId'", containsString("SXOiNfAhwiD"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/302"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_829() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1459_XYZ_\", " + 
                    " \"firstName\": \"_EM_260_XYZ_\", " + 
                    " \"id\": -65536, " + 
                    " \"lastName\": \"_EM_1460_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_260_XYZ_"))
                .body("'lastName'", containsString("_EM_1460_XYZ_"))
                .body("'emailId'", containsString("_EM_1459_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_262_XYZ_\", " + 
                    " \"firstName\": \"_EM_263_XYZ_\", " + 
                    " \"id\": 910999329 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-65536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_830() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_594_XYZ_\", " + 
                    " \"firstName\": \"Lbv2NqFg35HwEQ\", " + 
                    " \"id\": -630, " + 
                    " \"lastName\": \"g6BInyf5\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Lbv2NqFg35HwEQ"))
                .body("'lastName'", containsString("g6BInyf5"))
                .body("'emailId'", containsString("_EM_594_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-630?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_831() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_509_XYZ_\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": -15220558, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_509_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-15220558"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_832() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1799_XYZ_\", " + 
                    " \"id\": 720, " + 
                    " \"lastName\": \"iTd\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("iTd"))
                .body("'emailId'", containsString("_EM_1799_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1802_XYZ_\", " + 
                    " \"id\": 720, " + 
                    " \"lastName\": \"_EM_1803_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/720"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_833() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1327_XYZ_\", " + 
                    " \"lastName\": \"_EM_1329_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1329_XYZ_"))
                .body("'emailId'", containsString("_EM_1327_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1330_XYZ_\", " + 
                    " \"firstName\": \"_EM_1331_XYZ_\", " + 
                    " \"lastName\": \"_EM_1332_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/593?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_834() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1459_XYZ_\", " + 
                    " \"firstName\": \"_EM_260_XYZ_\", " + 
                    " \"id\": 1446819617, " + 
                    " \"lastName\": \"_EM_1460_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_260_XYZ_"))
                .body("'lastName'", containsString("_EM_1460_XYZ_"))
                .body("'emailId'", containsString("_EM_1459_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_263_XYZ_\", " + 
                    " \"id\": 910999329 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1446819617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_835() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"_EM_1306_XYZ_\", " + 
                    " \"id\": 8301, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1306_XYZ_"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1308_XYZ_\", " + 
                    " \"firstName\": \"_EM_1309_XYZ_\", " + 
                    " \"id\": 109 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/8301?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_836() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"N\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": 1556657, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("N"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1556657?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_837() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1299_XYZ_\", " + 
                    " \"firstName\": \"_EM_1300_XYZ_\", " + 
                    " \"id\": 752, " + 
                    " \"lastName\": \"0r1jjOeF3_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_838() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1592_XYZ_\", " + 
                    " \"firstName\": \"_EM_1982_XYZ_\", " + 
                    " \"id\": 1556657, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1982_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_1592_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1556657?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_839() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"_EM_1306_XYZ_\", " + 
                    " \"id\": 32877, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1306_XYZ_"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1308_XYZ_\", " + 
                    " \"firstName\": \"_EM_1309_XYZ_\", " + 
                    " \"id\": 109 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/32877?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_840() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\", " + 
                    " \"firstName\": \"_EM_2016_XYZ_\", " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2016_XYZ_"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString(""));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/194"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_841() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2004_XYZ_\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": -16207, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2004_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16207?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_842() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"bYuPQFLDYVnM\", " + 
                    " \"firstName\": \"42\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_586_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("42"))
                .body("'lastName'", containsString("_EM_586_XYZ_"))
                .body("'emailId'", containsString("bYuPQFLDYVnM"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_587_XYZ_\", " + 
                    " \"lastName\": \"0yxsH_rpZj5ya7Py\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_843() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"bYuPQFLDYVnM\", " + 
                    " \"firstName\": \"42\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_586_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("42"))
                .body("'lastName'", containsString("_EM_586_XYZ_"))
                .body("'emailId'", containsString("bYuPQFLDYVnM"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_587_XYZ_\", " + 
                    " \"lastName\": \"0yxsH_rpZj5ya7Py\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_844() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2177_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2177_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"40lj1ETP\", " + 
                    " \"firstName\": \"_EM_2180_XYZ_\", " + 
                    " \"lastName\": \"_EM_2181_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/911"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_845() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2203_XYZ_\", " + 
                    " \"firstName\": \"_EM_2204_XYZ_\", " + 
                    " \"lastName\": \"_EM_2205_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/254"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_846() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OwmwYsC\", " + 
                    " \"firstName\": \"_EM_2032_XYZ_\", " + 
                    " \"id\": 1178382115, " + 
                    " \"lastName\": \"UDBQ4_Rhb1zVxsc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2032_XYZ_"))
                .body("'lastName'", containsString("UDBQ4_Rhb1zVxsc"))
                .body("'emailId'", containsString("OwmwYsC"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_263_XYZ_\", " + 
                    " \"id\": 910999329 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1178382115"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_847() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1459_XYZ_\", " + 
                    " \"firstName\": \"_EM_2234_XYZ_\", " + 
                    " \"id\": 32768, " + 
                    " \"lastName\": \"sv87CyTAfL_OP\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2234_XYZ_"))
                .body("'lastName'", containsString("sv87CyTAfL_OP"))
                .body("'emailId'", containsString("_EM_1459_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_263_XYZ_\", " + 
                    " \"id\": 910999329 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/32768"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_848() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1459_XYZ_\", " + 
                    " \"firstName\": \"_EM_260_XYZ_\", " + 
                    " \"id\": 1446821665, " + 
                    " \"lastName\": \"_EM_1460_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_260_XYZ_"))
                .body("'lastName'", containsString("_EM_1460_XYZ_"))
                .body("'emailId'", containsString("_EM_1459_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"5JIoEH6BIxOPA7t\", " + 
                    " \"id\": 910999329, " + 
                    " \"lastName\": \"_EM_264_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1446821665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_849() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OwmwYsC\", " + 
                    " \"firstName\": \"_EM_2032_XYZ_\", " + 
                    " \"id\": 1178386211, " + 
                    " \"lastName\": \"UDBQ4_Rhb1zVxsc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2032_XYZ_"))
                .body("'lastName'", containsString("UDBQ4_Rhb1zVxsc"))
                .body("'emailId'", containsString("OwmwYsC"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_263_XYZ_\", " + 
                    " \"id\": 910999329 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1178386211?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_850() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2342_XYZ_\", " + 
                    " \"firstName\": \"Dd0wbcIn7Vj\", " + 
                    " \"id\": 599, " + 
                    " \"lastName\": \"9\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Dd0wbcIn7Vj"))
                .body("'lastName'", containsString("9"))
                .body("'emailId'", containsString("_EM_2342_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2343_XYZ_\", " + 
                    " \"lastName\": \"MUiWX9AQg4GD\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/599?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_851() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2004_XYZ_\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": -8404815, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2004_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8404815?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_852() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1592_XYZ_\", " + 
                    " \"firstName\": \"_EM_2344_XYZ_\", " + 
                    " \"id\": 2080945, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2344_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_1592_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2080945?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_853() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"3@\", " + 
                    " \"id\": 2305843009209946121, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3@"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009209946121?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_854() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2270_XYZ_\", " + 
                    " \"firstName\": \"_EM_2271_XYZ_\", " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2271_XYZ_"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_EM_2270_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/131680"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_855() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"3A\", " + 
                    " \"id\": -3458764513817630720, " + 
                    " \"lastName\": \"_EM_2381_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3A"))
                .body("'lastName'", containsString("_EM_2381_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3458764513817630720?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_856() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"vz4tFF1\", " + 
                    " \"firstName\": \"3Agy\", " + 
                    " \"id\": 2305843009207062537, " + 
                    " \"lastName\": \"_EM_510_XYZ_T\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3Agy"))
                .body("'lastName'", containsString("_EM_510_XYZ_T"))
                .body("'emailId'", containsString("vz4tFF1"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009207062537?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_857() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"5\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"zR_cRe6Y\", " + 
                    " \"firstName\": \"f6MYWU\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"EYSJA\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/77"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_858() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2430_XYZ_\", " + 
                    " \"firstName\": \"_EM_260_XYZ_\", " + 
                    " \"id\": 1446788897, " + 
                    " \"lastName\": \"_EM_1460_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_260_XYZ_"))
                .body("'lastName'", containsString("_EM_1460_XYZ_"))
                .body("'emailId'", containsString("_EM_2430_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_263_XYZ_\", " + 
                    " \"id\": 910999329 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1446788897?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_859() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OEuCse\", " + 
                    " \"firstName\": \"5\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("OEuCse"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2171_XYZ_\", " + 
                    " \"firstName\": \"f6MYYU\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/77?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_860() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OwmwYsC\", " + 
                    " \"firstName\": \"_EM_2032_XYZ_\", " + 
                    " \"id\": 1178386211, " + 
                    " \"lastName\": \"UDBQ4_Rhb1zVxsc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2032_XYZ_"))
                .body("'lastName'", containsString("UDBQ4_Rhb1zVxsc"))
                .body("'emailId'", containsString("OwmwYsC"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_263_XYZ_\", " + 
                    " \"id\": 910999329 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1178386211?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_861() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"5\", " + 
                    " \"id\": -4611686018427387904, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2171_XYZ_\", " + 
                    " \"firstName\": \"f6MYYU\", " + 
                    " \"id\": -134217651, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427387904"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_862() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"y2MC24BKSU2in6\", " + 
                    " \"firstName\": \"ePd4En5MCXg6Pcb\", " + 
                    " \"id\": 109, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("ePd4En5MCXg6Pcb"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("y2MC24BKSU2in6"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2171_XYZ_\", " + 
                    " \"firstName\": \"f6MYYU8\", " + 
                    " \"id\": 109, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/109"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_863() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 180, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/180?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_864() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"iR\", " + 
                    " \"firstName\": \"5E\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5E"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("iR"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/77"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_865() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"_EM_2877_XYZ_\", " + 
                    " \"id\": 109, " + 
                    " \"lastName\": \"0yuWTT4yFRVM\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2877_XYZ_"))
                .body("'lastName'", containsString("0yuWTT4yFRVM"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2171_XYZ_\", " + 
                    " \"firstName\": \"f6MYYU8\", " + 
                    " \"id\": 109, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/109?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_866() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2897_XYZ_\", " + 
                    " \"firstName\": \"_EM_2898_XYZ_\", " + 
                    " \"lastName\": \"_EM_2899_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2898_XYZ_"))
                .body("'lastName'", containsString("_EM_2899_XYZ_"))
                .body("'emailId'", containsString("_EM_2897_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2900_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/17096"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_867() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2321_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2321_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2324_XYZ_\", " + 
                    " \"firstName\": \"_EM_2325_XYZ_\", " + 
                    " \"lastName\": \"_EM_2326_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/121?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_868() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_869() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2927_XYZ_\", " + 
                    " \"firstName\": \"_EM_2922_XYZ_\", " + 
                    " \"lastName\": \"_EM_2923_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2922_XYZ_"))
                .body("'lastName'", containsString("_EM_2923_XYZ_"))
                .body("'emailId'", containsString("_EM_2927_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"asG2rLOZ\", " + 
                    " \"id\": -8080192572364318003, " + 
                    " \"lastName\": \"_EM_2928_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8080192572364318003?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_870() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"3A\", " + 
                    " \"id\": -16215, " + 
                    " \"lastName\": \"_EM_3017_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3A"))
                .body("'lastName'", containsString("_EM_3017_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16215"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_871() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2321_XYZ_\", " + 
                    " \"id\": 268435577, " + 
                    " \"lastName\": \"_EM_2323_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2323_XYZ_"))
                .body("'emailId'", containsString("_EM_2321_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Ac8wqIOEETrYvj\", " + 
                    " \"firstName\": \"_EM_3021_XYZ_\", " + 
                    " \"id\": 121, " + 
                    " \"lastName\": \"_EM_3022_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/268435577?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_872() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"6RTKPiXN\", " + 
                    " \"firstName\": \"_EM_3001_XYZ_\", " + 
                    " \"id\": 2305843009215189001, " + 
                    " \"lastName\": \"_EM_3002_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3001_XYZ_"))
                .body("'lastName'", containsString("_EM_3002_XYZ_"))
                .body("'emailId'", containsString("6RTKPiXN"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009215189001"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_873() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3048_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"9VuMEoa\", " + 
                    " \"firstName\": \"_EM_3045_XYZ_\", " + 
                    " \"lastName\": \"_EM_3046_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_3047_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3045_XYZ_"))
                .body("'lastName'", containsString("_EM_3046_XYZ_"))
                .body("'emailId'", containsString("9VuMEoa"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3053_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3049_XYZ_\", " + 
                    " \"firstName\": \"_EM_3050_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/866?EMextraParam123=_EM_3052_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_874() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3104_XYZ_\", " + 
                    " \"firstName\": \"_EM_3105_XYZ_\", " + 
                    " \"lastName\": \"_EM_3106_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3105_XYZ_"))
                .body("'lastName'", containsString("_EM_3106_XYZ_"))
                .body("'emailId'", containsString("_EM_3104_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3107_XYZ_\", " + 
                    " \"id\": 535 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/535?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_875() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3126_XYZ_\", " + 
                    " \"firstName\": \"t6\", " + 
                    " \"lastName\": \"_EM_2388_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("t6"))
                .body("'lastName'", containsString("_EM_2388_XYZ_"))
                .body("'emailId'", containsString("_EM_3126_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-268434848"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_876() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": 16326, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_2910_XYZ_\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16326"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_877() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2270_XYZ_\", " + 
                    " \"firstName\": \"_EM_2271_XYZ_\", " + 
                    " \"lastName\": \"_EM_2388_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2271_XYZ_"))
                .body("'lastName'", containsString("_EM_2388_XYZ_"))
                .body("'emailId'", containsString("_EM_2270_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-268434848"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_878() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2961_XYZ_\", " + 
                    " \"firstName\": \"_EM_2962_XYZ_\", " + 
                    " \"id\": 499251602, " + 
                    " \"lastName\": \"_EM_2963_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2962_XYZ_"))
                .body("'lastName'", containsString("_EM_2963_XYZ_"))
                .body("'emailId'", containsString("_EM_2961_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/499251602?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_879() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"5\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2171_XYZ_\", " + 
                    " \"firstName\": \"f6MYYU\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/77"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_880() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2270_XYZ_\", " + 
                    " \"firstName\": \"_EM_2271_XYZ_\", " + 
                    " \"lastName\": \"_EM_2388_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2271_XYZ_"))
                .body("'lastName'", containsString("_EM_2388_XYZ_"))
                .body("'emailId'", containsString("_EM_2270_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-268434784?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_881() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"3A\", " + 
                    " \"id\": -16215, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3A"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16215"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_882() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3434_XYZ_\", " + 
                    " \"firstName\": \"_EM_3435_XYZ_\", " + 
                    " \"lastName\": \"_EM_3436_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3435_XYZ_"))
                .body("'lastName'", containsString("_EM_3436_XYZ_"))
                .body("'emailId'", containsString("_EM_3434_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/557"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_883() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3473_XYZ_\", " + 
                    " \"firstName\": \"qB8cJKINqF\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("qB8cJKINqF"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3473_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3475_XYZ_\", " + 
                    " \"firstName\": \"_EM_3476_XYZ_\", " + 
                    " \"lastName\": \"_EM_3477_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/444"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_884() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"vg7x\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": -16207, " + 
                    " \"lastName\": \"_EM_3478_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString("_EM_3478_XYZ_"))
                .body("'emailId'", containsString("vg7x"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16207"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_885() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2321_XYZ_\", " + 
                    " \"firstName\": \"_EM_2322_XYZ_\", " + 
                    " \"id\": 121, " + 
                    " \"lastName\": \"_EM_2323_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2322_XYZ_"))
                .body("'lastName'", containsString("_EM_2323_XYZ_"))
                .body("'emailId'", containsString("_EM_2321_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2324_XYZ_\", " + 
                    " \"firstName\": \"_EM_2325_XYZ_\", " + 
                    " \"lastName\": \"_EM_2326_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/121?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_886() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2321_XYZ_\", " + 
                    " \"firstName\": \"_EM_3530_XYZ_\", " + 
                    " \"id\": 262265, " + 
                    " \"lastName\": \"_EM_2323_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3530_XYZ_"))
                .body("'lastName'", containsString("_EM_2323_XYZ_"))
                .body("'emailId'", containsString("_EM_2321_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2324_XYZ_\", " + 
                    " \"firstName\": \"_EM_2325_XYZ_\", " + 
                    " \"lastName\": \"_EM_2326_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/262265"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_887() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"fsk\", " + 
                    " \"firstName\": \"_EM_3563_XYZ_\", " + 
                    " \"id\": 2305843009215190025, " + 
                    " \"lastName\": \"_EM_3564_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3563_XYZ_"))
                .body("'lastName'", containsString("_EM_3564_XYZ_"))
                .body("'emailId'", containsString("fsk"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009215190025"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_888() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"_EM_3565_XYZ_\", " + 
                    " \"id\": -8251, " + 
                    " \"lastName\": \"_EM_2126_XYZ_i\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3565_XYZ_"))
                .body("'lastName'", containsString("_EM_2126_XYZ_i"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8251"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_889() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"_EM_3580_XYZ_\", " + 
                    " \"id\": -16343, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3580_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16343?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_890() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"RrfUeCK8Kl\", " + 
                    " \"id\": -24535, " + 
                    " \"lastName\": \"8asW\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("RrfUeCK8Kl"))
                .body("'lastName'", containsString("8asW"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-24535?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_891() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2891_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2891_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2894_XYZ_\", " + 
                    " \"firstName\": \"49j\", " + 
                    " \"id\": 258, " + 
                    " \"lastName\": \"_EM_2896_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-261886"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_892() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3581_XYZ_\", " + 
                    " \"firstName\": \"_EM_3582_XYZ_\", " + 
                    " \"id\": -1970903445, " + 
                    " \"lastName\": \"hg7dYPYZ_IRNOT\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3582_XYZ_"))
                .body("'lastName'", containsString("hg7dYPYZ_IRNOT"))
                .body("'emailId'", containsString("_EM_3581_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1970903445"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_893() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"3A\", " + 
                    " \"id\": -4611686018427398144, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3A"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427398144"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_894() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"3A\", " + 
                    " \"id\": -4611686018427430912, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3A"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427430912?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_895() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3662_XYZ_\", " + 
                    " \"firstName\": \"5\", " + 
                    " \"id\": 262221, " + 
                    " \"lastName\": \"_EM_3663_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5"))
                .body("'lastName'", containsString("_EM_3663_XYZ_"))
                .body("'emailId'", containsString("_EM_3662_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3664_XYZ_\", " + 
                    " \"firstName\": \"e6MYYU\", " + 
                    " \"id\": 81, " + 
                    " \"lastName\": \"_EM_3665_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/262221"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_896() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3677_XYZ_\", " + 
                    " \"firstName\": \"_EM_3678_XYZ_\", " + 
                    " \"id\": 1310797, " + 
                    " \"lastName\": \"wDxb1WF\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3678_XYZ_"))
                .body("'lastName'", containsString("wDxb1WF"))
                .body("'emailId'", containsString("_EM_3677_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2171_XYZ_\", " + 
                    " \"firstName\": \"f6MYYU\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1310797?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_897() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"7A\", " + 
                    " \"id\": 2305843009198407689, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7A"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009198407689"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_898() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2897_XYZ_\", " + 
                    " \"firstName\": \"_EM_2898_XYZ_\", " + 
                    " \"id\": 712 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2898_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_2897_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8c\", " + 
                    " \"lastName\": \"_EM_3704_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/712"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_899() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"iRsj5pw_rHk8L\", " + 
                    " \"firstName\": \"f9edu26WXYF5h\", " + 
                    " \"id\": -5188146770733623296, " + 
                    " \"lastName\": \"wmfJo48yn\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("f9edu26WXYF5h"))
                .body("'lastName'", containsString("wmfJo48yn"))
                .body("'emailId'", containsString("iRsj5pw_rHk8L"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5188146770733623296?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_900() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1988, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1988"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_901() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3760_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"j0I\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0I"))
                .body("'emailId'", containsString("_EM_3760_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_902() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3782_XYZ_\", " + 
                    " \"id\": 490, " + 
                    " \"lastName\": \"_EM_3783_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3782_XYZ_"))
                .body("'lastName'", containsString("_EM_3783_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3784_XYZ_\", " + 
                    " \"id\": 490, " + 
                    " \"lastName\": \"_EM_3786_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/490?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_903() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"3A\", " + 
                    " \"id\": -4899916394581026816, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3A"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4899916394581026816"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_904() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"E\", " + 
                    " \"firstName\": \"_EM_2892_XYZ_\", " + 
                    " \"id\": 258, " + 
                    " \"lastName\": \"_EM_2893_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2892_XYZ_"))
                .body("'lastName'", containsString("_EM_2893_XYZ_"))
                .body("'emailId'", containsString("E"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/258?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_905() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"E\", " + 
                    " \"firstName\": \"_EM_2892_XYZ_\", " + 
                    " \"id\": 194, " + 
                    " \"lastName\": \"_EM_2893_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2892_XYZ_"))
                .body("'lastName'", containsString("_EM_2893_XYZ_"))
                .body("'emailId'", containsString("E"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2894_XYZ_\", " + 
                    " \"id\": 258, " + 
                    " \"lastName\": \"_EM_2896_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/194?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_906() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3825_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -16777021, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_3825_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"nlS0\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": -130872, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16777021"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_907() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3845_XYZ_\", " + 
                    " \"firstName\": \"Ea4rGfShGLFWwVe_\", " + 
                    " \"lastName\": \"_EM_3846_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Ea4rGfShGLFWwVe_"))
                .body("'lastName'", containsString("_EM_3846_XYZ_"))
                .body("'emailId'", containsString("_EM_3845_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-268402080?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_908() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3854_XYZ_\", " + 
                    " \"firstName\": \"ydcIc\", " + 
                    " \"id\": -437, " + 
                    " \"lastName\": \"QjX\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("ydcIc"))
                .body("'lastName'", containsString("QjX"))
                .body("'emailId'", containsString("_EM_3854_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3852_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-437?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_909() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3922_XYZ_\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": -1047798, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("_EM_3922_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"eByPwldGRYKo4\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_910() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 4292, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"QTBTpyvLOf1P0\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4292?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_911() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 4292, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"id\": 200 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4292?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_912() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2333_XYZ_\", " + 
                    " \"firstName\": \"3A\", " + 
                    " \"id\": 2305843009215189001, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("3A"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_2333_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009215189001"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_913() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 748 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4029_XYZ_\", " + 
                    " \"firstName\": \"_EM_4030_XYZ_\", " + 
                    " \"id\": 748, " + 
                    " \"lastName\": \"_EM_4031_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/748"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_914() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 268435652, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4052_XYZ_\", " + 
                    " \"firstName\": \"_EM_4053_XYZ_\", " + 
                    " \"id\": -828, " + 
                    " \"lastName\": \"_EM_4054_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/268435652?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_915() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4056_XYZ_\", " + 
                    " \"firstName\": \"_EM_450_XYZ_\", " + 
                    " \"id\": -16209, " + 
                    " \"lastName\": \"_EM_510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_450_XYZ_"))
                .body("'lastName'", containsString("_EM_510_XYZ_"))
                .body("'emailId'", containsString("_EM_4056_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16209?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_916() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 4611686018423187456, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KIF53\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018423187456"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_917() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -130425, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130425"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_918() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_919() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_920() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4122_XYZ_\", " + 
                    " \"lastName\": \"_EM_4124_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4124_XYZ_"))
                .body("'emailId'", containsString("_EM_4122_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4125_XYZ_\", " + 
                    " \"firstName\": \"_EM_4126_XYZ_\", " + 
                    " \"id\": -814793575 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-814793575?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_921() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -33554236, " + 
                    " \"lastName\": \"_ufclkFRN\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_ufclkFRN"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"yRq\", " + 
                    " \"firstName\": \"_EM_4129_XYZ_\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"w6Ih0NsJ\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-33554236"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_922() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"_EM_4130_XYZ_\", " + 
                    " \"id\": -33553212, " + 
                    " \"lastName\": \"_ufclkFRN\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4130_XYZ_"))
                .body("'lastName'", containsString("_ufclkFRN"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"yRq\", " + 
                    " \"firstName\": \"GRDKBm26\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"w6Ih0NsJ\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-33553212"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_923() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4242_XYZ_\", " + 
                    " \"firstName\": \"_EM_4243_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4243_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4242_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4245_XYZ_\", " + 
                    " \"firstName\": \"_EM_4246_XYZ_\", " + 
                    " \"lastName\": \"_EM_4247_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/652?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_924() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -143312835, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-143312835?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_925() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -143312835, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-143312835?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_926() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2227705, " + 
                    " \"lastName\": \"j0q\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0q"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227705"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_927() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2719353, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2719353"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_928() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4355_XYZ_\", " + 
                    " \"firstName\": \"WJYsSPy06olZQQM\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"j(C\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("WJYsSPy06olZQQM"))
                .body("'lastName'", containsString("j(C"))
                .body("'emailId'", containsString("_EM_4355_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_929() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -413812675, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-413812675"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_930() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_4379_XYZ_\", " + 
                    " \"id\": -129913, " + 
                    " \"lastName\": \"_EM_4380_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4379_XYZ_"))
                .body("'lastName'", containsString("_EM_4380_XYZ_"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-129913?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_931() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4395_XYZ_\", " + 
                    " \"firstName\": \"_EM_4396_XYZ_\", " + 
                    " \"lastName\": \"z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4396_XYZ_"))
                .body("'lastName'", containsString("z"))
                .body("'emailId'", containsString("_EM_4395_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/914?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_932() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4401_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_4401_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_933() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_4412_XYZ_\", " + 
                    " \"id\": -2195065, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4412_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2195065"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_934() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Xr_u}0\", " + 
                    " \"firstName\": \"_EM_4455_XYZ_\", " + 
                    " \"id\": -2285176, " + 
                    " \"lastName\": \"j.\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4455_XYZ_"))
                .body("'lastName'", containsString("j."))
                .body("'emailId'", containsString("Xr_u}0"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2285176"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_935() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2281080, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2281080?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_936() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_WYZ_9\", " + 
                    " \"firstName\": \"7\", " + 
                    " \"id\": -404878969, " + 
                    " \"lastName\": \"f0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7"))
                .body("'lastName'", containsString("f0"))
                .body("'emailId'", containsString("_EM_1382_WYZ_9"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-404878969?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_937() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1362_WYZ_9\", " + 
                    " \"firstName\": \"7\", " + 
                    " \"id\": -404879481, " + 
                    " \"lastName\": \"f8\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7"))
                .body("'lastName'", containsString("f8"))
                .body("'emailId'", containsString("_EM_1362_WYZ_9"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-404879481"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_938() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146458563, " + 
                    " \"lastName\": \"_EM_4463_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_4463_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146458563?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_939() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_4464_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4464_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_940() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_4465_XYZ_\", " + 
                    " \"id\": -8192, " + 
                    " \"lastName\": \"oc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4465_XYZ_"))
                .body("'lastName'", containsString("oc"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8192"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_941() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -130425, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130425"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_942() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -130425, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130425"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_943() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"dDWsmugWA_P\", " + 
                    " \"firstName\": \"5\", " + 
                    " \"id\": -524203, " + 
                    " \"lastName\": \"VoiVlKT\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5"))
                .body("'lastName'", containsString("VoiVlKT"))
                .body("'emailId'", containsString("dDWsmugWA_P"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2171_XYZ_\", " + 
                    " \"firstName\": \"f6MYYU\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-524203?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_944() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"N8PSS}8D\", " + 
                    " \"id\": -4611686018427389952, " + 
                    " \"lastName\": \"FkB34d7e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("N8PSS}8D"))
                .body("'lastName'", containsString("FkB34d7e"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427389952"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_945() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"q\", " + 
                    " \"firstName\": \"_EM_4505_XYZ_\", " + 
                    " \"lastName\": \"_EM_4506_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4505_XYZ_"))
                .body("'lastName'", containsString("_EM_4506_XYZ_"))
                .body("'emailId'", containsString("q"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/277?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_946() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_4520_XYZ_\", " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4520_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523070850048"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_947() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"_EM_4566_XYZ_\", " + 
                    " \"id\": -1024, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4566_XYZ_"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"V\", " + 
                    " \"firstName\": \"_EM_4565_XYZ_\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1024?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_948() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"5\", " + 
                    " \"id\": 655442, " + 
                    " \"lastName\": \"_EM_4605_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5"))
                .body("'lastName'", containsString("_EM_4605_XYZ_"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"f6MYYU\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/655442"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_949() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"68UAOWmiPkFHsA\", " + 
                    " \"firstName\": \"_EM_4649_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_4650_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_950() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4653_XYZ_\", " + 
                    " \"lastName\": \"_EM_4654_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4653_XYZ_"))
                .body("'lastName'", containsString("_EM_4654_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4655_XYZ_\", " + 
                    " \"firstName\": \"HIsexkZC71QITs\", " + 
                    " \"id\": 118, " + 
                    " \"lastName\": \"cm1Te0JZqr3p\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/118?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_951() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\", " + 
                    " \"firstName\": \"_EM_4656_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4656_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString(""));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_952() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4668_XYZ_\", " + 
                    " \"firstName\": \"_EM_4669_XYZ_\", " + 
                    " \"id\": 673, " + 
                    " \"lastName\": \"_EM_4670_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4669_XYZ_"))
                .body("'lastName'", containsString("_EM_4670_XYZ_"))
                .body("'emailId'", containsString("_EM_4668_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4672_XYZ_\", " + 
                    " \"lastName\": \"_EM_4673_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/673?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_953() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"5\", " + 
                    " \"id\": 655442, " + 
                    " \"lastName\": \"_EM_1307_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5"))
                .body("'lastName'", containsString("_EM_1307_XYZ_"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2171_XYZ_\", " + 
                    " \"firstName\": \"f6MYYU\", " + 
                    " \"id\": 77, " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/655442?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_954() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1305_XYZ_\", " + 
                    " \"firstName\": \"_EM_4691_XYZ_\", " + 
                    " \"id\": 655442, " + 
                    " \"lastName\": \"HQ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4691_XYZ_"))
                .body("'lastName'", containsString("HQ"))
                .body("'emailId'", containsString("_EM_1305_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_1310_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/655442"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_955() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"t0l\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0l"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4738_XYZ_\", " + 
                    " \"firstName\": \"jHqj6RZNodbY4\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_956() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4746_XYZ_\", " + 
                    " \"firstName\": \"d9Y3QHmw_7ev2\", " + 
                    " \"id\": 50, " + 
                    " \"lastName\": \"_EM_4747_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("d9Y3QHmw_7ev2"))
                .body("'lastName'", containsString("_EM_4747_XYZ_"))
                .body("'emailId'", containsString("_EM_4746_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 50 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/50"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_957() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146457539, " + 
                    " \"lastName\": \"FkB34d7e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("FkB34d7e"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146457539"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_958() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4763_XYZ_\", " + 
                    " \"firstName\": \"_EM_4764_XYZ_\", " + 
                    " \"id\": -146457539, " + 
                    " \"lastName\": \"_EM_4765_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4764_XYZ_"))
                .body("'lastName'", containsString("_EM_4765_XYZ_"))
                .body("'emailId'", containsString("_EM_4763_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146457539"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_959() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4766_XYZ_\", " + 
                    " \"firstName\": \"_EM_4767_XYZ_\", " + 
                    " \"lastName\": \"_EM_4768_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4767_XYZ_"))
                .body("'lastName'", containsString("_EM_4768_XYZ_"))
                .body("'emailId'", containsString("_EM_4766_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/954"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_960() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"lGzg3rpUll9tfrm\", " + 
                    " \"id\": 732, " + 
                    " \"lastName\": \"rZ4JppTt6pDc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("lGzg3rpUll9tfrm"))
                .body("'lastName'", containsString("rZ4JppTt6pDc"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/732?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_961() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"lGzg3rpUll9tfrm\", " + 
                    " \"id\": 732, " + 
                    " \"lastName\": \"rZ4JppTt6pDc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("lGzg3rpUll9tfrm"))
                .body("'lastName'", containsString("rZ4JppTt6pDc"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/732?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_962() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": -4611686018360540672, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018360540672"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_963() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -4611686018360540672, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018360540672"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_964() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 4874, " + 
                    " \"lastName\": \"_EM_4836_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_4836_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4874"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_965() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8FPm3Wa0va2QR\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -147507139, " + 
                    " \"lastName\": \"FkB34d7e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("FkB34d7e"))
                .body("'emailId'", containsString("8FPm3Wa0va2QR"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-147507139"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_966() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8FPm3Wa0va2QR\", " + 
                    " \"firstName\": \"_AMU381:UXiU_\", " + 
                    " \"id\": -147507123, " + 
                    " \"lastName\": \"FkB34d7e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_AMU381:UXiU_"))
                .body("'lastName'", containsString("FkB34d7e"))
                .body("'emailId'", containsString("8FPm3Wa0va2QR"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-147507123"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_967() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4892_XYZ_\", " + 
                    " \"firstName\": \"6\", " + 
                    " \"lastName\": \"SB9_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("6"))
                .body("'lastName'", containsString("SB9_"))
                .body("'emailId'", containsString("_EM_4892_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"IEAEBR1\", " + 
                    " \"id\": 955067057 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/955067057"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_968() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16580, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_4896_XYZ_\", " + 
                    " \"id\": -3900, " + 
                    " \"lastName\": \"_EM_4897_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16580"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_969() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\", " + 
                    " \"firstName\": \"_EM_4896_XYZ_\", " + 
                    " \"id\": -3900, " + 
                    " \"lastName\": \"_EM_4898_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_970() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4923_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -145147710, " + 
                    " \"lastName\": \"FkB34d7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("FkB34d7"))
                .body("'emailId'", containsString("_EM_4923_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145147710?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_971() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8WJVfipG9iuYAS\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"8vcv1Fm\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("8vcv1Fm"))
                .body("'emailId'", containsString("8WJVfipG9iuYAS"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_972() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146458819, " + 
                    " \"lastName\": \"FkB34d7e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("FkB34d7e"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146458819"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_973() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146458803, " + 
                    " \"lastName\": \"FkB34d7e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("FkB34d7e"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146458803?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_974() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4953_XYZ_\", " + 
                    " \"id\": 494 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4953_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4954_XYZ_\", " + 
                    " \"firstName\": \"_EM_4955_XYZ_\", " + 
                    " \"id\": 494, " + 
                    " \"lastName\": \"_EM_4956_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/494?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_975() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"DYHY6La7NK1vLbbO\", " + 
                    " \"id\": -144361413, " + 
                    " \"lastName\": \"NqCEd6XSX7pSzM\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("DYHY6La7NK1vLbbO"))
                .body("'lastName'", containsString("NqCEd6XSX7pSzM"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-144361413"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_976() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": -523556, " + 
                    " \"lastName\": \"_EM_5003_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_5003_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-523556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_977() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145409987?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_978() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5050_XYZ_\", " + 
                    " \"firstName\": \"_EM_5051_XYZ_\", " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5051_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_5050_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-111855555?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_979() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_5080_XYZ_\", " + 
                    " \"id\": 16769756, " + 
                    " \"lastName\": \"_EM_5081_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5080_XYZ_"))
                .body("'lastName'", containsString("_EM_5081_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/16769756?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_980() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 65476, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 180, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/65476?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_981() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_5158_XYZ_\", " + 
                    " \"id\": -145406052, " + 
                    " \"lastName\": \"K9dN\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5158_XYZ_"))
                .body("'lastName'", containsString("K9dN"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145406052"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_982() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5171_XYZ_\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 4611686018427390944, " + 
                    " \"lastName\": \"_G\u003dU2U23UXYZg\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_G=U2U23UXYZg"))
                .body("'emailId'", containsString("_EM_5171_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427390944?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_983() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5171_XYZ_\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 4611686018427390960, " + 
                    " \"lastName\": \"_G\u003dU2U23UXYZg\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_G=U2U23UXYZg"))
                .body("'emailId'", containsString("_EM_5171_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427390960?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_984() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -130421, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130421"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_985() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5261_XYZ_\", " + 
                    " \"firstName\": \"5BxArfxdLmq\", " + 
                    " \"id\": -16911737, " + 
                    " \"lastName\": \"_EM_5262_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5BxArfxdLmq"))
                .body("'lastName'", containsString("_EM_5262_XYZ_"))
                .body("'emailId'", containsString("_EM_5261_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16911737?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_986() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"fnz1p1IhikwagTu\", " + 
                    " \"firstName\": \"_EM_5263_XYZ_\", " + 
                    " \"id\": -15863225, " + 
                    " \"lastName\": \"_EM_5262_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5263_XYZ_"))
                .body("'lastName'", containsString("_EM_5262_XYZ_"))
                .body("'emailId'", containsString("fnz1p1IhikwagTu"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-15863225"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_987() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047766?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_988() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 733, " + 
                    " \"lastName\": \"_EM_5304_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_5304_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/733?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_989() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5391_XYZ_\", " + 
                    " \"lastName\": \"_EM_5393_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5393_XYZ_"))
                .body("'emailId'", containsString("_EM_5391_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5395_XYZ_\", " + 
                    " \"lastName\": \"_EM_5396_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/692?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_990() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5408_XYZ_\", " + 
                    " \"firstName\": \"_EM_5409_XYZ_\", " + 
                    " \"lastName\": \"ueKgEdalf1xTpXw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5409_XYZ_"))
                .body("'lastName'", containsString("ueKgEdalf1xTpXw"))
                .body("'emailId'", containsString("_EM_5408_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5410_XYZ_\", " + 
                    " \"firstName\": \"_EM_5411_XYZ_\", " + 
                    " \"id\": 144 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/144"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_991() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2227577, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227577?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_992() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2227577, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227577"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_993() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146458563, " + 
                    " \"lastName\": \"FkB34d7e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("FkB34d7e"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146458563"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_994() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -1152921504590102335, " + 
                    " \"lastName\": \"_EM_5521_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_5521_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1152921504590102335"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_995() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"_EM_5539_XYZ_\", " + 
                    " \"id\": -130844, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5539_XYZ_"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130844?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_996() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5544_XYZ_\", " + 
                    " \"firstName\": \"_EM_5543_XYZ_\", " + 
                    " \"id\": -143312579, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5543_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_5544_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-143312579?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_997() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -146458563, " + 
                    " \"lastName\": \"_EM_5587_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_5587_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-146458563"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_998() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_5587_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_5587_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_999() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_4342_XYZ_O\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_O"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1000() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_4342_XYZ_O\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_O"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1001() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5649_XYZ_\", " + 
                    " \"firstName\": \"_EM_5650_XYZ_\", " + 
                    " \"id\": 845, " + 
                    " \"lastName\": \"_EM_5651_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5650_XYZ_"))
                .body("'lastName'", containsString("_EM_5651_XYZ_"))
                .body("'emailId'", containsString("_EM_5649_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/845"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1002() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_5684_XYZ_\", " + 
                    " \"id\": -145541059, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5684_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-145541059?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1003() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -11192259, " + 
                    " \"lastName\": \"_EM_3803_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("_EM_3803_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-11192259?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1004() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 5332261958812946432, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/5332261958812946432?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1005() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 5332261958745837568, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 4194500, " + 
                    " \"lastName\": \"_EM_5813_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/5332261958745837568?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1006() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -122233, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-122233"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1007() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_5864_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_5864_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1008() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1852, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1852"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1009() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1852, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1852"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1010() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 66847452, " + 
                    " \"lastName\": \"_EM_5864_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_5864_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/66847452"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1011() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 66847452, " + 
                    " \"lastName\": \"_EM_5864_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_5864_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/66847452?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1012() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5895_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": -261444, " + 
                    " \"lastName\": \"_EM_5864_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_5864_XYZ_"))
                .body("'emailId'", containsString("_EM_5895_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-261444?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1013() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -316, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_5910_XYZ_\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-316"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1014() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 324, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1015() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"I1kZVE95J\", " + 
                    " \"id\": 6161031, " + 
                    " \"lastName\": \"j0V\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("I1kZVE95J"))
                .body("'lastName'", containsString("j0V"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/6161031"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1016() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 4611686018427191296, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5939_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427191296"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1017() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"TFr_hC\", " + 
                    " \"firstName\": \"_EM_5957_XYZ_\", " + 
                    " \"id\": 634, " + 
                    " \"lastName\": \"KuqH6bhm59FplUif\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5957_XYZ_"))
                .body("'lastName'", containsString("KuqH6bhm59FplUif"))
                .body("'emailId'", containsString("TFr_hC"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/634"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1018() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 780, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/780"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1019() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_5982_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_5983_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5982_XYZ_"))
                .body("'lastName'", containsString("_EM_5983_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1020() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"8vcv16m\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("8vcv16m"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 2097348, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1021() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6004_XYZ_\", " + 
                    " \"firstName\": \"_EM_6005_XYZ_\", " + 
                    " \"lastName\": \"_EM_6006_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6005_XYZ_"))
                .body("'lastName'", containsString("_EM_6006_XYZ_"))
                .body("'emailId'", containsString("_EM_6004_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6008_XYZ_\", " + 
                    " \"id\": 345, " + 
                    " \"lastName\": \"_EM_6009_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/345"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1022() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_6035_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_6035_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1023() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6039_XYZ_\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": -1047798, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("_EM_6039_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1024() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6039_XYZ_\", " + 
                    " \"firstName\": \"_EM_6040_XYZ_\", " + 
                    " \"id\": -1047798, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6040_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("_EM_6039_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_R\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1025() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -2305843009213775872, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2305843009213775872"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1026() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -2305843009213775872, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2305843009213775872"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1027() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1055990?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1028() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_6046_XYZ_\", " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6046_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1055990"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1029() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"_EM_6048_XYZ_\", " + 
                    " \"id\": -261948, " + 
                    " \"lastName\": \"2\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6048_XYZ_"))
                .body("'lastName'", containsString("2"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gHWCiswSwO2ZMA\", " + 
                    " \"id\": -261944, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-261948"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1030() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6050_XYZ_\", " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_6049_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6049_XYZ_"))
                .body("'emailId'", containsString("_EM_6050_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1031() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": 16777156, " + 
                    " \"lastName\": \"_EM_6068_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6068_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777156"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1032() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1033() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_6069_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1034() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": -1043702, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1043702"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1035() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -256, " + 
                    " \"lastName\": \"e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("e"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-256?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1036() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -5764607523036336128, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523036336128"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1037() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_6088_XYZ_\", " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1038() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"uUnEPp0M3Kfzw4P\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 4611686018419015680, " + 
                    " \"lastName\": \"_EM_6090_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_6090_XYZ_"))
                .body("'emailId'", containsString("uUnEPp0M3Kfzw4P"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018419015680"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1039() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 8126660, " + 
                    " \"lastName\": \"rXrrAz0fIc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("rXrrAz0fIc"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/8126660?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1040() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 8126660, " + 
                    " \"lastName\": \"rXrrAz0fIc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("rXrrAz0fIc"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/8126660?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1041() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"1of\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("1of"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4632"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1042() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1043() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"g4AzE_us\", " + 
                    " \"firstName\": \"5of\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5of"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("g4AzE_us"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427388928"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1044() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": 67108932, " + 
                    " \"lastName\": \"_EM_6120_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6120_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/67108932?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1045() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6130_XYZ_\", " + 
                    " \"firstName\": \"_EM_6132_XYZ_\", " + 
                    " \"id\": -4611686018406412352, " + 
                    " \"lastName\": \"jAmN\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6132_XYZ_"))
                .body("'lastName'", containsString("jAmN"))
                .body("'emailId'", containsString("_EM_6130_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx6:9gIk6KKF53\", " + 
                    " \"lastName\": \"YSPTDOa\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018406412352"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1046() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6133_XYZ_\", " + 
                    " \"id\": 777, " + 
                    " \"lastName\": \"_EM_6134_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6134_XYZ_"))
                .body("'emailId'", containsString("_EM_6133_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/777"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1047() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1048() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6139_XYZ_\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": -4611686018427389448, " + 
                    " \"lastName\": \"_EM_6140_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_6140_XYZ_"))
                .body("'emailId'", containsString("_EM_6139_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427389448"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1049() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 1036, " + 
                    " \"lastName\": \"_EM_6143_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_6143_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"UGi3FqPnQxVhKGJW\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1036?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1050() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": -6341068275402145792, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6341068275402145792?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1051() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"VUfU6WFmQvixyAD\", " + 
                    " \"firstName\": \"_EM_6034_XYZ_\", " + 
                    " \"lastName\": \"_EM_6171_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6034_XYZ_"))
                .body("'lastName'", containsString("_EM_6171_XYZ_"))
                .body("'emailId'", containsString("VUfU6WFmQvixyAD"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/777"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1052() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"VUfU6WFmQvixyAD\", " + 
                    " \"firstName\": \"_EM_6034_XYZ_\", " + 
                    " \"lastName\": \"_EM_6171_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6034_XYZ_"))
                .body("'lastName'", containsString("_EM_6171_XYZ_"))
                .body("'emailId'", containsString("VUfU6WFmQvixyAD"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/777?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1053() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"hCG0lK\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 4611686018427396096, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1054() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"hCG0lK\", " + 
                    " \"firstName\": \"_EM_6198_XYZ_\", " + 
                    " \"id\": 4611686018427396096, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1055() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6223_XYZ_\", " + 
                    " \"firstName\": \"_EM_6224_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_6225_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6224_XYZ_"))
                .body("'lastName'", containsString("_EM_6225_XYZ_"))
                .body("'emailId'", containsString("_EM_6223_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1056() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6223_XYZ_\", " + 
                    " \"firstName\": \"_EM_6226_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_6225_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6226_XYZ_"))
                .body("'lastName'", containsString("_EM_6225_XYZ_"))
                .body("'emailId'", containsString("_EM_6223_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1057() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"SKc\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793604, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("SKc"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793604?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1058() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"iizrqnhWUVg5\", " + 
                    " \"firstName\": \"I0M\", " + 
                    " \"id\": 867, " + 
                    " \"lastName\": \"_EM_6274_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("I0M"))
                .body("'lastName'", containsString("_EM_6274_XYZ_"))
                .body("'emailId'", containsString("iizrqnhWUVg5"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/867?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1059() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -5764607523090467840, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523090467840?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1060() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1061() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16777412, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777412"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1062() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6385_XYZ_\", " + 
                    " \"firstName\": \"_EM_6386_XYZ_\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6386_XYZ_"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_6385_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"rc5\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_6387_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1063() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6385_XYZ_\", " + 
                    " \"firstName\": \"_EM_6386_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6386_XYZ_"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_6385_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"rc5\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_6387_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1064() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6429_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -68223676, " + 
                    " \"lastName\": \"UU\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("UU"))
                .body("'emailId'", containsString("_EM_6429_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-68223676?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1065() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6438_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6438_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1066() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_6446_XYZ_\", " + 
                    " \"id\": -130425, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6446_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130425?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1067() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6447_XYZ_\", " + 
                    " \"firstName\": \"OvfAdrMUPs3k\", " + 
                    " \"id\": 663, " + 
                    " \"lastName\": \"_EM_6448_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("OvfAdrMUPs3k"))
                .body("'lastName'", containsString("_EM_6448_XYZ_"))
                .body("'emailId'", containsString("_EM_6447_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/663"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1068() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6453_XYZ_\", " + 
                    " \"firstName\": \"UW6Z\", " + 
                    " \"id\": -3458764513814772736, " + 
                    " \"lastName\": \"_EM_6455_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UW6Z"))
                .body("'lastName'", containsString("_EM_6455_XYZ_"))
                .body("'emailId'", containsString("_EM_6453_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"bik1f\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3458764513814772736?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1069() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6481_XYZ_\", " + 
                    " \"firstName\": \"8WmQ\", " + 
                    " \"lastName\": \"_EM_6482_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("8WmQ"))
                .body("'lastName'", containsString("_EM_6482_XYZ_"))
                .body("'emailId'", containsString("_EM_6481_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6483_XYZ_\", " + 
                    " \"firstName\": \"hDgggGcNwl8Lxuk\", " + 
                    " \"id\": 488 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/488"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1070() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": -1048636, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6539_XYZ_\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1048636?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1071() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_6550_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6550_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_6549_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1072() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6563_XYZ_\", " + 
                    " \"firstName\": \"QUOFkVbZzk\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("QUOFkVbZzk"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6563_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1737716915, " + 
                    " \"lastName\": \"_EM_6567_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1737716915"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1073() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6553_XYZ_\", " + 
                    " \"firstName\": \"_EM_6587_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_6555_XYZ_a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6587_XYZ_"))
                .body("'lastName'", containsString("_EM_6555_XYZ_a"))
                .body("'emailId'", containsString("_EM_6553_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6556_XYZ_\", " + 
                    " \"firstName\": \"_EM_6557_XYZ_\", " + 
                    " \"id\": 1, " + 
                    " \"lastName\": \"2MdOUAdy0X\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1074() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6591_XYZ_\", " + 
                    " \"firstName\": \"_EM_6592_XYZ_\", " + 
                    " \"lastName\": \"_EM_5796_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6592_XYZ_"))
                .body("'lastName'", containsString("_EM_5796_XYZ_"))
                .body("'emailId'", containsString("_EM_6591_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1075() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6638_XYZ_\", " + 
                    " \"firstName\": \"_EM_6639_XYZ_\", " + 
                    " \"id\": 634, " + 
                    " \"lastName\": \"_EM_6640_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6639_XYZ_"))
                .body("'lastName'", containsString("_EM_6640_XYZ_"))
                .body("'emailId'", containsString("_EM_6638_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"zy\", " + 
                    " \"firstName\": \"_EM_6641_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/634?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1076() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5794_XYZ_\", " + 
                    " \"firstName\": \"_EM_5795_XYZ_\", " + 
                    " \"lastName\": \"_EM_5796_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5795_XYZ_"))
                .body("'lastName'", containsString("_EM_5796_XYZ_"))
                .body("'emailId'", containsString("_EM_5794_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-33554094"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1077() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6675_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 786 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047798?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1078() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -188, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_6707_XYZ_\", " + 
                    " \"id\": -33292092, " + 
                    " \"lastName\": \"_EM_6708_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-188"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1079() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": 4611686018360476160, " + 
                    " \"lastName\": \"z0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("z0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018360476160?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1080() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -64, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": -33554236, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-64?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1081() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6750_XYZ_\", " + 
                    " \"firstName\": \"JL87chXdHhRNEz\", " + 
                    " \"id\": -2227577, " + 
                    " \"lastName\": \"z0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("JL87chXdHhRNEz"))
                .body("'lastName'", containsString("z0"))
                .body("'emailId'", containsString("_EM_6750_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227577"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1082() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6755_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6755_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6759_XYZ_\", " + 
                    " \"lastName\": \"_EM_6760_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-843252407?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1083() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6776_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6776_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1084() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"qQ\", " + 
                    " \"id\": 524824, " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("qQ"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/524824?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1085() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -130425, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130425?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1086() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6797_XYZ_\", " + 
                    " \"firstName\": \"_EM_6798_XYZ_\", " + 
                    " \"lastName\": \"_EM_6799_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6798_XYZ_"))
                .body("'lastName'", containsString("_EM_6799_XYZ_"))
                .body("'emailId'", containsString("_EM_6797_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/44?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1087() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1088() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"CeAlqDd8\", " + 
                    " \"firstName\": \"_EM_6818_XYZ_\", " + 
                    " \"id\": 20987844, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6818_XYZ_"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("CeAlqDd8"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/20987844"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1089() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"R7\", " + 
                    " \"firstName\": \"hP81mC8KlkzFHt6G\", " + 
                    " \"id\": -7414, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("hP81mC8KlkzFHt6G"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("R7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-7414?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1090() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 228, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/228?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1091() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 228, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/228"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1092() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"R7\", " + 
                    " \"firstName\": \"UU81mK8UUUv\u003eUt6U\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UU81mK8UUUv>Ut6U"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("R7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1093() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5794_XYZ_\", " + 
                    " \"firstName\": \"_EM_6942_XYZ_\", " + 
                    " \"id\": -67108526, " + 
                    " \"lastName\": \"lZPKWm0ZnZUe\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6942_XYZ_"))
                .body("'lastName'", containsString("lZPKWm0ZnZUe"))
                .body("'emailId'", containsString("_EM_5794_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-67108526"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1094() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 33555164, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/33555164?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1095() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"G@\", " + 
                    " \"firstName\": \"_EM_6994_XYZ_\", " + 
                    " \"id\": 4, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6994_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("G@"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1096() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7001_XYZ_\", " + 
                    " \"firstName\": \"_EM_7004_XYZ_\", " + 
                    " \"id\": 19283909, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7004_XYZ_"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_7001_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"b3v1ukhOQHD4\\\\\", " + 
                    " \"firstName\": \"_EM_7003_XYZ_\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/19283909?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1097() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_7057_XYZ_\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7057_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"lgC7Th\", " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1098() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7066_XYZ_\", " + 
                    " \"lastName\": \"_EM_7068_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7068_XYZ_"))
                .body("'emailId'", containsString("_EM_7066_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7069_XYZ_\", " + 
                    " \"firstName\": \"_EM_7070_XYZ_\", " + 
                    " \"id\": 5017559627725243082 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/5017559627725243082?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1099() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 19087302, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/19087302?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1100() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 19087334, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7077_XYZ_\", " + 
                    " \"firstName\": \"_EM_7078_XYZ_\", " + 
                    " \"id\": 262, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/19087334"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1101() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6033_XYZ_\", " + 
                    " \"firstName\": \"_EM_6034_XYZ_\", " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6034_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_6033_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1102() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7111_XYZ_\", " + 
                    " \"firstName\": \"_EM_7112_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_7113_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7112_XYZ_"))
                .body("'lastName'", containsString("_EM_7113_XYZ_"))
                .body("'emailId'", containsString("_EM_7111_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 536 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1103() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7159_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -4611686018423193600, " + 
                    " \"lastName\": \"_EM_7160_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_7160_XYZ_"))
                .body("'emailId'", containsString("_EM_7159_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018423193600?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1104() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7159_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -4611686018423128064, " + 
                    " \"lastName\": \"_EM_7160_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_7160_XYZ_"))
                .body("'emailId'", containsString("_EM_7159_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018423128064?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1105() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"qCDj9WNf\", " + 
                    " \"firstName\": \"_EM_7167_XYZ_\", " + 
                    " \"lastName\": \"_EM_5796_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7167_XYZ_"))
                .body("'lastName'", containsString("_EM_5796_XYZ_"))
                .body("'emailId'", containsString("qCDj9WNf"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1106() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"qCDj9WN\", " + 
                    " \"firstName\": \"_EM_7167_XYZ_\", " + 
                    " \"lastName\": \"0iH3M\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7167_XYZ_"))
                .body("'lastName'", containsString("0iH3M"))
                .body("'emailId'", containsString("qCDj9WN"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1107() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"bVT_7g\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 164, " + 
                    " \"lastName\": \"_EM_7170_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_7170_XYZ_"))
                .body("'emailId'", containsString("bVT_7g"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/164"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1108() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -2095908, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2095908"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1109() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7177_XYZ_\", " + 
                    " \"firstName\": \"_EM_7178_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7178_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7177_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"ZaYMUv9bQ\", " + 
                    " \"lastName\": \"_EM_7180_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/659"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1110() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"lkfoNKu\", " + 
                    " \"firstName\": \"_EM_5795_XYZ_\", " + 
                    " \"id\": 850, " + 
                    " \"lastName\": \"_EM_7221_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5795_XYZ_"))
                .body("'lastName'", containsString("_EM_7221_XYZ_"))
                .body("'emailId'", containsString("lkfoNKu"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/850"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1111() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -316, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-316"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1112() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"G@\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_Sb\", " + 
                    " \"id\": 4611686018460942368, " + 
                    " \"lastName\": \"ig`UUQTET7Z5]\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_Sb"))
                .body("'lastName'", containsString("ig`UUQTET7Z5]"))
                .body("'emailId'", containsString("G@"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018460942368"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1113() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7264_XYZ_\", " + 
                    " \"firstName\": \"OH1Z2nI\", " + 
                    " \"id\": -2229624, " + 
                    " \"lastName\": \"Z;\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("OH1Z2nI"))
                .body("'lastName'", containsString("Z;"))
                .body("'emailId'", containsString("_EM_7264_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2229624?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1114() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJBBrZ\", " + 
                    " \"id\": -1039606, " + 
                    " \"lastName\": \"_EM_7268_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7268_XYZ_"))
                .body("'emailId'", containsString("gJBBrZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1039606"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1115() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"_EM_7284_XYZ_\", " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_7283_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7284_XYZ_"))
                .body("'lastName'", containsString("_EM_7283_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1116() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"_EM_7303_XYZ_\", " + 
                    " \"id\": 16793536, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7303_XYZ_"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 262404, " + 
                    " \"lastName\": \"_EM_7304_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1117() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": -67108086 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-67108086?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1118() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_7348_XYZ_\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7348_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1119() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"h\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("h"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 534, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1120() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7387_XYZ_\", " + 
                    " \"firstName\": \"wWRQWJylfOW\", " + 
                    " \"id\": 4874, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("wWRQWJylfOW"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_7387_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4874?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1121() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7387_XYZ_\", " + 
                    " \"firstName\": \"wWRQWJylfOW\", " + 
                    " \"id\": 4878, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("wWRQWJylfOW"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_7387_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4878"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1122() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"h\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("h"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 534, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1123() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Z33yAOB3es\", " + 
                    " \"firstName\": \"h\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("h"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("Z33yAOB3es"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"iD1eBw2\", " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 534, " + 
                    " \"lastName\": \"_EM_7391_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1124() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_7485_XYZ_\", " + 
                    " \"id\": -2227577, " + 
                    " \"lastName\": \"_EM_7486_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7485_XYZ_"))
                .body("'lastName'", containsString("_EM_7486_XYZ_"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227577?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1125() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_7485_XYZ_\", " + 
                    " \"id\": -2227581, " + 
                    " \"lastName\": \"_EM_7486_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7485_XYZ_"))
                .body("'lastName'", containsString("_EM_7486_XYZ_"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227581?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1126() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7505_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7505_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7507_XYZ_\", " + 
                    " \"firstName\": \"_EM_7508_XYZ_\", " + 
                    " \"lastName\": \"_EM_7509_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/632?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1127() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"_EM_7520_XYZ_\", " + 
                    " \"id\": -4611686018427650048, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7520_XYZ_"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"6fH0F\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": -33554232, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427650048?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1128() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6033_XYZ_\", " + 
                    " \"firstName\": \"_EM_6034_XYZ_\", " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6034_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_6033_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1129() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6033_XYZ_\", " + 
                    " \"firstName\": \"_EM_6034_XYZ_\", " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6034_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_6033_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1130() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1131() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1132() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1133() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1134() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1135() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_7634_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"vuD\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7634_XYZ_"))
                .body("'lastName'", containsString("vuD"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1136() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16760772, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16760772?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1137() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"R7\", " + 
                    " \"firstName\": \"UU81mK8UUUv\u003eUt6U\", " + 
                    " \"id\": -5764607523034236928, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UU81mK8UUUv>Ut6U"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("R7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523034236928"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1138() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"R7\", " + 
                    " \"firstName\": \"UU81mK8UUUv\u003eUt6U\", " + 
                    " \"id\": -5764607523034236928, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UU81mK8UUUv>Ut6U"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("R7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523034236928"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1139() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JBkE\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("JBkE"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7770_XYZ_\", " + 
                    " \"id\": 205, " + 
                    " \"lastName\": \"PICL1n3W\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/201"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1140() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7549_XYZ_\", " + 
                    " \"firstName\": \"_EM_7550_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"R9JMCWKDJgxXnF\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7550_XYZ_"))
                .body("'lastName'", containsString("R9JMCWKDJgxXnF"))
                .body("'emailId'", containsString("_EM_7549_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7552_XYZ_\", " + 
                    " \"lastName\": \"_EM_7785_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1141() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7789_XYZ_\", " + 
                    " \"firstName\": \"_EM_7790_XYZ_\", " + 
                    " \"lastName\": \"_EM_7791_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7790_XYZ_"))
                .body("'lastName'", containsString("_EM_7791_XYZ_"))
                .body("'emailId'", containsString("_EM_7789_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/302?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1142() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1143() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2227577, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227577"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1144() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"arQaiXeG\", " + 
                    " \"firstName\": \"gUj\", " + 
                    " \"id\": -2227577, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("gUj"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("arQaiXeG"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227577?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1145() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7822_XYZ_\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7822_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7823_XYZ_\", " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1146() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7822_XYZ_\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7822_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7823_XYZ_\", " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/792"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1147() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_7825_XYZ_\", " + 
                    " \"id\": 4063972, " + 
                    " \"lastName\": \"_EM_7826_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7825_XYZ_"))
                .body("'lastName'", containsString("_EM_7826_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4063972"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1148() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_7827_XYZ_\", " + 
                    " \"id\": 16920, " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7827_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16920"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1149() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_7827_XYZ_\", " + 
                    " \"id\": 16920, " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7827_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16920"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1150() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_3802_XYZ_\", " + 
                    " \"id\": -4611686018501665793, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3802_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665793?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1151() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_7851_XYZ_\", " + 
                    " \"id\": -4611686018501663745, " + 
                    " \"lastName\": \"_EM_7852_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7851_XYZ_"))
                .body("'lastName'", containsString("_EM_7852_XYZ_"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501663745"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1152() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2227577, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2227577?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1153() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_7904_XYZ_\", " + 
                    " \"id\": 2584, " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7904_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/2584?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1154() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7983_XYZ_\", " + 
                    " \"firstName\": \"50Thv\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("50Thv"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_7983_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-15848?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1155() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -60, " + 
                    " \"lastName\": \"d0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("d0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8004_XYZ_\", " + 
                    " \"firstName\": \"eDDWOV6ddj\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-60"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1156() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 131012, " + 
                    " \"lastName\": \"d0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("d0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8004_XYZ_\", " + 
                    " \"firstName\": \"eDDWOV6ddj\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/131012?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1157() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": 4611686018426241536, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018426241536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1158() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1159() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8024_XYZ_\", " + 
                    " \"firstName\": \"_EM_8025_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8025_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_8024_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1160() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8024_XYZ_\", " + 
                    " \"firstName\": \"_EM_8025_XYZ_\", " + 
                    " \"id\": -523510, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8025_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_8024_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-523510?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1161() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_6024_XYZ_\", " + 
                    " \"lastName\": \"_EM_8045_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6024_XYZ_"))
                .body("'lastName'", containsString("_EM_8045_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1560?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1162() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_8046_XYZ_\", " + 
                    " \"lastName\": \"_EM_8047_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8046_XYZ_"))
                .body("'lastName'", containsString("_EM_8047_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1560"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1163() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8048_XYZ_\", " + 
                    " \"firstName\": \"_EM_8049_XYZ_\", " + 
                    " \"id\": 111, " + 
                    " \"lastName\": \"_EM_8050_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8049_XYZ_"))
                .body("'lastName'", containsString("_EM_8050_XYZ_"))
                .body("'emailId'", containsString("_EM_8048_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/111?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1164() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1165() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8075_XYZ_\", " + 
                    " \"firstName\": \"\", " + 
                    " \"id\": 391296547, " + 
                    " \"lastName\": \"fjgvmg\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString(""))
                .body("'lastName'", containsString("fjgvmg"))
                .body("'emailId'", containsString("_EM_8075_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/391296547"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1166() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6024_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6024_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1167() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"8v6e4B\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("8v6e4B"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 536 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1168() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"z^_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("z^_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/552?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1169() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_8170_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"JSmn\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8170_XYZ_"))
                .body("'lastName'", containsString("JSmn"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1170() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7549_XYZ_\", " + 
                    " \"firstName\": \"_EM_7550_XYZ_\", " + 
                    " \"id\": -388, " + 
                    " \"lastName\": \"mB9_83oOoFXtw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7550_XYZ_"))
                .body("'lastName'", containsString("mB9_83oOoFXtw"))
                .body("'emailId'", containsString("_EM_7549_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"mvKLhJaBrm\", " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-388?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1171() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7549_XYZ_\", " + 
                    " \"firstName\": \"_EM_7550_XYZ_\", " + 
                    " \"id\": -388, " + 
                    " \"lastName\": \"mB9_83oOoFXtw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7550_XYZ_"))
                .body("'lastName'", containsString("mB9_83oOoFXtw"))
                .body("'emailId'", containsString("_EM_7549_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"mvKLhJaBrm\", " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-388"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1172() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1173() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8178_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 194, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_8178_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/194?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1174() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"wZ\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("wZ"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"1p4\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1175() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"wZ\", " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("wZ"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"1p4\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-32232?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1176() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8233_XYZ_\", " + 
                    " \"firstName\": \"_EM_8234_XYZ_\", " + 
                    " \"lastName\": \"_EM_8235_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8234_XYZ_"))
                .body("'lastName'", containsString("_EM_8235_XYZ_"))
                .body("'emailId'", containsString("_EM_8233_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-523510"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1177() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8233_XYZ_\", " + 
                    " \"firstName\": \"_EM_8234_XYZ_\", " + 
                    " \"lastName\": \"_EM_8235_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8234_XYZ_"))
                .body("'lastName'", containsString("_EM_8235_XYZ_"))
                .body("'emailId'", containsString("_EM_8233_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-523510"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1178() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"_EM_8311_XYZ_\", " + 
                    " \"id\": -4611686018501665792, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8311_XYZ_"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501665792"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1179() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RXbYo912Prk\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16580, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("RXbYo912Prk"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16580?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1180() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"sYgvseIZTIjmAAJW\", " + 
                    " \"id\": -4322681, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("sYgvseIZTIjmAAJW"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4322681"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1181() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"id\": 4036, " + 
                    " \"lastName\": \"rqpUFWR\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("rqpUFWR"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 196 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4036?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1182() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"U7\", " + 
                    " \"firstName\": \"UU81mK8UUUv\u003eUt6U\", " + 
                    " \"id\": 4611686018427392000, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UU81mK8UUUv>Ut6U"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("U7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427392000"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1183() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6033_XYZ_\", " + 
                    " \"firstName\": \"_EM_6034_XYZ_\", " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6034_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_6033_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-246?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1184() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6033_XYZ_\", " + 
                    " \"firstName\": \"j5XulzbYw48G\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_8490_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("j5XulzbYw48G"))
                .body("'lastName'", containsString("_EM_8490_XYZ_"))
                .body("'emailId'", containsString("_EM_6033_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1185() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"R7\", " + 
                    " \"firstName\": \"UU81mK8UUUv\u003eUt6U\", " + 
                    " \"id\": 2305843009213704193, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UU81mK8UUUv>Ut6U"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("R7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009213704193"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1186() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8495_XYZ_\", " + 
                    " \"firstName\": \"_EM_8496_XYZ_\", " + 
                    " \"id\": 5764607523034240000, " + 
                    " \"lastName\": \"_EM_8497_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8496_XYZ_"))
                .body("'lastName'", containsString("_EM_8497_XYZ_"))
                .body("'emailId'", containsString("_EM_8495_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034240000"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1187() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5794_XYZ_\", " + 
                    " \"firstName\": \"_EM_5795_XYZ_\", " + 
                    " \"lastName\": \"_EM_5796_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5795_XYZ_"))
                .body("'lastName'", containsString("_EM_5796_XYZ_"))
                .body("'emailId'", containsString("_EM_5794_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16776878"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1188() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_e3\", " + 
                    " \"id\": 1560 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_e3"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1560"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1189() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_e3\", " + 
                    " \"id\": 1560 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_e3"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1560?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1190() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8535_XYZ_\", " + 
                    " \"id\": 5764607523062022144, " + 
                    " \"lastName\": \"mIB\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("mIB"))
                .body("'emailId'", containsString("_EM_8535_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523062022144"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1191() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2226553, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2226553?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1192() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"lzoZR\", " + 
                    " \"id\": -2226553, " + 
                    " \"lastName\": \"_EM_8538_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("lzoZR"))
                .body("'lastName'", containsString("_EM_8538_XYZ_"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2226553?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1193() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Ns\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"l0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("l0"))
                .body("'emailId'", containsString("Ns"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1194() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Eiy4wlwDa\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 8388804, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("Eiy4wlwDa"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/8388804?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1195() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8684_XYZ_\", " + 
                    " \"firstName\": \"_EM_8685_XYZ_\", " + 
                    " \"id\": 190, " + 
                    " \"lastName\": \"Bx0ZkZ4tdZ6yK\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8685_XYZ_"))
                .body("'lastName'", containsString("Bx0ZkZ4tdZ6yK"))
                .body("'emailId'", containsString("_EM_8684_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/190?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1196() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2096505, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2096505?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1197() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5794_XYZ_\", " + 
                    " \"firstName\": \"4eggJAGvyG1H3KaH\", " + 
                    " \"id\": 338, " + 
                    " \"lastName\": \"_EM_5796_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("4eggJAGvyG1H3KaH"))
                .body("'lastName'", containsString("_EM_5796_XYZ_"))
                .body("'emailId'", containsString("_EM_5794_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/338?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1198() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16794052, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_8762_XYZ_\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16794052?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1199() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"G@\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_Sb\", " + 
                    " \"id\": 906, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_Sb"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("G@"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/906?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1200() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"G@\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_Sb\", " + 
                    " \"id\": 906, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_Sb"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("G@"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/906?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1201() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5794_XYZ_\", " + 
                    " \"firstName\": \"_EM_5795_XYZ_\", " + 
                    " \"lastName\": \"_EM_5796_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5795_XYZ_"))
                .body("'lastName'", containsString("_EM_5796_XYZ_"))
                .body("'emailId'", containsString("_EM_5794_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/330"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1202() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1203() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"ir\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 4194405, " + 
                    " \"lastName\": \"_EM_8829_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_8829_XYZ_"))
                .body("'emailId'", containsString("ir"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8830_XYZ_\", " + 
                    " \"firstName\": \"2rjWdj\", " + 
                    " \"id\": -32568, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4194405"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1204() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"ir\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 4196453, " + 
                    " \"lastName\": \"_EM_8829_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_8829_XYZ_"))
                .body("'emailId'", containsString("ir"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8830_XYZ_\", " + 
                    " \"firstName\": \"2rjWdj\", " + 
                    " \"id\": -32568, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4196453?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1205() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6033_XYZ_\", " + 
                    " \"firstName\": \"_EM_6034_XYZ_\", " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6034_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_6033_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/810"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1206() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"JhNnPnikcF2N\", " + 
                    " \"firstName\": \"\", " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString(""))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("JhNnPnikcF2N"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/33322?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1207() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7549_XYZ_\", " + 
                    " \"firstName\": \"_EM_7550_XYZ_\", " + 
                    " \"id\": 632, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7550_XYZ_"))
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", containsString("_EM_7549_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/632?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1208() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8906_XYZ_\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_SbXl\", " + 
                    " \"id\": 2097930, " + 
                    " \"lastName\": \"_EM_8908_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_SbXl"))
                .body("'lastName'", containsString("_EM_8908_XYZ_"))
                .body("'emailId'", containsString("_EM_8906_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/2097930?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1209() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"42\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("42"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1210() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": -3900, " + 
                    " \"lastName\": \"42\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("42"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"id\": 200, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3900?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1211() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EIU2121_UUZ_\", " + 
                    " \"firstName\": \"_EM_8967_XYZ_\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_8968_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8967_XYZ_"))
                .body("'lastName'", containsString("_EM_8968_XYZ_"))
                .body("'emailId'", containsString("_EIU2121_UUZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1212() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8975_XYZ_\", " + 
                    " \"id\": 262, " + 
                    " \"lastName\": \"_EM_8976_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8975_XYZ_"))
                .body("'lastName'", containsString("_EM_8976_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8977_XYZ_\", " + 
                    " \"firstName\": \"EVqF2PN632tc4O2E\", " + 
                    " \"id\": 262, " + 
                    " \"lastName\": \"_EM_8978_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/262?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1213() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"G@\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_Sb\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_Sb"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("G@"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1214() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"G@\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_Sb\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_Sb"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("G@"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1215() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -32132, " + 
                    " \"lastName\": \"_EM_7551_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7551_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"mvKLhJaBrm\", " + 
                    " \"firstName\": \"_EM_7552_XYZ_\", " + 
                    " \"lastName\": \"_EM_7553_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-32132?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1216() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"GB\", " + 
                    " \"firstName\": \"_EM_8987_XYZ_\", " + 
                    " \"id\": -4611686018427650048, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8987_XYZ_"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("GB"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427650048"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1217() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"GB\", " + 
                    " \"firstName\": \"_EM_8987_XYZ\", " + 
                    " \"id\": -4611686018427650080, " + 
                    " \"lastName\": \"_EM_9016_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8987_XYZ"))
                .body("'lastName'", containsString("_EM_9016_XYZ_"))
                .body("'emailId'", containsString("GB"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427650080?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1218() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 16777416, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1219() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 196, " + 
                    " \"lastName\": \"t0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("t0"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_3774_XYZ_\", " + 
                    " \"id\": 16777416, " + 
                    " \"lastName\": \"_EM_3775_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/196?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1220() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1221() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2125_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793532, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("_EM_2125_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793532?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1222() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9046_XYZ_\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793532, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_EM_9046_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"gx689gIk6KKF53\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793532"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1223() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"G@\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_Sb\", " + 
                    " \"id\": 786, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_Sb"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("G@"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/786?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1224() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9072_XYZ_\", " + 
                    " \"firstName\": \"_EM_7550_XYZ_\", " + 
                    " \"id\": -4611686018427912192, " + 
                    " \"lastName\": \"_EM_9073_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7550_XYZ_"))
                .body("'lastName'", containsString("_EM_9073_XYZ_"))
                .body("'emailId'", containsString("_EM_9072_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7552_XYZ_\", " + 
                    " \"lastName\": \"_EM_9074_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427912192?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1225() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 1049371 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9109_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2855_XYZ_5\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1049371"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1226() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 1049373 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9109_XYZ_\", " + 
                    " \"firstName\": \"_EM_9110_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"^EM_2855_XYZ_5\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1049373?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1227() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_1383_XYZ_\", " + 
                    " \"id\": -2424185, " + 
                    " \"lastName\": \"j(\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1383_XYZ_"))
                .body("'lastName'", containsString("j("))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2424185"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1228() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"a\", " + 
                    " \"id\": 1770119, " + 
                    " \"lastName\": \"_EM_9123_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("a"))
                .body("'lastName'", containsString("_EM_9123_XYZ_"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1770119"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1229() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"yIIthn\", " + 
                    " \"id\": 373, " + 
                    " \"lastName\": \"cOL9xNKFfkMC\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("cOL9xNKFfkMC"))
                .body("'emailId'", containsString("yIIthn"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9137_XYZ_\", " + 
                    " \"lastName\": \"_EM_9138_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/373"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1230() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9149_XYZ_\", " + 
                    " \"firstName\": \"qH0FEUKtL\", " + 
                    " \"id\": -4324697, " + 
                    " \"lastName\": \"j(\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("qH0FEUKtL"))
                .body("'lastName'", containsString("j("))
                .body("'emailId'", containsString("_EM_9149_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4324697?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1231() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9164_XYZ_\", " + 
                    " \"id\": 8388608, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9164_XYZ_"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/8388608?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1232() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"vDQcZD6Vbc\", " + 
                    " \"id\": 4611686018429485056, " + 
                    " \"lastName\": \"_EM_2853_XYZ_p\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("vDQcZD6Vbc"))
                .body("'lastName'", containsString("_EM_2853_XYZ_p"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018429485056?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1233() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"N2X7\", " + 
                    " \"firstName\": \"qH0HEUKtL\", " + 
                    " \"id\": 12452519, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("qH0HEUKtL"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("N2X7"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/12452519?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1234() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHu\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/1573659"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1235() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"oFMe6\", " + 
                    " \"id\": -4611686018501661680, " + 
                    " \"lastName\": \"vu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("oFMe6"))
                .body("'lastName'", containsString("vu"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501661680?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1236() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"oFMe6\", " + 
                    " \"id\": -4611686018501661680, " + 
                    " \"lastName\": \"~u\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("oFMe6"))
                .body("'lastName'", containsString("~u"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018501661680"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1237() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3801_XYZ_\", " + 
                    " \"firstName\": \"oFMe6\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"~u\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("oFMe6"))
                .body("'lastName'", containsString("~u"))
                .body("'emailId'", containsString("_EM_3801_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1238() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6024_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6024_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1239() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1382_XYZ_\", " + 
                    " \"firstName\": \"_EM_9218_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9218_XYZ_"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("_EM_1382_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1240() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1241() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"hzKgGlRmGVzvklIN\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("hzKgGlRmGVzvklIN"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JlZJvTofSJPHuCZ\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1242() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"pPi5eGc\", " + 
                    " \"firstName\": \"W4FKlf\", " + 
                    " \"id\": -7872544, " + 
                    " \"lastName\": \"j0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("W4FKlf"))
                .body("'lastName'", containsString("j0"))
                .body("'emailId'", containsString("pPi5eGc"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-7872544"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1243() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6024_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6024_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"xuwr9zmt\", " + 
                    " \"id\": 524824, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/537"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1244() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1047844, " + 
                    " \"lastName\": \"gWxLTUX\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("gWxLTUX"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047844"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1245() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"vdU\", " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1047844, " + 
                    " \"lastName\": \"gWxLTUX\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("gWxLTUX"))
                .body("'emailId'", containsString("vdU"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047844?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1246() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"S2xOG_THryPxB\", " + 
                    " \"firstName\": \"A7P\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("A7P"))
                .body("'lastName'", containsString("_EM_2126_XYZ_"))
                .body("'emailId'", containsString("S2xOG_THryPxB"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"WDpSZm59lV_3Jj6\", " + 
                    " \"lastName\": \"kJYvcP45oxLLtjiB\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1247() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"G@\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_Sb\", " + 
                    " \"id\": -4611686018427395584, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_Sb"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("G@"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427395584?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1248() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9281_XYZ_\", " + 
                    " \"firstName\": \"XqXinyliwkhw3_Sbn\", " + 
                    " \"id\": -4611686018427264512, " + 
                    " \"lastName\": \"igdDgSTET8Z5a\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("XqXinyliwkhw3_Sbn"))
                .body("'lastName'", containsString("igdDgSTET8Z5a"))
                .body("'emailId'", containsString("_EM_9281_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427264512"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1249() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": -2089670227092471808, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2089670227092471808"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1250() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": -2089670227092471808, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2089670227092471808?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1251() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"L\", " + 
                    " \"id\": -1047587, " + 
                    " \"lastName\": \"XtoqQQMrAWsVer\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("L"))
                .body("'lastName'", containsString("XtoqQQMrAWsVer"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047587"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1252() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"4KM\", " + 
                    " \"id\": 16384, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("4KM"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16384"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1253() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"4KM\", " + 
                    " \"id\": 16384, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("4KM"))
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16384"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1254() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"d52wNtYqjHWP\", " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1047715, " + 
                    " \"lastName\": \"_EM_9325_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_9325_XYZ_"))
                .body("'emailId'", containsString("d52wNtYqjHWP"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047715"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1255() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4341_XYZ_\", " + 
                    " \"id\": 13020, " + 
                    " \"lastName\": \"kdAqth3AsD2_9i\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4341_XYZ_"))
                .body("'lastName'", containsString("kdAqth3AsD2_9i"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/13020?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1256() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\", " + 
                    " \"firstName\": \"TdOHw32jD5b\", " + 
                    " \"id\": 16793540, " + 
                    " \"lastName\": \"_EM_9356_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TdOHw32jD5b"))
                .body("'lastName'", containsString("_EM_9356_XYZ_"))
                .body("'emailId'", containsString(""));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2127_XYZ_\", " + 
                    " \"firstName\": \"_EM_9357_XYZ_\", " + 
                    " \"id\": 260, " + 
                    " \"lastName\": \"_EM_2128_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/16793540?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1257() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"K5geqCp5w\", " + 
                    " \"firstName\": \"_EM_6034_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_9366_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6034_XYZ_"))
                .body("'lastName'", containsString("_EM_9366_XYZ_"))
                .body("'emailId'", containsString("K5geqCp5w"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/778"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1258() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6023_XYZ_\", " + 
                    " \"firstName\": \"_EM_9369_XYZ_\", " + 
                    " \"id\": -16776680, " + 
                    " \"lastName\": \"_EM_6025_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9369_XYZ_"))
                .body("'lastName'", containsString("_EM_6025_XYZ_"))
                .body("'emailId'", containsString("_EM_6023_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6026_XYZ_\", " + 
                    " \"firstName\": \"_EM_6027_XYZ_\", " + 
                    " \"id\": 536, " + 
                    " \"lastName\": \"_EM_6028_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-16776680"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1259() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"_EM_4697_XYZ_\", " + 
                    " \"id\": -1047812, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4697_XYZ_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047812?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1260() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"_EM_2853_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2853_XYZ_"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1261() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"gJB2rZ\", " + 
                    " \"firstName\": \"_EM_2852_XYZ_\", " + 
                    " \"id\": 778, " + 
                    " \"lastName\": \"J2g0ww1f4z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2852_XYZ_"))
                .body("'lastName'", containsString("J2g0ww1f4z"))
                .body("'emailId'", containsString("gJB2rZ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2854_XYZ_\", " + 
                    " \"firstName\": \"JlZJvTofSJPHuC\", " + 
                    " \"lastName\": \"_EM_2855_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/778?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1262() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"jSgt1\", " + 
                    " \"id\": -4611686018427764736, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("jSgt1"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427764736"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1263() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9422_XYZ_\", " + 
                    " \"firstName\": \"dkSe57E2SAAx0w\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("dkSe57E2SAAx0w"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_9422_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9423_XYZ_\", " + 
                    " \"lastName\": \"_EM_9424_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/935"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1264() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9434_XYZ_\", " + 
                    " \"lastName\": \"_EM_9435_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9435_XYZ_"))
                .body("'emailId'", containsString("_EM_9434_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"iPximo1Rw2m\", " + 
                    " \"id\": 777 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/777"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1265() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4340_XYZ_\", " + 
                    " \"firstName\": \"7j7_R\", " + 
                    " \"id\": -1039652, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7j7_R"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", containsString("_EM_4340_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1039652"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1266() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9437_XYZ_\", " + 
                    " \"firstName\": \"7j7_\", " + 
                    " \"id\": -5764607523034591232, " + 
                    " \"lastName\": \"_EM_4342_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7j7_"))
                .body("'lastName'", containsString("_EM_4342_XYZ_"))
                .body("'emailId'", containsString("_EM_9437_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523034591232?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1267() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_298_XYZ_\", " + 
                    " \"firstName\": \"_EM_299_XYZ_\", " + 
                    " \"lastName\": \"_EM_300_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_299_XYZ_"))
                .body("'lastName'", containsString("_EM_300_XYZ_"))
                .body("'emailId'", containsString("_EM_298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/356?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1268() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_24_XYZ_\", " + 
                    " \"firstName\": \"_EM_361_XYZ_\", " + 
                    " \"id\": -6966556220046638795, " + 
                    " \"lastName\": \"_EM_26_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_361_XYZ_"))
                .body("'lastName'", containsString("_EM_26_XYZ_"))
                .body("'emailId'", containsString("_EM_24_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6966556220046638795?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1269() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_183_XYZ_\", " + 
                    " \"firstName\": \"dWNpuzRIBiF\", " + 
                    " \"id\": 8192, " + 
                    " \"lastName\": \"_EM_185_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("dWNpuzRIBiF"))
                .body("'lastName'", containsString("_EM_185_XYZ_"))
                .body("'emailId'", containsString("_EM_183_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/8192?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1270() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_471_XYZ_\", " + 
                    " \"firstName\": \"_EM_472_XYZ_\", " + 
                    " \"id\": -6966556220080213707, " + 
                    " \"lastName\": \"_EM_473_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_472_XYZ_"))
                .body("'lastName'", containsString("_EM_473_XYZ_"))
                .body("'emailId'", containsString("_EM_471_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6966556220080213707?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1271() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_489_XYZ_\", " + 
                    " \"firstName\": \"_EM_490_XYZ_\", " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_490_XYZ_"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_489_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/928?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1272() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_489_XYZ_\", " + 
                    " \"firstName\": \"_EM_610_XYZ_\", " + 
                    " \"id\": 926, " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_610_XYZ_"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_489_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/926?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1273() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_676_XYZ_\", " + 
                    " \"firstName\": \"_EM_490_XYZ_\", " + 
                    " \"id\": -4324448, " + 
                    " \"lastName\": \"_EM_677_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_490_XYZ_"))
                .body("'lastName'", containsString("_EM_677_XYZ_"))
                .body("'emailId'", containsString("_EM_676_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4324448?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1274() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_UU_:U_UUUU\", " + 
                    " \"firstName\": \"_EM_895_XYZ_\", " + 
                    " \"id\": -6966556220080252619, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_895_XYZ_"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_UU_:U_UUUU"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6966556220080252619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1275() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_489_XYZ_\", " + 
                    " \"firstName\": \"_EM_490_XYZ_\", " + 
                    " \"id\": -130144, " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_490_XYZ_"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_489_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-130144?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1276() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_UU_:U_UUUU\", " + 
                    " \"firstName\": \"J8ax6wFSYcQDzp\", " + 
                    " \"id\": -6966556220080203467, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("J8ax6wFSYcQDzp"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_UU_:U_UUUU"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6966556220080203467"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1277() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_736_XYZ_\", " + 
                    " \"firstName\": \"_EM_737_XYZ_\", " + 
                    " \"id\": 4611686018434727936, " + 
                    " \"lastName\": \"mfdeujUf8jTuuLS9\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_737_XYZ_"))
                .body("'lastName'", containsString("mfdeujUf8jTuuLS9"))
                .body("'emailId'", containsString("_EM_736_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018434727936?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1278() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1108_XYZ_\", " + 
                    " \"firstName\": \"_EM_1109_XYZ_\", " + 
                    " \"id\": 4611686018494496768, " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1109_XYZ_"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_1108_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018494496768"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1279() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1365_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1362_XYZ_\", " + 
                    " \"firstName\": \"_EM_1363_XYZ_\", " + 
                    " \"id\": 26, " + 
                    " \"lastName\": \"mdgQIkE\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1363_XYZ_"))
                .body("'lastName'", containsString("mdgQIkE"))
                .body("'emailId'", containsString("_EM_1362_XYZ_"));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1367_XYZ_")
                .delete(baseUrlOfSut + "/employees/217?EMextraParam123=_EM_1366_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1372_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 801, " + 
                    " \"lastName\": \"_EM_1370_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_1371_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1370_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/6807692270106308103")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1280() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8S4qkkn_Wy5KHX\", " + 
                    " \"firstName\": \"_EM_490_XYZ_\", " + 
                    " \"lastName\": \"_EM_1493_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_490_XYZ_"))
                .body("'lastName'", containsString("_EM_1493_XYZ_"))
                .body("'emailId'", containsString("8S4qkkn_Wy5KHX"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/268436384?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1281() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1108_XYZ_5\", " + 
                    " \"firstName\": \"_EM_1525_XYZ_\", " + 
                    " \"id\": 4611686018561474560, " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1525_XYZ_"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_1108_XYZ_5"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018561474560?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1282() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1108_XYZ_\", " + 
                    " \"firstName\": \"_EM_1109_XYZ_\", " + 
                    " \"id\": 5764607523134865408, " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1109_XYZ_"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_1108_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523134865408"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1283() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1063_XYZ_\", " + 
                    " \"firstName\": \"Fp\", " + 
                    " \"id\": 4611686018427387904, " + 
                    " \"lastName\": \"_EM_1065_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Fp"))
                .body("'lastName'", containsString("_EM_1065_XYZ_"))
                .body("'emailId'", containsString("_EM_1063_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427387904"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1284() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1375_XYZ_\", " + 
                    " \"firstName\": \"8FalMYwTg0s\", " + 
                    " \"id\": -380391841346207037, " + 
                    " \"lastName\": \"YX2fSTflkEcj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("8FalMYwTg0s"))
                .body("'lastName'", containsString("YX2fSTflkEcj"))
                .body("'emailId'", containsString("_EM_1375_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-380391841346207037?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1285() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1571_XYZ_\", " + 
                    " \"firstName\": \"_EM_490_XYZ_\", " + 
                    " \"lastName\": \"_EM_1572_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_490_XYZ_"))
                .body("'lastName'", containsString("_EM_1572_XYZ_"))
                .body("'emailId'", containsString("_EM_1571_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/268436384?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1286() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1610_XYZ_\", " + 
                    " \"firstName\": \"_EM_1611_XYZ_\", " + 
                    " \"id\": 197, " + 
                    " \"lastName\": \"_EM_1612_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1611_XYZ_"))
                .body("'lastName'", containsString("_EM_1612_XYZ_"))
                .body("'emailId'", containsString("_EM_1610_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/197?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1287() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1108_XYZ_\", " + 
                    " \"firstName\": \"EKoDtdiWc4IEMNr\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("EKoDtdiWc4IEMNr"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_1108_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1288() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1823_XYZ_\", " + 
                    " \"firstName\": \"_EM_1824_XYZ_\", " + 
                    " \"id\": 637, " + 
                    " \"lastName\": \"_EM_1825_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1824_XYZ_"))
                .body("'lastName'", containsString("_EM_1825_XYZ_"))
                .body("'emailId'", containsString("_EM_1823_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/637"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1289() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_956_XYZ_\", " + 
                    " \"firstName\": \"_EM_1837_XYZ_\", " + 
                    " \"id\": 1048743, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1837_XYZ_"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", containsString("_EM_956_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1048743"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1290() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_956_XYZ_\", " + 
                    " \"firstName\": \"\", " + 
                    " \"id\": -4, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString(""))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", containsString("_EM_956_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1291() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_956_XYZ_\", " + 
                    " \"firstName\": \"d53OO1jTeqJwX\", " + 
                    " \"id\": -32768, " + 
                    " \"lastName\": \"_EM_958_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("d53OO1jTeqJwX"))
                .body("'lastName'", containsString("_EM_958_XYZ_"))
                .body("'emailId'", containsString("_EM_956_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-32768"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1292() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_956_XYZ_\", " + 
                    " \"firstName\": \"I2UIGUNUs9krxa\", " + 
                    " \"id\": -1064793, " + 
                    " \"lastName\": \"_EM_2043_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("I2UIGUNUs9krxa"))
                .body("'lastName'", containsString("_EM_2043_XYZ_"))
                .body("'emailId'", containsString("_EM_956_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1064793?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1293() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1610_XYZ_\", " + 
                    " \"firstName\": \"_EM_1611_XYZ_\", " + 
                    " \"id\": 229, " + 
                    " \"lastName\": \"_EM_1612_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1611_XYZ_"))
                .body("'lastName'", containsString("_EM_1612_XYZ_"))
                .body("'emailId'", containsString("_EM_1610_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/229?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1294() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1108_XYZ_\", " + 
                    " \"firstName\": \"_EM_1109_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2117_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1109_XYZ_"))
                .body("'lastName'", containsString("_EM_2117_XYZ_"))
                .body("'emailId'", containsString("_EM_1108_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1295() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1108_XYZ_\", " + 
                    " \"firstName\": \"_EM_2123_XYZ_\", " + 
                    " \"id\": 4194304, " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2123_XYZ_"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_1108_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4194304"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1296() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2222_XYZ_\", " + 
                    " \"firstName\": \"_EM_2223_XYZ_\", " + 
                    " \"id\": 834, " + 
                    " \"lastName\": \"_EM_2224_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2223_XYZ_"))
                .body("'lastName'", containsString("_EM_2224_XYZ_"))
                .body("'emailId'", containsString("_EM_2222_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/834"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1297() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2260_XYZ_\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"id\": 1147152358, " + 
                    " \"lastName\": \"_EM_2311_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("_EM_2311_XYZ_"))
                .body("'emailId'", containsString("_EM_2260_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1298() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2354_XYZ_\", " + 
                    " \"firstName\": \"_EM_2355_XYZ_\", " + 
                    " \"id\": 177, " + 
                    " \"lastName\": \"_EM_2356_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2355_XYZ_"))
                .body("'lastName'", containsString("_EM_2356_XYZ_"))
                .body("'emailId'", containsString("_EM_2354_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/177"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1299() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1555_XYZ_\", " + 
                    " \"firstName\": \"_EM_1556_XYZ_\", " + 
                    " \"lastName\": \"_EM_1557_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1556_XYZ_"))
                .body("'lastName'", containsString("_EM_1557_XYZ_"))
                .body("'emailId'", containsString("_EM_1555_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/389728313?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1300() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1108_XYZ_\", " + 
                    " \"firstName\": \"_EM_1109_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_491_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1109_XYZ_"))
                .body("'lastName'", containsString("_EM_491_XYZ_"))
                .body("'emailId'", containsString("_EM_1108_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1301() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2694_XYZ_\", " + 
                    " \"firstName\": \"_EM_1109_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"X1hUoigmy\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1109_XYZ_"))
                .body("'lastName'", containsString("X1hUoigmy"))
                .body("'emailId'", containsString("_EM_2694_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1302() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2723_XYZ_\", " + 
                    " \"firstName\": \"_EM_1556_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_1557_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1556_XYZ_"))
                .body("'lastName'", containsString("_EM_1557_XYZ_"))
                .body("'emailId'", containsString("_EM_2723_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1303() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1063_XYZ_\", " + 
                    " \"firstName\": \"_EM_1064_XYZ_\", " + 
                    " \"id\": 184, " + 
                    " \"lastName\": \"_EM_1065_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1064_XYZ_"))
                .body("'lastName'", containsString("_EM_1065_XYZ_"))
                .body("'emailId'", containsString("_EM_1063_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/184"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1304() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"S\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"id\": 1147154406, " + 
                    " \"lastName\": \"_EM_2787_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("_EM_2787_XYZ_"))
                .body("'emailId'", containsString("S"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147154406?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1305() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3005_XYZ_\", " + 
                    " \"firstName\": \"_EM_3015_XYZ_\", " + 
                    " \"id\": -134217728, " + 
                    " \"lastName\": \"_EM_3016_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3015_XYZ_"))
                .body("'lastName'", containsString("_EM_3016_XYZ_"))
                .body("'emailId'", containsString("_EM_3005_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-134217728?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1306() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"yv\", " + 
                    " \"firstName\": \"_EM_1556_XYZ_\", " + 
                    " \"id\": 194855964, " + 
                    " \"lastName\": \"_EM_1557_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1556_XYZ_"))
                .body("'lastName'", containsString("_EM_1557_XYZ_"))
                .body("'emailId'", containsString("yv"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/194855964"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1307() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"yv\", " + 
                    " \"firstName\": \"_EM_1556_XYZ_\", " + 
                    " \"id\": 456804409, " + 
                    " \"lastName\": \"_EM_1557_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1556_XYZ_"))
                .body("'lastName'", containsString("_EM_1557_XYZ_"))
                .body("'emailId'", containsString("yv"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/456804409"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1308() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 33555180, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33555180"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1309() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2266_XYZ_\", " + 
                    " \"firstName\": \"vHLoT\", " + 
                    " \"lastName\": \"_EM_2267_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("vHLoT"))
                .body("'lastName'", containsString("_EM_2267_XYZ_"))
                .body("'emailId'", containsString("_EM_2266_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/262981"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1310() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"EWkHflNC8R7Dl1\", " + 
                    " \"firstName\": \"o\", " + 
                    " \"id\": 620, " + 
                    " \"lastName\": \"791LOIXq0L\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("o"))
                .body("'lastName'", containsString("791LOIXq0L"))
                .body("'emailId'", containsString("EWkHflNC8R7Dl1"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/620?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1311() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_3087_XYZ_\", " + 
                    " \"id\": 812, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3087_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/812?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1312() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -261524, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-261524"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1313() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"l8b1oBWcVFTHTW_\", " + 
                    " \"id\": 4261616, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("l8b1oBWcVFTHTW_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4261616?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1314() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3179_XYZ_\", " + 
                    " \"firstName\": \"_EM_1109_XYZ_\", " + 
                    " \"id\": -4611686018359230464, " + 
                    " \"lastName\": \"dRsE8piW\u0026sIkCEQB\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1109_XYZ_"))
                .body("'lastName'", containsString("dRsE8piW&sIkCEQB"))
                .body("'emailId'", containsString("_EM_3179_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018359230464?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1315() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1316() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1317() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1318() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3531_XYZ_\", " + 
                    " \"firstName\": \"LBryMWF\", " + 
                    " \"id\": 4611686018427404288, " + 
                    " \"lastName\": \"_EM_3379_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("LBryMWF"))
                .body("'lastName'", containsString("_EM_3379_XYZ_"))
                .body("'emailId'", containsString("_EM_3531_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427404288"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1319() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3415_XYZ_\", " + 
                    " \"firstName\": \"7\", " + 
                    " \"id\": 231, " + 
                    " \"lastName\": \"x\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7"))
                .body("'lastName'", containsString("x"))
                .body("'emailId'", containsString("_EM_3415_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/231?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1320() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2260_XYZ_\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"lastName\": \"_EM_3089_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("_EM_3089_XYZ_"))
                .body("'emailId'", containsString("_EM_2260_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1321() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"T\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"id\": 1147152366, " + 
                    " \"lastName\": \"_EM_3089_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("_EM_3089_XYZ_"))
                .body("'emailId'", containsString("T"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152366?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1322() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3415_XYZ_\", " + 
                    " \"firstName\": \"7\", " + 
                    " \"id\": 231, " + 
                    " \"lastName\": \"x\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7"))
                .body("'lastName'", containsString("x"))
                .body("'emailId'", containsString("_EM_3415_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/231"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1323() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 328432, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/328432"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1324() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 8214565720323793920, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/8214565720323793920"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1325() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3771_XYZ_\", " + 
                    " \"firstName\": \"7\", " + 
                    " \"lastName\": \"_EM_3416_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7"))
                .body("'lastName'", containsString("_EM_3416_XYZ_"))
                .body("'emailId'", containsString("_EM_3771_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/231?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1326() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3771_XYZ_\", " + 
                    " \"firstName\": \"_EM_3772_XYZ_\", " + 
                    " \"lastName\": \"_EM_3773_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3772_XYZ_"))
                .body("'lastName'", containsString("_EM_3773_XYZ_"))
                .body("'emailId'", containsString("_EM_3771_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/230?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1327() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"x50DtbpZl76M\", " + 
                    " \"id\": 8214565720457880574, " + 
                    " \"lastName\": \"rG4jgEFKM2dV\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("x50DtbpZl76M"))
                .body("'lastName'", containsString("rG4jgEFKM2dV"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/8214565720457880574?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1328() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3415_XYZ_\", " + 
                    " \"firstName\": \"7\", " + 
                    " \"id\": -8388377, " + 
                    " \"lastName\": \"_EM_3416_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7"))
                .body("'lastName'", containsString("_EM_3416_XYZ_"))
                .body("'emailId'", containsString("_EM_3415_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8388377"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1329() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3993_XYZ_\", " + 
                    " \"firstName\": \"_EM_3994_XYZ_\", " + 
                    " \"id\": -8396243319210610771, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3994_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_3993_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319210610771?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1330() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4090_XYZ_\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"id\": 4611686019000963584, " + 
                    " \"lastName\": \"MmhY1RNwlIZ8zks6\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("MmhY1RNwlIZ8zks6"))
                .body("'emailId'", containsString("_EM_4090_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686019000963584?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1331() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2260_XYZ_\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"id\": 1147152358, " + 
                    " \"lastName\": \"hY9hJRdf9\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("hY9hJRdf9"))
                .body("'emailId'", containsString("_EM_2260_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1332() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193684, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193684?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1333() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FOE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 328432, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FOE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/328432?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1334() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FW\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4611686018427469824, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FW"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427469824?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1335() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -272629012, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-272629012"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1336() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3377_XYZ_\", " + 
                    " \"firstName\": \"_EM_3378_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3379_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3378_XYZ_"))
                .body("'lastName'", containsString("_EM_3379_XYZ_"))
                .body("'emailId'", containsString("_EM_3377_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1337() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"GIlujz\u0026u\", " + 
                    " \"id\": -2305843009248263680, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("GIlujz&u"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2305843009248263680?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1338() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_4180_XYZ_\", " + 
                    " \"id\": 336624, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4180_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/336624?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1339() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4185_XYZ_\", " + 
                    " \"firstName\": \"uRCJbfxftD0eAu9R\", " + 
                    " \"id\": 338671, " + 
                    " \"lastName\": \"_EM_4186_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("uRCJbfxftD0eAu9R"))
                .body("'lastName'", containsString("_EM_4186_XYZ_"))
                .body("'emailId'", containsString("_EM_4185_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/338671?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1340() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4183_XYZ_\", " + 
                    " \"firstName\": \"uRCJbfxftD0eAu9R\", " + 
                    " \"id\": 338160, " + 
                    " \"lastName\": \"_EM_4187_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("uRCJbfxftD0eAu9R"))
                .body("'lastName'", containsString("_EM_4187_XYZ_"))
                .body("'emailId'", containsString("_EM_4183_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/338160?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1341() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OBVpjTOCcHK0to7P\", " + 
                    " \"firstName\": \"_EM_3378_XYZ_\", " + 
                    " \"lastName\": \"_EM_3379_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3378_XYZ_"))
                .body("'lastName'", containsString("_EM_3379_XYZ_"))
                .body("'emailId'", containsString("OBVpjTOCcHK0to7P"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/252?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1342() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OBVpjTOCcHK0to7P\", " + 
                    " \"firstName\": \"5o7rvjSHq\", " + 
                    " \"id\": 16636, " + 
                    " \"lastName\": \"_EM_3379_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("5o7rvjSHq"))
                .body("'lastName'", containsString("_EM_3379_XYZ_"))
                .body("'emailId'", containsString("OBVpjTOCcHK0to7P"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16636?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1343() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2260_XYZ_\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"id\": -4611686018140599808, " + 
                    " \"lastName\": \"om3\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("om3"))
                .body("'emailId'", containsString("_EM_2260_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018140599808?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1344() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3377_XYZ_\", " + 
                    " \"firstName\": \"42\", " + 
                    " \"id\": 252, " + 
                    " \"lastName\": \"_EM_3379_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("42"))
                .body("'lastName'", containsString("_EM_3379_XYZ_"))
                .body("'emailId'", containsString("_EM_3377_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/252"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1345() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsH_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -1015244, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsH_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1015244?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1346() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4207_XYZ_\", " + 
                    " \"firstName\": \"1rmwQPfqEZGmSOZf\", " + 
                    " \"id\": -507622, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("1rmwQPfqEZGmSOZf"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_EM_4207_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-507622?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1347() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4206_XYZ_\", " + 
                    " \"firstName\": \"1rmwQPfqEZGmSOZf\", " + 
                    " \"id\": 66288, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("1rmwQPfqEZGmSOZf"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4206_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66288"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1348() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4206_XYZ_\", " + 
                    " \"firstName\": \"1rmwQPfqEZGmSOZf\", " + 
                    " \"id\": 66288, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("1rmwQPfqEZGmSOZf"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4206_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66288"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1349() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWEU\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 1024, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWEU"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1024?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1350() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4211_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -5764607523067817984, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4211_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523067817984"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1351() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -2096404, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2096404?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1352() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -2095380, " + 
                    " \"lastName\": \"_EM_4212_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_4212_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2095380"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1353() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RkK_DU[\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66296, " + 
                    " \"lastName\": \"_EM_4221_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_4221_XYZ_"))
                .body("'emailId'", containsString("RkK_DU["));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66296?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1354() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"A1gUYaI0uNV1A\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("A1gUYaI0uNV1A"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1355() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"ip55jmVcks0\", " + 
                    " \"firstName\": \"_EM_4234_XYZ_\", " + 
                    " \"id\": 130024172, " + 
                    " \"lastName\": \"ypUwvwTBEN\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4234_XYZ_"))
                .body("'lastName'", containsString("ypUwvwTBEN"))
                .body("'emailId'", containsString("ip55jmVcks0"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/130024172?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1356() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4228_XYZ_\", " + 
                    " \"firstName\": \"_EM_4239_XYZ_\", " + 
                    " \"id\": -8396243319209037895, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4239_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4228_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319209037895"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1357() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3377_XYZ_\", " + 
                    " \"firstName\": \"_EM_3378_XYZ_\", " + 
                    " \"id\": 134217980, " + 
                    " \"lastName\": \"_EM_3379_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3378_XYZ_"))
                .body("'lastName'", containsString("_EM_3379_XYZ_"))
                .body("'emailId'", containsString("_EM_3377_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/134217980?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1358() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4255_XYZ_\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"id\": 1145059302, " + 
                    " \"lastName\": \"_EM_3089_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("_EM_3089_XYZ_"))
                .body("'emailId'", containsString("_EM_4255_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1145059302?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1359() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2260_XYZ_\", " + 
                    " \"firstName\": \"_EM_4281_XYZ_\", " + 
                    " \"id\": 1146107878, " + 
                    " \"lastName\": \"_EM_4282_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4281_XYZ_"))
                .body("'lastName'", containsString("_EM_4282_XYZ_"))
                .body("'emailId'", containsString("_EM_2260_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1146107878?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1360() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -32768, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-32768?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1361() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"i0i5o\", " + 
                    " \"firstName\": \"JbGT3BqgN\", " + 
                    " \"id\": 1147152358, " + 
                    " \"lastName\": \"_EM_4284_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("JbGT3BqgN"))
                .body("'lastName'", containsString("_EM_4284_XYZ_"))
                .body("'emailId'", containsString("i0i5o"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1362() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -2305843009280806912, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2305843009280806912"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1363() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4292_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ\", " + 
                    " \"id\": -1152921504506021632, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4292_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1152921504506021632?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1364() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -1152921504506023680, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1152921504506023680"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1365() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4343_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 66284, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4343_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1366() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_4344_XYZ_\", " + 
                    " \"id\": 66284, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4344_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/66284"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1367() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_4345_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_4346_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4345_XYZ_"))
                .body("'lastName'", containsString("_EM_4346_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1368() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_4476_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4476_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1369() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_4476_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4476_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1370() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193572"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1371() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3931428?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1372() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"5TYZnA\", " + 
                    " \"firstName\": \"_EM_4559_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4559_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("5TYZnA"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1373() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"5TYZnA\", " + 
                    " \"firstName\": \"_EM_4559_XYZ_\", " + 
                    " \"id\": -3079642, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4559_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("5TYZnA"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3079642?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1374() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"J\", " + 
                    " \"firstName\": \"bFqZ\", " + 
                    " \"id\": -4193044, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("bFqZ"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("J"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193044?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1375() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_4684_XYZ_\", " + 
                    " \"id\": 2305843009213498113, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4684_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009213498113?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1376() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 5188146770730795008, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5188146770730795008"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1377() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"pNtbZYhwz\", " + 
                    " \"firstName\": \"_EM_4706_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4706_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("pNtbZYhwz"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1378() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2260_XYZ_\", " + 
                    " \"firstName\": \"_EM_4722_XYZ_\", " + 
                    " \"lastName\": \"3LAMh0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4722_XYZ_"))
                .body("'lastName'", containsString("3LAMh0"))
                .body("'emailId'", containsString("_EM_2260_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1147152358"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1379() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2260_XYZ_\", " + 
                    " \"firstName\": \"_EM_2261_XYZ_\", " + 
                    " \"id\": 4, " + 
                    " \"lastName\": \"Q\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2261_XYZ_"))
                .body("'lastName'", containsString("Q"))
                .body("'emailId'", containsString("_EM_2260_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1380() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4776_XYZ_\", " + 
                    " \"firstName\": \"_EM_4777_XYZ_\", " + 
                    " \"id\": -8396243319208513041, " + 
                    " \"lastName\": \"_EM_3075_XYZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4777_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ"))
                .body("'emailId'", containsString("_EM_4776_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513041?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1381() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4825_XYZ_\", " + 
                    " \"firstName\": \"_EM_4826_XYZ_\", " + 
                    " \"id\": -1988353221, " + 
                    " \"lastName\": \"_EM_4827_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4826_XYZ_"))
                .body("'lastName'", containsString("_EM_4827_XYZ_"))
                .body("'emailId'", containsString("_EM_4825_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1988353221?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1382() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -37747988, " + 
                    " \"lastName\": \"_EM_4837_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_4837_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-37747988?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1383() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"U2SiF8Z\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -1047911, " + 
                    " \"lastName\": \"pxa{\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxa{"))
                .body("'emailId'", containsString("U2SiF8Z"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1047911"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1384() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"U2SiF8Z\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -135265639, " + 
                    " \"lastName\": \"pxa{\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxa{"))
                .body("'emailId'", containsString("U2SiF8Z"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-135265639?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1385() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95V\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"lastName\": \"GpU\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("GpU"))
                .body("'emailId'", containsString("C95V"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208530003"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1386() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"42\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208530003, " + 
                    " \"lastName\": \"GpU\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("GpU"))
                .body("'emailId'", containsString("42"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208530003?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1387() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5004_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -4611686018461466624, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_5004_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018461466624?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1388() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"K3DrZQ\", " + 
                    " \"id\": 628, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("K3DrZQ"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/628"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1389() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1390() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1391() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -3458764513879916544, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3458764513879916544"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1392() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1393() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5210_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"lastName\": \"_EM_5211_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_5211_XYZ_"))
                .body("'emailId'", containsString("_EM_5210_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1394() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"42\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("42"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1395() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5270_XYZ_\", " + 
                    " \"firstName\": \"G@qmtGu\", " + 
                    " \"id\": -8809807678023286783, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G@qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_5270_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8809807678023286783"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1396() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5344_XYZ_\", " + 
                    " \"firstName\": \"_EM_5345_XYZ_\", " + 
                    " \"id\": 443, " + 
                    " \"lastName\": \"tODz5\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5345_XYZ_"))
                .body("'lastName'", containsString("tODz5"))
                .body("'emailId'", containsString("_EM_5344_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/443?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1397() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5379_XYZ_\", " + 
                    " \"firstName\": \"_EM_5380_XYZ_\", " + 
                    " \"lastName\": \"_EM_5381_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5380_XYZ_"))
                .body("'lastName'", containsString("_EM_5381_XYZ_"))
                .body("'emailId'", containsString("_EM_5379_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/210?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1398() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4194580, " + 
                    " \"lastName\": \"NLO\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("NLO"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4194580?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1399() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4195092, " + 
                    " \"lastName\": \"NLO\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("NLO"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4195092?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1400() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319342731345, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319342731345?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1401() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5520_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_5520_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1402() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5545_XYZ_\", " + 
                    " \"firstName\": \"g14o3bXwMosIwB8\", " + 
                    " \"id\": -5764607523032679424, " + 
                    " \"lastName\": \"q6\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("g14o3bXwMosIwB8"))
                .body("'lastName'", containsString("q6"))
                .body("'emailId'", containsString("_EM_5545_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-5764607523032679424?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1403() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1404() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5642_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 1049324, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_5642_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1049324?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1405() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5687_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 413564358756024320, " + 
                    " \"lastName\": \"sOS1rgP\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("sOS1rgP"))
                .body("'emailId'", containsString("_EM_5687_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/413564358756024320"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1406() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208497235, " + 
                    " \"lastName\": \"_EM_5712_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_5712_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208497235?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1407() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5809_XYZ_\", " + 
                    " \"firstName\": \"_EM_5810_XYZ_\", " + 
                    " \"lastName\": \"_EM_5811_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5810_XYZ_"))
                .body("'lastName'", containsString("_EM_5811_XYZ_"))
                .body("'emailId'", containsString("_EM_5809_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/225"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1408() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 590572, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/590572?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1409() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"9EAuuBtgXTbR\", " + 
                    " \"id\": 67699436, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("9EAuuBtgXTbR"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/67699436"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1410() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"J0U1iC\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 33433, " + 
                    " \"lastName\": \"_EM_5951_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_5951_XYZ_"))
                .body("'emailId'", containsString("J0U1iC"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33433?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1411() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_5987_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5987_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1412() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"44UVROWw\", " + 
                    " \"firstName\": \"TWy\", " + 
                    " \"id\": -65536, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("TWy"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("44UVROWw"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-65536?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1413() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1414() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"mTihJwl2x9wD7dkF\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4611686018460663808, " + 
                    " \"lastName\": \"M\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("M"))
                .body("'emailId'", containsString("mTihJwl2x9wD7dkF"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018460663808"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1415() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"mTihJwl2x9wD7dkF\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4611686018460663680, " + 
                    " \"lastName\": \"M\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("M"))
                .body("'emailId'", containsString("mTihJwl2x9wD7dkF"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018460663680?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1416() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193428, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193428"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1417() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"2NPf2/OakJ\", " + 
                    " \"firstName\": \"BkP\", " + 
                    " \"id\": 516, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("BkP"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("2NPf2/OakJ"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/516"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1418() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_6269_XYZ_\", " + 
                    " \"id\": -4226388, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6269_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4226388?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1419() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_6269_XYZ_\", " + 
                    " \"id\": -4226388, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6269_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4226388?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1420() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -6290708, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-6290708?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1421() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4201748, " + 
                    " \"lastName\": \"Wfr\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("Wfr"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4201748?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1422() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"oLnoiIl24\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208644689, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("oLnoiIl24"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208644689?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1423() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 2305843009210020353, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009210020353"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1424() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2198_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 2305843009210151425, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_2198_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009210151425"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1425() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6381_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 2305843009210085889, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_6381_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009210085889?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1426() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6381_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 2305843009277194753, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_6381_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2305843009277194753?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1427() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1428() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1429() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6449_XYZ_\", " + 
                    " \"firstName\": \"7I3DqDBtcvyH\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"_EM_6450_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7I3DqDBtcvyH"))
                .body("'lastName'", containsString("_EM_6450_XYZ_"))
                .body("'emailId'", containsString("_EM_6449_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1430() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4191508, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4191508?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1431() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"_EM_6479_XYZ_\", " + 
                    " \"id\": -8396243319208513617, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6479_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1432() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"_EM_6479_XYZ_\", " + 
                    " \"id\": -8396243319208513617, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6479_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1433() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 537, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/537"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1434() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1435() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"XQyxOs\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513615, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("XQyxOs"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513615"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1436() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"XQyxOs\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513615, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("XQyxOs"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513615?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1437() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"qobw0zied_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_6541_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_6541_XYZ_"))
                .body("'emailId'", containsString("qobw0zied_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1438() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"UsJUFU6\", " + 
                    " \"firstName\": \"_EM_6551_XYZ_\", " + 
                    " \"id\": -2101524, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6551_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("UsJUFU6"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2101524"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1439() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"CI5\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319216902227, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("CI5"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319216902227"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1440() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"CI5\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("CI5"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1441() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_6588_XYZ_\", " + 
                    " \"id\": 2097801, " + 
                    " \"lastName\": \"qxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6588_XYZ_"))
                .body("'lastName'", containsString("qxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2097801?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1442() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -3931420, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3931420?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1443() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"kxzYlrHD\", " + 
                    " \"firstName\": \"_EM_6602_XYZ_\", " + 
                    " \"id\": -3931420, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6602_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("kxzYlrHD"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3931420?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1444() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6663_XYZ_\", " + 
                    " \"firstName\": \"_EM_6664_XYZ_\", " + 
                    " \"id\": -12524820, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6664_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_6663_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-12524820"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1445() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4194580, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4194580?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1446() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1447() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_Z\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_Z"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1448() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_Z\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 4611686018427912192, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_Z"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018427912192"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1449() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6819_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_6819_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1450() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034365953, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034365953?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1451() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6904_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4611686018428436480, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_6904_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018428436480?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1452() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513105, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513105?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1453() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_6999_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_6999_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1454() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_7000_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_6999_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7000_XYZ_"))
                .body("'lastName'", containsString("_EM_6999_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1455() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 6052837899184160768, " + 
                    " \"lastName\": \"pxa\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxa"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/6052837899184160768"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1456() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7055_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 6052837899184152577, " + 
                    " \"lastName\": \"_EM_7056_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_7056_XYZ_"))
                .body("'emailId'", containsString("_EM_7055_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/6052837899184152577?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1457() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7055_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 6052837899251261441, " + 
                    " \"lastName\": \"_EM_7056_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_7056_XYZ_"))
                .body("'emailId'", containsString("_EM_7055_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/6052837899251261441"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1458() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 1024, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1024?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1459() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7072_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513585, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_7072_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513585?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1460() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7094_XYZ_\", " + 
                    " \"firstName\": \"_EM_7095_XYZ_\", " + 
                    " \"id\": -4201616, " + 
                    " \"lastName\": \"kJzvMPVnWJ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7095_XYZ_"))
                .body("'lastName'", containsString("kJzvMPVnWJ"))
                .body("'emailId'", containsString("_EM_7094_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4201616?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1461() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7150_XYZ_\", " + 
                    " \"firstName\": \"JZkqUpeh\", " + 
                    " \"lastName\": \"_EM_7151_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("JZkqUpeh"))
                .body("'lastName'", containsString("_EM_7151_XYZ_"))
                .body("'emailId'", containsString("_EM_7150_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/558?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1462() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"hPjeRGogUA\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319216902225, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("hPjeRGogUA"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319216902225?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1463() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 62911212, " + 
                    " \"lastName\": \"ZT\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("ZT"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/62911212"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1464() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4199634, " + 
                    " \"lastName\": \"ZT\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("ZT"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4199634?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1465() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_7173_XYZ_\", " + 
                    " \"id\": -33554432, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7173_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-33554432"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1466() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7200_XYZ_\", " + 
                    " \"firstName\": \"_EM_7199_XYZ_\", " + 
                    " \"id\": -4192532, " + 
                    " \"lastName\": \"_EM_7201_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7199_XYZ_"))
                .body("'lastName'", containsString("_EM_7201_XYZ_"))
                .body("'emailId'", containsString("_EM_7200_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4192532"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1467() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7213_XYZ_\", " + 
                    " \"firstName\": \"_EM_7214_XYZ_\", " + 
                    " \"lastName\": \"dxOcOZ3jrpfi\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7214_XYZ_"))
                .body("'lastName'", containsString("dxOcOZ3jrpfi"))
                .body("'emailId'", containsString("_EM_7213_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/733?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1468() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"U;4\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208512607, " + 
                    " \"lastName\": \"_EM_7234_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_7234_XYZ_"))
                .body("'emailId'", containsString("U;4"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208512607"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1469() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1470() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1471() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"hQ1\", " + 
                    " \"firstName\": \"_EM_7267_XYZ_\", " + 
                    " \"id\": 5764607523034368001, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7267_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("hQ1"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034368001"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1472() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034368002, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034368002"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1473() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7306_XYZ_\", " + 
                    " \"firstName\": \"_EM_7307_XYZ_\", " + 
                    " \"id\": 948, " + 
                    " \"lastName\": \"_EM_7308_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7307_XYZ_"))
                .body("'lastName'", containsString("_EM_7308_XYZ_"))
                .body("'emailId'", containsString("_EM_7306_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/948?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1474() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1475() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -523623, " + 
                    " \"lastName\": \"pyay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pyay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-523623"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1476() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034365952, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034365952"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1477() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1478() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"nv57PeVeRD5IH2K\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("nv57PeVeRD5IH2K"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/663"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1479() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034357760, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034357760?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1480() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Hd\", " + 
                    " \"firstName\": \"_EM_7431_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7431_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("Hd"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1481() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7435_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_7435_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1482() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7435_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_7435_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1483() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1484() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"_EM_7510_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_7510_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1485() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -1729382256926980096, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1729382256926980096"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1486() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"YDAu/I\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -1729382256926980096, " + 
                    " \"lastName\": \"pxay4\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay4"))
                .body("'emailId'", containsString("YDAu/I"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1729382256926980096"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1487() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7575_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193620, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_7575_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193620?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1488() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7575_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193620, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_7575_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193620"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1489() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1490() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_6M_21UIUUYZU\", " + 
                    " \"id\": -2096265, " + 
                    " \"lastName\": \"_EM_7635_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_6M_21UIUUYZU"))
                .body("'lastName'", containsString("_EM_7635_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2096265"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1491() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_6M_21UIUUYZU\", " + 
                    " \"id\": 4611686018426339328, " + 
                    " \"lastName\": \"_EM_7635_XYZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_6M_21UIUUYZU"))
                .body("'lastName'", containsString("_EM_7635_XYZ"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018426339328?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1492() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7767_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_7767_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1493() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1494() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -1729382256910204928, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1729382256910204928"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1495() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -1729382256910204928, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1729382256910204928"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1496() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034365952, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034365952"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1497() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"pUUy\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pUUy"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1498() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7821_XYZ_\", " + 
                    " \"firstName\": \"q8aqbOYCe4Frn\", " + 
                    " \"id\": -2097296, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("q8aqbOYCe4Frn"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_7821_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2097296?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1499() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -3669268, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3669268?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -3669268, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3669268"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1501() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1502() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1503() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"eldPamwAFVHtDh\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319216902225, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("eldPamwAFVHtDh"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319216902225?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1504() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1505() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7951_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 33433, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_7951_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33433?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1506() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7973_XYZ_\", " + 
                    " \"firstName\": \"_EM_7974_XYZ_\", " + 
                    " \"lastName\": \"_EM_7975_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7974_XYZ_"))
                .body("'lastName'", containsString("_EM_7975_XYZ_"))
                .body("'emailId'", containsString("_EM_7973_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/487"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1507() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4096, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4096?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1508() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8007_XYZ_\", " + 
                    " \"firstName\": \"rPuhUpbig\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("rPuhUpbig"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_8007_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1509() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"JmdhN2uLCY\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8809807678032167936, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("JmdhN2uLCY"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8809807678032167936"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1510() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"r\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_8036_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_8036_XYZ_"))
                .body("'emailId'", containsString("r"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1511() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8061_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"lastName\": \"sAKFUtOG\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("sAKFUtOG"))
                .body("'emailId'", containsString("_EM_8061_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1512() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"lastName\": \"aIOqpDb\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("aIOqpDb"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208514643?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1513() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_8076_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_8077_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8076_XYZ_"))
                .body("'lastName'", containsString("_EM_8077_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1514() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_8076_XYZ_\", " + 
                    " \"id\": -4194304, " + 
                    " \"lastName\": \"4\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8076_XYZ_"))
                .body("'lastName'", containsString("4"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4194304"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1515() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 664, " + 
                    " \"lastName\": \"DelVNTmw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("DelVNTmw"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/664?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1516() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_Z\", " + 
                    " \"id\": 1585267068834463744, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_Z"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1585267068834463744"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1517() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_8109_XYZ_\", " + 
                    " \"id\": 1585267068834463748, " + 
                    " \"lastName\": \"_EM_8110_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8109_XYZ_"))
                .body("'lastName'", containsString("_EM_8110_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1585267068834463748?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1518() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_8131_XYZ_\", " + 
                    " \"id\": 2882303761517182976, " + 
                    " \"lastName\": \"_EM_8132_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8131_XYZ_"))
                .body("'lastName'", containsString("_EM_8132_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2882303761517182976"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1519() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4062484, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4062484"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1520() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"VQpyH5\", " + 
                    " \"id\": -4062485, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("VQpyH5"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4062485"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1521() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4128393, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4128393?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1522() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193555, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193555?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1523() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4611686018429505536, " + 
                    " \"lastName\": \"nMhtgqV_IZKDW2B\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("nMhtgqV_IZKDW2B"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018429505536"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1524() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4611686018429550592, " + 
                    " \"lastName\": \"_EM_8177_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_8177_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018429550592?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1525() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"AUydEw2DaQS88\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513873, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("AUydEw2DaQS88"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513873?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1526() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 1689, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1689?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1527() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 33555097, " + 
                    " \"lastName\": \"_EM_8277_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_8277_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33555097?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1528() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_8303_XYZ_\", " + 
                    " \"id\": -2096785, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8303_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-2096785?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1529() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_8304_XYZ_\", " + 
                    " \"id\": -1834641, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8304_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-1834641?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1530() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"9MDKGjTxnk\", " + 
                    " \"firstName\": \"_W7EgKT[wraxvGj\", " + 
                    " \"id\": -4193539, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_W7EgKT[wraxvGj"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("9MDKGjTxnk"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193539"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1531() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034365952, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034365952"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1532() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1533() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8447_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319242002385, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_8447_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319242002385?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1534() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_8450_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString(""))
                .body("'lastName'", containsString("_EM_8450_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1535() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1536() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8491_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208579153, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_8491_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208579153?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1537() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 16777881, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16777881?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1538() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4128020, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4128020"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1539() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1540() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"K\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("K"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1541() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"K\", " + 
                    " \"id\": 41943706, " + 
                    " \"lastName\": \"_EM_8519_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("K"))
                .body("'lastName'", containsString("_EM_8519_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/41943706?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1542() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"BCjNns8eTF3lVx\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("BCjNns8eTF3lVx"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1543() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523067920896, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523067920896"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1544() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"wuPP3\", " + 
                    " \"id\": 6052837899204853760, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("wuPP3"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/6052837899204853760"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1545() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034365968, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034365968"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1546() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8556_XYZ_\", " + 
                    " \"firstName\": \"_EM_8557_XYZ_\", " + 
                    " \"id\": 85, " + 
                    " \"lastName\": \"_EM_8558_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8557_XYZ_"))
                .body("'lastName'", containsString("_EM_8558_XYZ_"))
                .body("'emailId'", containsString("_EM_8556_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/85"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1547() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_8629_XYZ_\", " + 
                    " \"id\": 5764607523032268800, " + 
                    " \"lastName\": \"pxayP\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8629_XYZ_"))
                .body("'lastName'", containsString("pxayP"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523032268800"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1548() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"k2woYb8SUNkMCR\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034365952, " + 
                    " \"lastName\": \"_EM_8691_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_8691_XYZ_"))
                .body("'emailId'", containsString("k2woYb8SUNkMCR"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034365952?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1549() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 8389273, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/8389273?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1550() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"j5eG4yFuo6ds\", " + 
                    " \"firstName\": \"_EM_8720_XYZ_\", " + 
                    " \"id\": -3170534137683476512, " + 
                    " \"lastName\": \"_EM_8721_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8720_XYZ_"))
                .body("'lastName'", containsString("_EM_8721_XYZ_"))
                .body("'emailId'", containsString("j5eG4yFuo6ds"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3170534137683476512"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1551() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 37782253, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/37782253"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1552() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 37782253, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/37782253"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1553() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8736_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 5764607523034365952, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_8736_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034365952?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1554() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"B88\", " + 
                    " \"id\": 5764607523034365952, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("B88"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/5764607523034365952"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1555() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1556() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1557() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_8848_XYZ_\", " + 
                    " \"id\": -15591, " + 
                    " \"lastName\": \"_EM_8849_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8848_XYZ_"))
                .body("'lastName'", containsString("_EM_8849_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-15591?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1558() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8883_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4198164, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_8883_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4198164"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1559() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"e2EL5\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4198676, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("e2EL5"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4198676"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1560() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8897_XYZ_\", " + 
                    " \"firstName\": \"\", " + 
                    " \"id\": 513, " + 
                    " \"lastName\": \"_EM_8898_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString(""))
                .body("'lastName'", containsString("_EM_8898_XYZ_"))
                .body("'emailId'", containsString("_EM_8897_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/513"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1561() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8926_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_8926_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1562() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8931_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4611686018429356032, " + 
                    " \"lastName\": \"t6owlU\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("t6owlU"))
                .body("'emailId'", containsString("_EM_8931_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018429356032?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1563() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8948_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_8948_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1564() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8948_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_8948_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/633"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1565() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8948_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_8948_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/633"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1566() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1567() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1568() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8956_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"pxaq\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxaq"))
                .body("'emailId'", containsString("_EM_8956_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1569() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"W3pe3x~5eFAVDH\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("W3pe3x~5eFAVDH"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1570() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 2512625188625230785, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2512625188625230785"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1571() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": 2512625188625198081, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2512625188625198081?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1572() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"_EM_8989_XYZ_\", " + 
                    " \"id\": -8396243319208513585, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8989_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513585"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1573() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Vix\", " + 
                    " \"firstName\": \"_EM_9020_XYZ_\", " + 
                    " \"id\": -8396243319199076369, " + 
                    " \"lastName\": \"_UMUUU\u003dUUU]ZU\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9020_XYZ_"))
                .body("'lastName'", containsString("_UMUUU=UUU]ZU"))
                .body("'emailId'", containsString("Vix"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319199076369?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1574() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Vex\", " + 
                    " \"firstName\": \"GxS_wLi\", " + 
                    " \"id\": -8396243319199076369, " + 
                    " \"lastName\": \"_UMUUU\u003dUUU\\\\ZU\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("GxS_wLi"))
                .body("'lastName'", containsString("_UMUUU=UUU\\ZU"))
                .body("'emailId'", containsString("Vex"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319199076369"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1575() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"0HPYhVCOvkD\", " + 
                    " \"firstName\": \"fkQXoDZN_v8aHZO\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("fkQXoDZN_v8aHZO"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("0HPYhVCOvkD"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1576() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"0HPYhVCOvkD\", " + 
                    " \"firstName\": \"fkeToDZU_v8aH\\\\U\", " + 
                    " \"id\": -8, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("fkeToDZU_v8aH\\U"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("0HPYhVCOvkD"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1577() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4160788, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4160788"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1578() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"2oBAb\", " + 
                    " \"firstName\": \"_EM_9051_XYZ_\", " + 
                    " \"id\": -8396243319208513104, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9051_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("2oBAb"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513104?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1579() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9058_XYZ_\", " + 
                    " \"firstName\": \"_EM_9059_XYZ_\", " + 
                    " \"id\": -8396243319206158400, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9059_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_9058_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319206158400"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1580() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"C95\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208517715, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("C95"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208517715"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1581() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193555, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193555"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1582() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193555, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193555?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1583() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9081_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_9081_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1584() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"RsJ_FWE\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 0, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("RsJ_FWE"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/0"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1585() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9111_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_9111_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513619?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1586() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 17049, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/17049"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1587() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 33573529, " + 
                    " \"lastName\": \"hxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("hxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33573529?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1588() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 33573529, " + 
                    " \"lastName\": \"hxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("hxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/33573529"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1589() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1590() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": 4195052, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4195052"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1591() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9163_XYZ_\", " + 
                    " \"firstName\": \"hpiMr3\", " + 
                    " \"id\": 2097388, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("hpiMr3"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_9163_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/2097388?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1592() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"_EM_9190_XYZ_\", " + 
                    " \"id\": -8396243319208513105, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9190_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513105?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1593() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_i\", " + 
                    " \"firstName\": \"_EM_9192_XYZ_\", " + 
                    " \"id\": -8396243319208533759, " + 
                    " \"lastName\": \"_EM_9197_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9192_XYZ_"))
                .body("'lastName'", containsString("_EM_9197_XYZ_"))
                .body("'emailId'", containsString("_i"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208533759?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1594() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9214_XYZ_\", " + 
                    " \"firstName\": \"HUmQxAxKJ8NOCtHM\", " + 
                    " \"id\": 1, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("HUmQxAxKJ8NOCtHM"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_9214_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/1"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1595() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 921, " + 
                    " \"lastName\": \"Z_SS\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("Z_SS"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/921"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1596() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 921, " + 
                    " \"lastName\": \"Z_SS\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("Z_SS"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/921"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1597() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 663, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/663"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1598() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 16795290, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/16795290"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1599() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4177172, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4177172?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1600() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"9A2uQXuDUX_I\", " + 
                    " \"firstName\": \"_EM_9270_XYZ_\", " + 
                    " \"id\": 4611686018433684480, " + 
                    " \"lastName\": \"pxay\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9270_XYZ_"))
                .body("'lastName'", containsString("pxay"))
                .body("'emailId'", containsString("9A2uQXuDUX_I"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/4611686018433684480?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1601() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4298_XYZ_\", " + 
                    " \"firstName\": \"G0qmtGu\", " + 
                    " \"id\": -8396243319208513617, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("G0qmtGu"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("_EM_4298_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1602() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"TQTMg51\", " + 
                    " \"firstName\": \"_EM_9326_XYZ_\", " + 
                    " \"id\": -8396243319208513617, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9326_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("TQTMg51"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1603() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"TQTMg51\", " + 
                    " \"firstName\": \"_EM_9326_XYZ_\", " + 
                    " \"id\": -8396243319208513617, " + 
                    " \"lastName\": \"_EM_3075_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9326_XYZ_"))
                .body("'lastName'", containsString("_EM_3075_XYZ_"))
                .body("'emailId'", containsString("TQTMg51"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-8396243319208513617"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1604() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -15719, " + 
                    " \"lastName\": \"_EM_4786_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("_EM_4786_XYZ_"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-15719"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1605() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9370_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 665, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_EM_9370_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/665"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1606() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9370_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": 663, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("_EM_9370_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/663?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1607() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4784_XYZ_\", " + 
                    " \"firstName\": \"_EM_4785_XYZ_\", " + 
                    " \"id\": -3431, " + 
                    " \"lastName\": \"jTLpIUTasg1d\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4785_XYZ_"))
                .body("'lastName'", containsString("jTLpIUTasg1d"))
                .body("'emailId'", containsString("_EM_4784_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3431"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1608() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_TvctX\", " + 
                    " \"firstName\": \"jIc\", " + 
                    " \"id\": -4611686018427126784, " + 
                    " \"lastName\": \"jTLpIUTasg1d\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("jIc"))
                .body("'lastName'", containsString("jTLpIUTasg1d"))
                .body("'emailId'", containsString("_TvctX"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4611686018427126784"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1609() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1610() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4148_XYZ_\", " + 
                    " \"firstName\": \"_EM_2199_XYZ_\", " + 
                    " \"id\": -4193556, " + 
                    " \"lastName\": \"_EM_2200_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2199_XYZ_"))
                .body("'lastName'", containsString("_EM_2200_XYZ_"))
                .body("'emailId'", containsString("_EM_4148_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4193556"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1611() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"41EGMQo11znL5mp\", " + 
                    " \"lastName\": \"_EM_9381_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9381_XYZ_"))
                .body("'emailId'", containsString("41EGMQo11znL5mp"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/941"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9383_XYZ_\", " + 
                    " \"id\": 758, " + 
                    " \"lastName\": \"_EM_9384_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_9385_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9383_XYZ_"))
                .body("'lastName'", containsString("_EM_9384_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9386_XYZ_\", " + 
                    " \"firstName\": \"_EM_9387_XYZ_\", " + 
                    " \"id\": 768 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9387_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_9386_XYZ_"));
        location_employees = "/employees" + "/" + res_3.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 768 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/768?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1612() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_12500_XYZ_\", " + 
                    " \"firstName\": \"_EM_12501_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_12501_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_12500_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/-2028531469")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/83")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_12502_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_12502_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("_EM_12501_XYZ_"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_12500_XYZ_"))
                .body("[1].'firstName'", nullValue())
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", containsString("_EM_12502_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_12504_XYZ_\", " + 
                    " \"id\": 778 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_12504_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1613() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4032_XYZ_\", " + 
                    " \"firstName\": \"_EM_4033_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_4035_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4033_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4032_XYZ_"));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/111")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4040_XYZ_")
                .delete(baseUrlOfSut + "/employees/344?EMextraParam123=_EM_4039_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4041_XYZ_\", " + 
                    " \"firstName\": \"ONr\", " + 
                    " \"lastName\": \"_EM_4042_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/595")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1614() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_8150_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8151_XYZ_")
                .get(baseUrlOfSut + "/employees/407")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"RMGHGM\", " + 
                    " \"id\": 469 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("RMGHGM"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8156_XYZ_")
                .delete(baseUrlOfSut + "/employees/-4929068645683992535?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1615() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_10879_XYZ_\", " + 
                    " \"lastName\": \"_EM_10881_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_10881_XYZ_"))
                .body("'emailId'", containsString("_EM_10879_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_10881_XYZ_"))
                .body("[0].'emailId'", containsString("_EM_10879_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_10882_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/-3430115296537763939")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1616() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_899_XYZ_\", " + 
                    " \"lastName\": \"_EM_900_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_899_XYZ_"))
                .body("'lastName'", containsString("_EM_900_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/490"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_901_XYZ_\", " + 
                    " \"firstName\": \"_EM_902_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_904_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_902_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_901_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_906_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("_EM_899_XYZ_"))
                .body("[0].'lastName'", containsString("_EM_900_XYZ_"))
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", containsString("_EM_902_XYZ_"))
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", containsString("_EM_901_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_907_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("_EM_899_XYZ_"))
                .body("[0].'lastName'", containsString("_EM_900_XYZ_"))
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", containsString("_EM_902_XYZ_"))
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", containsString("_EM_901_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1617() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"PnM03SQV\", " + 
                    " \"id\": 698, " + 
                    " \"lastName\": \"PnM03SQV\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("PnM03SQV"))
                .body("'lastName'", containsString("PnM03SQV"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 698 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("PnM03SQV"))
                .body("[0].'lastName'", containsString("PnM03SQV"))
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", nullValue())
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/93")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/451")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1618() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"Do\", " + 
                    " \"id\": 427, " + 
                    " \"lastName\": \"Do\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Do"))
                .body("'lastName'", containsString("Do"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"EeA9whvyD8F\", " + 
                    " \"lastName\": \"LPhSOUjjCjvjNakX\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("LPhSOUjjCjvjNakX"))
                .body("'emailId'", containsString("EeA9whvyD8F"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5097_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/305")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("Do"))
                .body("[0].'lastName'", containsString("Do"))
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", nullValue())
                .body("[1].'lastName'", containsString("LPhSOUjjCjvjNakX"))
                .body("[1].'emailId'", containsString("EeA9whvyD8F"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"LmDWGfhm\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("LmDWGfhm"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'firstName'", containsString("Do"))
                .body("[0].'lastName'", containsString("Do"))
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", nullValue())
                .body("[1].'lastName'", containsString("LPhSOUjjCjvjNakX"))
                .body("[1].'emailId'", containsString("EeA9whvyD8F"))
                .body("[2].'firstName'", nullValue())
                .body("[2].'lastName'", nullValue())
                .body("[2].'emailId'", containsString("LmDWGfhm"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"msX9YA21n89_g\", " + 
                    " \"lastName\": \"PQenClTIxJCQn3QB\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("PQenClTIxJCQn3QB"))
                .body("'emailId'", containsString("msX9YA21n89_g"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"msX9YA21n89_g\", " + 
                    " \"lastName\": \"_EM_5104_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5104_XYZ_"))
                .body("'emailId'", containsString("msX9YA21n89_g"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5105_XYZ_\", " + 
                    " \"firstName\": \"_EM_5106_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5106_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5105_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1619() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/831")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9755_XYZ_\", " + 
                    " \"firstName\": \"_EM_9756_XYZ_\", " + 
                    " \"id\": 989 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/989")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1620() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_14256_XYZ_\", " + 
                    " \"lastName\": \"sZ1pqD\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("sZ1pqD"))
                .body("'emailId'", containsString("_EM_14256_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("sZ1pqD"))
                .body("[0].'emailId'", containsString("_EM_14256_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_14257_XYZ_\", " + 
                    " \"id\": -2665427528959046290 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/-2665427528959046290")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/224")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1621() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_283_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_288_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_284_XYZ_\", " + 
                    " \"id\": 991 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_284_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_293_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_289_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/981?EMextraParam123=_EM_292_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_295_XYZ_")
                .delete(baseUrlOfSut + "/employees/752524421?EMextraParam123=_EM_294_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\", " + 
                    " \"id\": 799, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString(""));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString(""));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1622() throws Exception {
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1137218416, " + 
                    " \"lastName\": \"_EM_3541_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3541_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/1137218416"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_3542_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_3541_XYZ_"))
                .body("[0].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3548_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3544_XYZ_\", " + 
                    " \"firstName\": \"_EM_3545_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/414?EMextraParam123=_EM_3547_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_3549_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_3541_XYZ_"))
                .body("[0].'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1623() throws Exception {
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4138_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4135_XYZ_\", " + 
                    " \"id\": 325 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4135_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4142_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4139_XYZ_\", " + 
                    " \"firstName\": \"_EM_4140_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/466?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4143_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4143_XYZ_"));
        location_employees = "/employees" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3140631499384396641"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4143_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1624() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8248_XYZ_\", " + 
                    " \"firstName\": \"vVW\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("vVW"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8248_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", containsString("vVW"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_8248_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8255_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8251_XYZ_\", " + 
                    " \"id\": 773 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8251_XYZ_"));
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/-8429305652815736424?EMextraParam123=_EM_8256_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8262_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8258_XYZ_\", " + 
                    " \"lastName\": \"_EM_8260_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8260_XYZ_"))
                .body("'emailId'", containsString("_EM_8258_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1625() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"x9aR_\", " + 
                    " \"id\": 276 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("x9aR_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"ePYsD\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("ePYsD"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2984_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2982_XYZ_\", " + 
                    " \"id\": 841, " + 
                    " \"lastName\": \"_EM_2983_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2982_XYZ_"))
                .body("'lastName'", containsString("_EM_2983_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"0oTwnAVX\", " + 
                    " \"id\": 992 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("0oTwnAVX"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("x9aR_"))
                .body("[1].'firstName'", containsString("ePYsD"))
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", nullValue())
                .body("[2].'firstName'", containsString("_EM_2982_XYZ_"))
                .body("[2].'lastName'", containsString("_EM_2983_XYZ_"))
                .body("[2].'emailId'", nullValue())
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2990_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2987_XYZ_\", " + 
                    " \"id\": 688, " + 
                    " \"lastName\": \"hpyBEv\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/688?EMextraParam123=_EM_2989_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1626() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_11447_XYZ_\", " + 
                    " \"lastName\": \"3v7d1RI\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("3v7d1RI"))
                .body("'emailId'", containsString("_EM_11447_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("3v7d1RI"))
                .body("[0].'emailId'", containsString("_EM_11447_XYZ_"));
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/831")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/256")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("3v7d1RI"))
                .body("[0].'emailId'", containsString("_EM_11447_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"3RCqx3A0p3j\", " + 
                    " \"id\": -1100388472 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/-1100388472")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1627() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2300_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_2298_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_2299_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_2298_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2305_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2309_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/employees/212")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1628() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8026_XYZ_\", " + 
                    " \"id\": 473, " + 
                    " \"lastName\": \"_EM_8028_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_8028_XYZ_"))
                .body("'emailId'", containsString("_EM_8026_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/473"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_8029_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8031_XYZ_")
                .get(baseUrlOfSut + "/employees/240")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1629() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8390_XYZ_\", " + 
                    " \"id\": 754, " + 
                    " \"lastName\": \"eO6zQ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8390_XYZ_"))
                .body("'lastName'", containsString("eO6zQ"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/944?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"V4iJpIJOn\", " + 
                    " \"id\": 6454882443687850930, " + 
                    " \"lastName\": \"_EM_8393_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_8394_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("V4iJpIJOn"))
                .body("'lastName'", containsString("_EM_8393_XYZ_"))
                .body("'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1630() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"8uvM_6MJP1uo\", " + 
                    " \"id\": 275 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("8uvM_6MJP1uo"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_4414_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4414_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4416_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_4415_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"U9DI\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/713?EMextraParam123=_EM_4419_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1631() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 526, " + 
                    " \"lastName\": \"_EM_5482_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5482_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5483_XYZ_\", " + 
                    " \"id\": 526, " + 
                    " \"lastName\": \"_EM_5484_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/526?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5485_XYZ_\", " + 
                    " \"firstName\": \"_EM_5486_XYZ_\", " + 
                    " \"lastName\": \"_EM_5487_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5486_XYZ_"))
                .body("'lastName'", containsString("_EM_5487_XYZ_"))
                .body("'emailId'", containsString("_EM_5485_XYZ_"));
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_5493_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5493_XYZ_"))
                .body("'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1632() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OYGLVP\", " + 
                    " \"id\": 946, " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("OYGLVP"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OYGLVP\", " + 
                    " \"id\": 946, " + 
                    " \"lastName\": \"_EM_11998_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_11998_XYZ_"))
                .body("'emailId'", containsString("OYGLVP"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/511")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 885, " + 
                    " \"lastName\": \"_EM_12000_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_12000_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_12003_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_12003_XYZ_"))
                .body("'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1633() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"643UZq\", " + 
                    " \"firstName\": \"Xw6zO\", " + 
                    " \"id\": 224298362 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Xw6zO"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("643UZq"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"643UZq\", " + 
                    " \"id\": 224298362, " + 
                    " \"lastName\": \"_EM_11057_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_11057_XYZ_"))
                .body("'emailId'", containsString("643UZq"));
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/171")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/797")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/728")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_5.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/25"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1634() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OHZTXHhlvo8\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("OHZTXHhlvo8"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"OHZTXHhlvo8\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("OHZTXHhlvo8"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6103_XYZ_\", " + 
                    " \"lastName\": \"_EM_6105_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/79")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 699, " + 
                    " \"lastName\": \"_EM_6109_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6109_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_3.extract().body().path("id").toString();
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/699?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6111_XYZ_")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1635() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_3737_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3737_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3741_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"A\", " + 
                    " \"id\": 846, " + 
                    " \"lastName\": \"_EM_3739_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_3740_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("A"))
                .body("'lastName'", containsString("_EM_3739_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/443588861")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees/629")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3744_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/450?EMextraParam123=_EM_3746_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_3748_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1636() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5192_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5192_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5194_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5194_XYZ_"));
        location_employees = "/employees" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/791?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5200_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5197_XYZ_\", " + 
                    " \"id\": 212 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/212")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"l93KIaTlkKFkgL\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("l93KIaTlkKFkgL"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/676?EMextraParam123=_EM_5204_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 282 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/282")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1637() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8780_XYZ_\", " + 
                    " \"firstName\": \"_EM_8781_XYZ_\", " + 
                    " \"id\": 440 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8781_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8780_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/440"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/809")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"6QCU\", " + 
                    " \"id\": -1555952102, " + 
                    " \"lastName\": \"6QCU\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("6QCU"))
                .body("'lastName'", containsString("6QCU"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8785_XYZ_\", " + 
                    " \"id\": -1555952102, " + 
                    " \"lastName\": \"S5hPF\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("S5hPF"))
                .body("'emailId'", containsString("_EM_8785_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_8786_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("6QCU"))
                .body("[0].'lastName'", containsString("6QCU"))
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", nullValue())
                .body("[1].'lastName'", containsString("S5hPF"))
                .body("[1].'emailId'", containsString("_EM_8785_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1638() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9246_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9246_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/170")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_9249_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_9252_XYZ_")
                .get(baseUrlOfSut + "/employees/706?EMextraParam123=_EM_9251_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1639() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"6fy6I91Ufh\", " + 
                    " \"id\": 636, " + 
                    " \"lastName\": \"_EM_13626_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/636")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/961")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/257")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_13632_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_13632_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/151")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1640() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1073_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_1076_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1073_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1078_XYZ_\", " + 
                    " \"lastName\": \"_EM_1080_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1080_XYZ_"))
                .body("'emailId'", containsString("_EM_1078_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1086_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1082_XYZ_\", " + 
                    " \"firstName\": \"_EM_1083_XYZ_\", " + 
                    " \"id\": 539, " + 
                    " \"lastName\": \"_EM_1084_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_1085_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1083_XYZ_"))
                .body("'lastName'", containsString("_EM_1084_XYZ_"))
                .body("'emailId'", containsString("_EM_1082_XYZ_"));
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/951?EMextraParam123=_EM_1087_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/765")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/193")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_6.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1641() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_1505_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1506_XYZ_")
                .delete(baseUrlOfSut + "/employees/531")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1507_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1507_XYZ_"));
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1510_XYZ_\", " + 
                    " \"firstName\": \"_EM_1511_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1511_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1510_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", containsString("_EM_1511_XYZ_"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_1510_XYZ_"));
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1518_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/employees/274442246260661647")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1522_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1519_XYZ_\", " + 
                    " \"firstName\": \"_EM_1520_XYZ_\", " + 
                    " \"id\": 375 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/375")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_9 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1524_XYZ_")
                .delete(baseUrlOfSut + "/employees/-214318047?EMextraParam123=_EM_1523_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_9.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1642() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4263_XYZ_\", " + 
                    " \"firstName\": \"_EM_4264_XYZ_\", " + 
                    " \"id\": 354 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4264_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4263_XYZ_"));
        location_employees = "/employees" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4266_XYZ_\", " + 
                    " \"lastName\": \"_EM_4267_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/354?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4269_XYZ_")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4271_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_4272_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4274_XYZ_\", " + 
                    " \"id\": -1645794845147459224, " + 
                    " \"lastName\": \"_EM_4275_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4274_XYZ_"))
                .body("'lastName'", containsString("_EM_4275_XYZ_"))
                .body("'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1643() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4937_XYZ_\", " + 
                    " \"lastName\": \"_EM_4939_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4939_XYZ_"))
                .body("'emailId'", containsString("_EM_4937_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/506"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4942_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_4941_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4941_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4944_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4944_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_4944_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4951_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4947_XYZ_\", " + 
                    " \"firstName\": \"_EM_4948_XYZ_\", " + 
                    " \"lastName\": \"_EM_4949_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_4950_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4948_XYZ_"))
                .body("'lastName'", containsString("_EM_4949_XYZ_"))
                .body("'emailId'", containsString("_EM_4947_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1644() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 82, " + 
                    " \"lastName\": \"_EM_7659_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7659_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_7659_XYZ_"))
                .body("[0].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees/780?EMextraParam123=_EM_7663_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7665_XYZ_")
                .get(baseUrlOfSut + "/employees/856?EMextraParam123=_EM_7664_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_7659_XYZ_"))
                .body("[0].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"TaNSBL\", " + 
                    " \"lastName\": \"LWtVZoOUFUM\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/711?EMextraParam123=_EM_7668_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7674_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7670_XYZ_\", " + 
                    " \"lastName\": \"_EM_7672_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/601")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"N_710BNk0w63h5V\", " + 
                    " \"id\": 723, " + 
                    " \"lastName\": \"_EM_7678_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_7679_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7678_XYZ_"))
                .body("'emailId'", containsString("N_710BNk0w63h5V"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1645() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_10727_XYZ_\", " + 
                    " \"firstName\": \"7D\", " + 
                    " \"id\": 282, " + 
                    " \"lastName\": \"43cxseTqDSDgR_L\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("7D"))
                .body("'lastName'", containsString("43cxseTqDSDgR_L"))
                .body("'emailId'", containsString("_EM_10727_XYZ_"));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/379")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1646() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/232")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"mbgAzukofdNp\", " + 
                    " \"id\": 292 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("mbgAzukofdNp"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_11237_XYZ_\", " + 
                    " \"id\": 292, " + 
                    " \"lastName\": \"_EM_11238_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_11237_XYZ_"))
                .body("'lastName'", containsString("_EM_11238_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("mbgAzukofdNp"))
                .body("[1].'firstName'", containsString("_EM_11237_XYZ_"))
                .body("[1].'lastName'", containsString("_EM_11238_XYZ_"))
                .body("[1].'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1647() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_45_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_44_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_47_XYZ_\", " + 
                    " \"id\": 299, " + 
                    " \"lastName\": \"_EM_65_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_47_XYZ_"))
                .body("'lastName'", containsString("_EM_65_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_1.extract().body().path("id").toString();
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/299?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_50_XYZ_")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_66_XYZ_\", " + 
                    " \"id\": 427, " + 
                    " \"lastName\": \"_EM_67_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_67_XYZ_"))
                .body("'emailId'", containsString("_EM_66_XYZ_"));
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_53_XYZ_\", " + 
                    " \"firstName\": \"_EM_54_XYZ_\", " + 
                    " \"id\": 260 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_56_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_54_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_53_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", containsString("_EM_54_XYZ_"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_53_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_60_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", containsString("_EM_54_XYZ_"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_53_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1648() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1412_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_1411_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1413_XYZ_\", " + 
                    " \"lastName\": \"rILUd4I9\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("rILUd4I9"))
                .body("'emailId'", containsString("_EM_1413_XYZ_"));
        location_employees = "/employees" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1416_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/997?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1419_XYZ_\", " + 
                    " \"id\": 847 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1419_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_3.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/847"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1422_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_1421_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/1747247542?EMextraParam123=_EM_1423_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_6.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1426_XYZ_")
                .get(baseUrlOfSut + "/employees/448")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1649() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3867_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3863_XYZ_\", " + 
                    " \"firstName\": \"_EM_3864_XYZ_\", " + 
                    " \"id\": 278 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3864_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3863_XYZ_"));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3869_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_3868_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3871_XYZ_\", " + 
                    " \"lastName\": \"_EM_3872_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3871_XYZ_"))
                .body("'lastName'", containsString("_EM_3872_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3874_XYZ_")
                .delete(baseUrlOfSut + "/employees/770")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3876_XYZ_\", " + 
                    " \"lastName\": \"_EM_3877_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_3878_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3876_XYZ_"))
                .body("'lastName'", containsString("_EM_3877_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/524?EMextraParam123=_EM_3880_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3883_XYZ_\", " + 
                    " \"id\": 750 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_3885_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3883_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_8 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3887_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_3887_XYZ_"));
        location_employees = "/employees" + "/" + res_8.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/585"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1650() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5327_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5329_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_5328_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5330_XYZ_\", " + 
                    " \"lastName\": \"_EM_5332_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5332_XYZ_"))
                .body("'emailId'", containsString("_EM_5330_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_5332_XYZ_"))
                .body("[0].'emailId'", containsString("_EM_5330_XYZ_"));
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/520")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_5335_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_5337_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1651() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_8692_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"FLvSaWR9dsA\", " + 
                    " \"firstName\": \"fPLPAoXCOnatk\", " + 
                    " \"id\": 491 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("fPLPAoXCOnatk"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("FLvSaWR9dsA"));
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8694_XYZ_\", " + 
                    " \"firstName\": \"OUBXCJYXe0dMOTCg\", " + 
                    " \"lastName\": \"RVMREm_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/415")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8699_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8696_XYZ_\", " + 
                    " \"firstName\": \"_EM_8697_XYZ_\", " + 
                    " \"id\": 121 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_8698_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8697_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8696_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("_EM_8697_XYZ_"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_8696_XYZ_"))
                .body("[1].'firstName'", nullValue())
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("_EM_8697_XYZ_"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_8696_XYZ_"))
                .body("[1].'firstName'", nullValue())
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1652() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/442")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/168")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_554_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_553_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"hXGGnHcjp4cC6\", " + 
                    " \"firstName\": \"bXspjyLT\", " + 
                    " \"id\": 663856125, " + 
                    " \"lastName\": \"bXspjyLT\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("bXspjyLT"))
                .body("'lastName'", containsString("bXspjyLT"))
                .body("'emailId'", containsString("hXGGnHcjp4cC6"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"hXGGnHcjp4cC6\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("hXGGnHcjp4cC6"));
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_557_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_556_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_559_XYZ_")
                .get(baseUrlOfSut + "/employees/612")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_560_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_566_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_562_XYZ_\", " + 
                    " \"id\": 48, " + 
                    " \"lastName\": \"_EM_564_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_565_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_564_XYZ_"))
                .body("'emailId'", containsString("_EM_562_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1653() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1474_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_1472_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_1473_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1472_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1476_XYZ_")
                .get(baseUrlOfSut + "/employees/833")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1480_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"ulw46J\", " + 
                    " \"id\": 820 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_1479_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("ulw46J"));
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1482_XYZ_")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 978665701633218422, " + 
                    " \"lastName\": \"_EM_1484_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/978665701633218422?EMextraParam123=_EM_1485_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1488_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/1282292856?EMextraParam123=_EM_1490_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_7.extract().statusCode()));
        
        ValidatableResponse res_8 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1492_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1654() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4152_XYZ_\", " + 
                    " \"firstName\": \"_EM_4153_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4153_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4152_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/804"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4155_XYZ_\", " + 
                    " \"id\": 183 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4155_XYZ_"));
        location_employees = "/employees" + "/" + res_2.extract().body().path("id").toString();
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/183?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/204")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1655() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -696202280, " + 
                    " \"lastName\": \"_EM_4841_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4841_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4842_XYZ_\", " + 
                    " \"firstName\": \"_EM_4843_XYZ_\", " + 
                    " \"lastName\": \"_EM_4844_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/714")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/586902287990832319")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4850_XYZ_")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4851_XYZ_\", " + 
                    " \"firstName\": \"wnOvih7Iv3DnCaM\", " + 
                    " \"lastName\": \"2_m0v5rz3V4T\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("wnOvih7Iv3DnCaM"))
                .body("'lastName'", containsString("2_m0v5rz3V4T"))
                .body("'emailId'", containsString("_EM_4851_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4857_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4854_XYZ_\", " + 
                    " \"id\": 226 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_4856_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4854_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("wnOvih7Iv3DnCaM"))
                .body("[0].'lastName'", containsString("2_m0v5rz3V4T"))
                .body("[0].'emailId'", containsString("_EM_4851_XYZ_"))
                .body("[1].'firstName'", containsString("_EM_4854_XYZ_"))
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4861_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_4860_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("wnOvih7Iv3DnCaM"))
                .body("[0].'lastName'", containsString("2_m0v5rz3V4T"))
                .body("[0].'emailId'", containsString("_EM_4851_XYZ_"))
                .body("[1].'firstName'", containsString("_EM_4854_XYZ_"))
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1656() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5212_XYZ_\", " + 
                    " \"firstName\": \"_EM_5213_XYZ_\", " + 
                    " \"id\": 720, " + 
                    " \"lastName\": \"_EM_5214_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5213_XYZ_"))
                .body("'lastName'", containsString("_EM_5214_XYZ_"))
                .body("'emailId'", containsString("_EM_5212_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/720"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5216_XYZ_")
                .get(baseUrlOfSut + "/employees/915")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", containsString("_EM_5213_XYZ_"))
                .body("[0].'lastName'", containsString("_EM_5214_XYZ_"))
                .body("[0].'emailId'", containsString("_EM_5212_XYZ_"));
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5220_XYZ_")
                .delete(baseUrlOfSut + "/employees/486")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_5221_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5223_XYZ_")
                .get(baseUrlOfSut + "/employees/1648290075?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5225_XYZ_")
                .get(baseUrlOfSut + "/employees/187?EMextraParam123=_EM_5224_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1657() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_5724_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5727_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/601?EMextraParam123=_EM_5728_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/-4650323548786327211?EMextraParam123=_EM_5730_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5737_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 258, " + 
                    " \"lastName\": \"_EM_5735_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/258")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5738_XYZ_\", " + 
                    " \"firstName\": \"rUiEIj7kJPCG\", " + 
                    " \"id\": 236 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_5740_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("rUiEIj7kJPCG"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5738_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1658() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_5971_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5971_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5972_XYZ_\", " + 
                    " \"id\": 706, " + 
                    " \"lastName\": \"_EM_5973_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5972_XYZ_"))
                .body("'lastName'", containsString("_EM_5973_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_2.extract().body().path("id").toString();
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/706?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5976_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5974_XYZ_\", " + 
                    " \"firstName\": \"_EM_5975_XYZ_\", " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/676?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5977_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_5977_XYZ_"));
        location_employees = "/employees" + "/" + res_5.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/654?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1659() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8195_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/676?EMextraParam123=_EM_8197_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8199_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_8198_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/789")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"39qpc\", " + 
                    " \"firstName\": \"YR\", " + 
                    " \"lastName\": \"YR\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("YR"))
                .body("'lastName'", containsString("YR"))
                .body("'emailId'", containsString("39qpc"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"YR\", " + 
                    " \"id\": 733 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("YR"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8203_XYZ_\", " + 
                    " \"id\": 837, " + 
                    " \"lastName\": \"_EM_8204_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/837?EMextraParam123=_EM_8205_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1660() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_837_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"whB_T\", " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString(""))
                .body("'emailId'", containsString("whB_T"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"whB_T\", " + 
                    " \"firstName\": \"\", " + 
                    " \"id\": 710, " + 
                    " \"lastName\": \"_EM_840_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString(""))
                .body("'lastName'", containsString("_EM_840_XYZ_"))
                .body("'emailId'", containsString("whB_T"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_842_XYZ_")
                .get(baseUrlOfSut + "/employees/834?EMextraParam123=_EM_841_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/387?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_5.extract().statusCode()));
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_844_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_850_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_847_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/-7924630382721706105?EMextraParam123=_EM_849_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1661() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"FM_xaEwvO\", " + 
                    " \"id\": 255, " + 
                    " \"lastName\": \"_EM_9844_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9844_XYZ_"))
                .body("'emailId'", containsString("FM_xaEwvO"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_9844_XYZ_"))
                .body("[0].'emailId'", containsString("FM_xaEwvO"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9848_XYZ_\", " + 
                    " \"id\": 702, " + 
                    " \"lastName\": \"_EM_9849_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9848_XYZ_"))
                .body("'lastName'", containsString("_EM_9849_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_9844_XYZ_"))
                .body("[0].'emailId'", containsString("FM_xaEwvO"))
                .body("[1].'firstName'", containsString("_EM_9848_XYZ_"))
                .body("[1].'lastName'", containsString("_EM_9849_XYZ_"))
                .body("[1].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/employees/267")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"6NvF_\", " + 
                    " \"id\": 926 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("6NvF_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1662() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4542_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4542_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_4546_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_4546_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_1.extract().body().path("id").toString();
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/302?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_4547_XYZ_\", " + 
                    " \"lastName\": \"_EM_4548_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/4600126099808815455?EMextraParam123=_EM_4549_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_4.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4554_XYZ_\", " + 
                    " \"id\": 47 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/47?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1663() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6178_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6175_XYZ_\", " + 
                    " \"lastName\": \"_EM_6176_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_6177_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6175_XYZ_"))
                .body("'lastName'", containsString("_EM_6176_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/460878769?EMextraParam123=_EM_6179_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6181_XYZ_\", " + 
                    " \"firstName\": \"_EM_6182_XYZ_\", " + 
                    " \"id\": 846 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/846?EMextraParam123=_EM_6184_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6186_XYZ_")
                .delete(baseUrlOfSut + "/employees/-3835736285258531155?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 397 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_6190_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6192_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("_EM_6175_XYZ_"))
                .body("[0].'lastName'", containsString("_EM_6176_XYZ_"))
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", nullValue())
                .body("[1].'lastName'", nullValue())
                .body("[1].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/258")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -4532639620393836207 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_8 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1664() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9448_XYZ_\", " + 
                    " \"lastName\": \"_EM_9449_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9448_XYZ_"))
                .body("'lastName'", containsString("_EM_9449_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_9454_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/686")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 776 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9458_XYZ_\", " + 
                    " \"firstName\": \"_EM_9459_XYZ_\", " + 
                    " \"id\": 314 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9459_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_9458_XYZ_"));
        location_employees = "/employees" + "/" + res_4.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/314"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9459_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_9458_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1665() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3623_XYZ_\", " + 
                    " \"firstName\": \"_EM_3624_XYZ_\", " + 
                    " \"id\": 100, " + 
                    " \"lastName\": \"_EM_3625_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3624_XYZ_"))
                .body("'lastName'", containsString("_EM_3625_XYZ_"))
                .body("'emailId'", containsString("_EM_3623_XYZ_"));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3627_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_3626_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3629_XYZ_\", " + 
                    " \"id\": 580 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_3629_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3632_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_3634_XYZ_\", " + 
                    " \"id\": 442, " + 
                    " \"lastName\": \"_EM_3635_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/442")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3641_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_3637_XYZ_\", " + 
                    " \"lastName\": \"_EM_3639_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_3640_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3639_XYZ_"))
                .body("'emailId'", containsString("_EM_3637_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1666() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_14453_XYZ_\", " + 
                    " \"firstName\": \"CgLqdkDw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("CgLqdkDw"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_14453_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/58"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/895")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1667() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue());
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/74")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_IxD8qzOYbhTn\", " + 
                    " \"firstName\": \"oQOmJJa88KNVP76E\", " + 
                    " \"id\": 213, " + 
                    " \"lastName\": \"_EM_15360_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/213")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"McL5y\", " + 
                    " \"id\": -1580915230, " + 
                    " \"lastName\": \"x6KjAplKZqq\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("McL5y"))
                .body("'lastName'", containsString("x6KjAplKZqq"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_8 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/102")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1668() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7182_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_7181_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_7184_XYZ_\", " + 
                    " \"lastName\": \"_EM_7185_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7184_XYZ_"))
                .body("'lastName'", containsString("_EM_7185_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", containsString("_EM_7184_XYZ_"))
                .body("[0].'lastName'", containsString("_EM_7185_XYZ_"))
                .body("[0].'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7188_XYZ_")
                .delete(baseUrlOfSut + "/employees/1543844030?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7190_XYZ_")
                .get(baseUrlOfSut + "/employees/99")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7191_XYZ_\", " + 
                    " \"firstName\": \"_EM_7192_XYZ_\", " + 
                    " \"lastName\": \"_EM_7193_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/790")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_7194_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_8 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/5326880646303471140?EMextraParam123=_EM_7195_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_8.extract().statusCode()));
        
        ValidatableResponse res_9 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7198_XYZ_")
                .delete(baseUrlOfSut + "/employees/714?EMextraParam123=_EM_7197_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_9.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1669() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"knklHFeJuW\", " + 
                    " \"id\": 547122824, " + 
                    " \"lastName\": \"_EM_2092_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_2093_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("knklHFeJuW"))
                .body("'lastName'", containsString("_EM_2092_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2095_XYZ_\", " + 
                    " \"lastName\": \"_EM_2097_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/8238213111730081001?EMextraParam123=_EM_2098_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/-4640754522314072716"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_2103_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_2105_XYZ_\", " + 
                    " \"id\": 1, " + 
                    " \"lastName\": \"_EM_2106_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_2105_XYZ_"))
                .body("'lastName'", containsString("_EM_2106_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_2109_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", containsString("_EM_2105_XYZ_"))
                .body("[0].'lastName'", containsString("_EM_2106_XYZ_"))
                .body("[0].'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1670() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"6KS\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("6KS"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/162"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("6KS"));
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_2245_XYZ_\", " + 
                    " \"id\": -50037301, " + 
                    " \"lastName\": \"_EM_2247_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/-50037301?EMextraParam123=_EM_2248_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 580 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2255_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1671() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6337_XYZ_\", " + 
                    " \"lastName\": \"_EM_6339_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6339_XYZ_"))
                .body("'emailId'", containsString("_EM_6337_XYZ_"));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_6340_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6345_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6343_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6343_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/117")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 421, " + 
                    " \"lastName\": \"_EM_6348_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6348_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_5.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/421"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6348_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6349_XYZ_\", " + 
                    " \"lastName\": \"_EM_6351_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6351_XYZ_"))
                .body("'emailId'", containsString("_EM_6349_XYZ_"));
        location_employees = "/employees" + "/" + res_7.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/762?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_6351_XYZ_"))
                .body("'emailId'", containsString("_EM_6349_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6356_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_6352_XYZ_\", " + 
                    " \"firstName\": \"_EM_6353_XYZ_\", " + 
                    " \"id\": 447, " + 
                    " \"lastName\": \"_EM_6354_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6353_XYZ_"))
                .body("'lastName'", containsString("_EM_6354_XYZ_"))
                .body("'emailId'", containsString("_EM_6352_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1672() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\", " + 
                    " \"id\": 246 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString(""));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/246"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7360_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_7361_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 426, " + 
                    " \"lastName\": \"_EM_7364_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7364_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_4.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/426"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"lx\", " + 
                    " \"id\": 414, " + 
                    " \"lastName\": \"_EM_7366_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_7367_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7366_XYZ_"))
                .body("'emailId'", containsString("lx"));
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7369_XYZ_\", " + 
                    " \"id\": 168, " + 
                    " \"lastName\": \"_EM_7370_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_7370_XYZ_"))
                .body("'emailId'", containsString("_EM_7369_XYZ_"));
        location_employees = "/employees" + "/" + res_7.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/168?EMextraParam123=42"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1673() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_9309_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString(""))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/67")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_9313_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString(""))
                .body("[0].'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9314_XYZ_\", " + 
                    " \"id\": 385, " + 
                    " \"lastName\": \"_EM_9315_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9315_XYZ_"))
                .body("'emailId'", containsString("_EM_9314_XYZ_"));
        location_employees = "/employees" + "/" + res_3.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9317_XYZ_\", " + 
                    " \"id\": 385, " + 
                    " \"lastName\": \"_EM_9318_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/385"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9317_XYZ_"))
                .body("'lastName'", containsString("_EM_9318_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_9322_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/employees/303?EMextraParam123=_EM_9321_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1674() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 559 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3602_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_3601_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3605_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_3604_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3607_XYZ_")
                .delete(baseUrlOfSut + "/employees/398?EMextraParam123=_EM_3606_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/55")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_5.extract().statusCode()));
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_3610_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_3610_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_6.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -440866792 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/-440866792"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1675() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7010_XYZ_\", " + 
                    " \"id\": 8836374785678029589 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7010_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/8836374785678029589"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 264, " + 
                    " \"lastName\": \"_EM_7015_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/264?EMextraParam123=_EM_7016_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", containsString("_EM_7010_XYZ_"));
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7020_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_7020_XYZ_"));
        location_employees = "/employees" + "/" + res_4.extract().body().path("id").toString();
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/517586742"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_5.extract().statusCode()));
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7023_XYZ_\", " + 
                    " \"firstName\": \"_EM_7024_XYZ_\", " + 
                    " \"lastName\": \"W8IdGr1pKkZGIC\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_7024_XYZ_"))
                .body("'lastName'", containsString("W8IdGr1pKkZGIC"))
                .body("'emailId'", containsString("_EM_7023_XYZ_"));
        location_employees = "/employees" + "/" + res_6.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_7025_XYZ_\", " + 
                    " \"id\": 771, " + 
                    " \"lastName\": \"YT\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/771"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("YT"))
                .body("'emailId'", containsString("_EM_7025_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1676() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/734")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/-1068227118")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_12882_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_12882_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_4.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/901"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1677() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1621_XYZ_\", " + 
                    " \"id\": 606, " + 
                    " \"lastName\": \"_EM_1622_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1622_XYZ_"))
                .body("'emailId'", containsString("_EM_1621_XYZ_"));
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1624_XYZ_")
                .get(baseUrlOfSut + "/employees/172")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1626_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1628_XYZ_")
                .delete(baseUrlOfSut + "/employees/398")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_5.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"\", " + 
                    " \"firstName\": \"_EM_1629_XYZ_\", " + 
                    " \"id\": 749, " + 
                    " \"lastName\": \"_EM_1630_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1629_XYZ_"))
                .body("'lastName'", containsString("_EM_1630_XYZ_"))
                .body("'emailId'", containsString(""));
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_8 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1631_XYZ_\", " + 
                    " \"firstName\": \"_EM_1632_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1632_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1631_XYZ_"));
        location_employees = "/employees" + "/" + res_8.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/939?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1632_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1631_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1678() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1708_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_1707_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1710_XYZ_")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_1713_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1713_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/180"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1713_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1715_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_1714_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("_EM_1713_XYZ_"))
                .body("[0].'emailId'", nullValue());
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"bJqamSpBoq\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("bJqamSpBoq"));
        location_employees = "/employees" + "/" + res_5.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/583"))
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1720_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"4ywMItBp0Ba0I96\", " + 
                    " \"firstName\": \"_EM_1718_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1718_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("4ywMItBp0Ba0I96"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"tP0\", " + 
                    " \"id\": 927 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("tP0"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_9 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1679() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1270_XYZ_\", " + 
                    " \"firstName\": \"_EM_1271_XYZ_\", " + 
                    " \"lastName\": \"_EM_1272_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/15")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1279_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1275_XYZ_\", " + 
                    " \"firstName\": \"_EM_1276_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_1278_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1276_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1275_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"yRf\", " + 
                    " \"id\": 885 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/885")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_1284_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_1284_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_4.extract().body().path("id").toString();
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/-3324147931273735037?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1286_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_1285_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1680() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"0qiUqm02M99_lrnd\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("0qiUqm02M99_lrnd"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/12?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_4106_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4108_XYZ_\", " + 
                    " \"firstName\": \"_EM_4109_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=_EM_4111_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4109_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_4108_XYZ_"));
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4114_XYZ_")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_4113_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4116_XYZ_")
                .delete(baseUrlOfSut + "/employees/499?EMextraParam123=_EM_4115_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_5.extract().statusCode()));
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/407?EMextraParam123=_EM_4117_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_6.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1681() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Tn8VkeoxCsbr7\", " + 
                    " \"firstName\": \"_EM_14933_XYZ_\", " + 
                    " \"lastName\": \"uPFZf\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_14933_XYZ_"))
                .body("'lastName'", containsString("uPFZf"))
                .body("'emailId'", containsString("Tn8VkeoxCsbr7"));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_14935_XYZ_\", " + 
                    " \"id\": 935, " + 
                    " \"lastName\": \"_EM_14936_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_14935_XYZ_"))
                .body("'lastName'", containsString("_EM_14936_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_2.extract().body().path("id").toString();
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/935"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/622")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"VwnELticu1SL\", " + 
                    " \"lastName\": \"_EM_14937_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_14937_XYZ_"))
                .body("'emailId'", containsString("VwnELticu1SL"));
        location_employees = "/employees" + "/" + res_5.extract().body().path("id").toString();
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/341"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1682() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_990_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_1.extract().body().path("id").toString();
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/660"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/301?EMextraParam123=_EM_995_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_3.extract().statusCode()));
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_996_XYZ_")
                .delete(baseUrlOfSut + "/employees/158")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_998_XYZ_\", " + 
                    " \"id\": 9 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_998_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_5.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_employees, baseUrlOfSut + "/employees/9"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_998_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1000_XYZ_")
                .get(baseUrlOfSut + "/employees/317?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1683() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Wr74yPkuFDM_FDC1\", " + 
                    " \"firstName\": \"_EM_10928_XYZ_\", " + 
                    " \"id\": 876 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_10928_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("Wr74yPkuFDM_FDC1"));
        location_employees = "/employees" + "/" + res_1.extract().body().path("id").toString();
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/876"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1684() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_15290_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_15290_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/764"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"QEwm0n\", " + 
                    " \"lastName\": \"_EM_15293_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("QEwm0n"))
                .body("'lastName'", containsString("_EM_15293_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"JhT7Qn2c_\", " + 
                    " \"lastName\": \"FI_E8Ii5o7ODv\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("FI_E8Ii5o7ODv"))
                .body("'emailId'", containsString("JhT7Qn2c_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"JhT7Qn2c_\", " + 
                    " \"firstName\": \"FI_E8Ii5o7ODv\", " + 
                    " \"lastName\": \"To2yXAw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("FI_E8Ii5o7ODv"))
                .body("'lastName'", containsString("To2yXAw"))
                .body("'emailId'", containsString("JhT7Qn2c_"));
        
        
        ValidatableResponse res_6 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/-8990221223551583269")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_6.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1685() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_5024_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5026_XYZ_\", " + 
                    " \"firstName\": \"_EM_5027_XYZ_\", " + 
                    " \"lastName\": \"_EM_5028_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/192?EMextraParam123=_EM_5029_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5032_XYZ_\", " + 
                    " \"lastName\": \"_EM_5033_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5032_XYZ_"))
                .body("'lastName'", containsString("_EM_5033_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_5035_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/581")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_5.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5038_XYZ_\", " + 
                    " \"firstName\": \"_EM_5039_XYZ_\", " + 
                    " \"id\": 783 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/783")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_5043_XYZ_\", " + 
                    " \"lastName\": \"_EM_5044_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_5043_XYZ_"))
                .body("'lastName'", containsString("_EM_5044_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_7.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_5045_XYZ_\", " + 
                    " \"id\": 818, " + 
                    " \"lastName\": \"_EM_5046_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/818"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_5046_XYZ_"))
                .body("'emailId'", containsString("_EM_5045_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1686() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/873")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_10188_XYZ_\", " + 
                    " \"id\": 888, " + 
                    " \"lastName\": \"oARRFEUvIQ2W\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/888")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_10191_XYZ_\", " + 
                    " \"firstName\": \"UNwtyJUON4X\", " + 
                    " \"id\": 97 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("UNwtyJUON4X"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_10191_XYZ_"));
        location_employees = "/employees" + "/" + res_4.extract().body().path("id").toString();
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/97"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/482")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_8 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
    }
    
    
    @Test(timeout = 60000)
    public void test_1687() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9607_XYZ_\", " + 
                    " \"firstName\": \"_EM_9608_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9608_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_9607_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/391"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"r7lAVTRTn4c3hYHd\", " + 
                    " \"firstName\": \"_EM_9610_XYZ_\", " + 
                    " \"id\": 225 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/225")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_9613_XYZ_\", " + 
                    " \"lastName\": \"_EM_9614_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/942")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/77")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1688() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1135_XYZ_")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_1136_XYZ_\", " + 
                    " \"firstName\": \"_EM_1137_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1137_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_1136_XYZ_"));
        location_employees = "/employees" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_1140_XYZ_\", " + 
                    " \"id\": 280, " + 
                    " \"lastName\": \"_EM_1141_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/280"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_1140_XYZ_"))
                .body("'lastName'", containsString("_EM_1141_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"oWnFR5HU3XMGC\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("oWnFR5HU3XMGC"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"Q4PVSju\", " + 
                    " \"firstName\": \"oWnFR5HU3XMGC\", " + 
                    " \"id\": 190 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("oWnFR5HU3XMGC"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("Q4PVSju"));
        
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=_EM_1143_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -2137607100, " + 
                    " \"lastName\": \"_EM_1146_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/-2137607100")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1689() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6686_XYZ_\", " + 
                    " \"lastName\": \"_EM_6687_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6686_XYZ_"))
                .body("'lastName'", containsString("_EM_6687_XYZ_"))
                .body("'emailId'", nullValue());
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_employees, baseUrlOfSut + "/employees/147"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_6689_XYZ_\", " + 
                    " \"id\": 35, " + 
                    " \"lastName\": \"9Z7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_6689_XYZ_"))
                .body("'lastName'", containsString("9Z7"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6691_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_6690_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/807?EMextraParam123=_EM_6692_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/493")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/41?EMextraParam123=_EM_6695_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_7.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1690() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1661059288, " + 
                    " \"lastName\": \"CmTgbbQFYIhOhe5\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("CmTgbbQFYIhOhe5"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"CmTgbbQFYIhOhe5\", " + 
                    " \"id\": -1661059288, " + 
                    " \"lastName\": \"_EM_9507_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("CmTgbbQFYIhOhe5"))
                .body("'lastName'", containsString("_EM_9507_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", nullValue())
                .body("[0].'lastName'", containsString("CmTgbbQFYIhOhe5"))
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", containsString("CmTgbbQFYIhOhe5"))
                .body("[1].'lastName'", containsString("_EM_9507_XYZ_"))
                .body("[1].'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/424")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_4 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/993")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9514_XYZ_\", " + 
                    " \"firstName\": \"j7m3XVRR\", " + 
                    " \"lastName\": \"_EM_9515_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("j7m3XVRR"))
                .body("'lastName'", containsString("_EM_9515_XYZ_"))
                .body("'emailId'", containsString("_EM_9514_XYZ_"));
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_9517_XYZ_\", " + 
                    " \"firstName\": \"_EM_9518_XYZ_\", " + 
                    " \"id\": 228 " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_9518_XYZ_"))
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_9517_XYZ_"));
        location_employees = "/employees" + "/" + res_7.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"lastName\": \"_EM_9521_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/228"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("_EM_9521_XYZ_"))
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"ZCLOUyL2U05\", " + 
                    " \"id\": -4176757373537770932 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/-4176757373537770932")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1691() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"vl\", " + 
                    " \"firstName\": \"_EM_4064_XYZ_\", " + 
                    " \"lastName\": \"_EM_4065_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4064_XYZ_"))
                .body("'lastName'", containsString("_EM_4065_XYZ_"))
                .body("'emailId'", containsString("vl"));
        location_employees = "/employees" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"Wr5ji4w3DSif0x\", " + 
                    " \"id\": 289 " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/289?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("Wr5ji4w3DSif0x"))
                .body("'lastName'", nullValue())
                .body("'emailId'", nullValue());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4067_XYZ_\", " + 
                    " \"firstName\": \"_EM_4068_XYZ_\", " + 
                    " \"id\": 10, " + 
                    " \"lastName\": \"_EM_4069_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_4068_XYZ_"))
                .body("'lastName'", containsString("_EM_4069_XYZ_"))
                .body("'emailId'", containsString("_EM_4067_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("Wr5ji4w3DSif0x"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", containsString("_EM_4068_XYZ_"))
                .body("[1].'lastName'", containsString("_EM_4069_XYZ_"))
                .body("[1].'emailId'", containsString("_EM_4067_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_4070_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("Wr5ji4w3DSif0x"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", containsString("_EM_4068_XYZ_"))
                .body("[1].'lastName'", containsString("_EM_4069_XYZ_"))
                .body("[1].'emailId'", containsString("_EM_4067_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_4072_XYZ_\", " + 
                    " \"firstName\": \"_EM_4073_XYZ_\", " + 
                    " \"id\": 513 " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/513?EMextraParam123=_EM_4075_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_7 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/employees/159?EMextraParam123=_EM_4076_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_7.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4078_XYZ_")
                .get(baseUrlOfSut + "/employees?EMextraParam123=_EM_4077_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'firstName'", containsString("Wr5ji4w3DSif0x"))
                .body("[0].'lastName'", nullValue())
                .body("[0].'emailId'", nullValue())
                .body("[1].'firstName'", containsString("_EM_4068_XYZ_"))
                .body("[1].'lastName'", containsString("_EM_4069_XYZ_"))
                .body("[1].'emailId'", containsString("_EM_4067_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1692() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_employees = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8991_XYZ_\", " + 
                    " \"id\": 379, " + 
                    " \"lastName\": \"PWL6bFKhnw3tV\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", containsString("PWL6bFKhnw3tV"))
                .body("'emailId'", containsString("_EM_8991_XYZ_"));
        location_employees = "/employees" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"emailId\": \"_EM_8993_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_employees, baseUrlOfSut + "/employees/379?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", nullValue())
                .body("'lastName'", nullValue())
                .body("'emailId'", containsString("_EM_8993_XYZ_"));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_8997_XYZ_\", " + 
                    " \"lastName\": \"yT3WyPHRTivg\" " + 
                    " } ")
                .post(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'firstName'", containsString("_EM_8997_XYZ_"))
                .body("'lastName'", containsString("yT3WyPHRTivg"))
                .body("'emailId'", nullValue());
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'deleted'", equalTo(true));
        
        expectationHandler.expect(ems);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/201?EMextraParam123=_EM_9000_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/965")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_9008_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/employees/837")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        
        ValidatableResponse res_9 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/208")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_9.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1693() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/employees/-3420035943853631274")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1694() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/employees/233?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1695() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_15_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"firstName\": \"_EM_12_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/employees/3574341406807560924?EMextraParam123=_EM_14_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("text/html");
        
    }


}
